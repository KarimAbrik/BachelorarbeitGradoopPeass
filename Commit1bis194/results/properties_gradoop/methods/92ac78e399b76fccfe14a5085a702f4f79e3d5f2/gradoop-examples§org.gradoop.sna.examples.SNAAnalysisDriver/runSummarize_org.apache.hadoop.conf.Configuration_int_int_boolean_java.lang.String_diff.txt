                                                                                                     | /**                                                                                                 
                                                                                                     | * runs Summarize MapReduce job                                                                      
                                                                                                     | *                                                                                                   
                                                                                                     | * @param conf      hadoop conf                                                                      
                                                                                                     | * @param scanCache scan cache size                                                                  
                                                                                                     | * @param reducers  reducer class                                                                    
                                                                                                     | * @param verbose   verbose                                                                          
                                                                                                     | * @param path      output path                                                                      
                                                                                                     | * @return true, if the job completed successfully, false otherwise                                  
                                                                                                     | * @throws IOException                                                                               
                                                                                                     | * @throws ClassNotFoundException                                                                    
                                                                                                     | * @throws InterruptedException                                                                      
                                                                                                     | */                                                                                                  
private boolean runSummarize(Configuration conf, int scanCache, int reducers, boolean verbose, Strin   private boolean runSummarize(Configuration conf, int scanCache, int reducers, boolean verbose, Strin
Path outputPath = new Path(path);                                                                      Path outputPath = new Path(path);                                                                   
/*                                                                                                     /*                                                                                                  
mapper settings                                                                                        mapper settings                                                                                     
*/                                                                                                     */                                                                                                  
// vertex handler                                                                                      // vertex handler                                                                                   
conf.setClass(GConstants.VERTEX_HANDLER_CLASS, EPGVertexHandler.class, VertexHandler.class);           conf.setClass(GConstants.VERTEX_HANDLER_CLASS, EPGVertexHandler.class, VertexHandler.class);        
/*                                                                                                     /*                                                                                                  
reducer settings                                                                                       reducer settings                                                                                    
*/                                                                                                     */                                                                                                  
// graph handler                                                                                       // graph handler                                                                                    
conf.setClass(GConstants.GRAPH_HANDLER_CLASS, EPGGraphHandler.class, GraphHandler.class);              conf.setClass(GConstants.GRAPH_HANDLER_CLASS, EPGGraphHandler.class, GraphHandler.class);           
Job job = Job.getInstance(conf, JOB_PREFIX + Summarize.class.getName());                               Job job = Job.getInstance(conf, JOB_PREFIX + Summarize.class.getName());                            
Scan scan = new Scan();                                                                                Scan scan = new Scan();                                                                             
scan.setCaching(scanCache);                                                                            scan.setCaching(scanCache);                                                                         
scan.setCacheBlocks(false);                                                                            scan.setCacheBlocks(false);                                                                         
// map                                                                                                 // map                                                                                              
TableMapReduceUtil.initTableMapperJob(GConstants.DEFAULT_TABLE_VERTICES, scan, Summarize.SelectMappe   TableMapReduceUtil.initTableMapperJob(GConstants.DEFAULT_TABLE_VERTICES, scan, Summarize.SelectMappe
// reduce                                                                                              // reduce                                                                                           
//    TableMapReduceUtil.initTableReducerJob(GConstants.DEFAULT_TABLE_GRAPHS,                          //    TableMapReduceUtil.initTableReducerJob(GConstants.DEFAULT_TABLE_GRAPHS,                       
//      Summarize.TextReducer.class, job);                                                             //      Summarize.TextReducer.class, job);                                                          
job.setReducerClass(Summarize.TextReducer.class);                                                      job.setReducerClass(Summarize.TextReducer.class);                                                   
job.setNumReduceTasks(reducers);                                                                       job.setNumReduceTasks(reducers);                                                                    
job.setOutputFormatClass(TextOutputFormat.class);                                                      job.setOutputFormatClass(TextOutputFormat.class);                                                   
conf.set(TextOutputFormat.SEPERATOR, " ");                                                             conf.set(TextOutputFormat.SEPERATOR, " ");                                                          
FileOutputFormat.setOutputPath(job, outputPath);                                                       FileOutputFormat.setOutputPath(job, outputPath);                                                    
// run                                                                                                 // run                                                                                              
return job.waitForCompletion(verbose);                                                                 return job.waitForCompletion(verbose);                                                              
}                                                                                                      }                                                                                                   
