/**
 * Calculates a weight for each partition based on the partition frequency
 * and the number of outgoing edges of that vertex.
 *
 * @param partitionFrequencies partition frequencies
 * @param numEdges             number of outgoing edges
 * @return partition weights
 */
private double[] getPartitionWeights(int[] partitionFrequencies, int numEdges) {
    double[] partitionWeights = new double[k];
    for (int i = 0; i < k; i++) {
        int load = getPartitionLoad(i);
        int freq = partitionFrequencies[i];
        double weight = (double) freq / (load * numEdges);
        partitionWeights[i] = weight;
    }
    return partitionWeights;
}