@Override                                                                                              @Override                                                                                           
public void initialize(GraphState graphState, WorkerClientRequestProcessor&lt;IntWritable, Partition   public void initialize(GraphState graphState, WorkerClientRequestProcessor&lt;IntWritable, Partition
super.initialize(graphState, workerClientRequestProcessor, graphTaskManager, workerGlobalCommUsage,    super.initialize(graphState, workerClientRequestProcessor, graphTaskManager, workerGlobalCommUsage, 
this.k = getConf().getInt(NUMBER_OF_PARTITIONS, DEFAULT_NUMBER_OF_PARTITIONS);                         this.k = getConf().getInt(NUMBER_OF_PARTITIONS, DEFAULT_NUMBER_OF_PARTITIONS);                      
this.stabilizationRoundMax = getConf().getInt(NUMBER_OF_STABILIZATION_ROUNDS, DEFAULT_NUMBER_OF_STAB   this.stabilizationRoundMax = getConf().getInt(NUMBER_OF_STABILIZATION_ROUNDS, DEFAULT_NUMBER_OF_STAB
this.capacityThreshold = getConf().getFloat(CAPACITY_THRESHOLD, DEFAULT_CAPACITY_THRESHOLD);           this.capacityThreshold = getConf().getFloat(CAPACITY_THRESHOLD, DEFAULT_CAPACITY_THRESHOLD);        
this.isPartitioned = getConf().getBoolean(AdaptiveRepartitioningInputFormat.PARTITIONED_INPUT, Adapt   this.isPartitioned = getConf().getBoolean(AdaptiveRepartitioningInputFormat.PARTITIONED_INPUT, Adapt
                                                                                                     | this.seed = getConf().getLong(SEED, DEFAULT_SEED);                                                  
                                                                                                     | if (seed != 0) {                                                                                    
                                                                                                     | random = new Random(seed);                                                                          
                                                                                                     | } else {                                                                                            
                                                                                                     | random = new Random();                                                                              
}                                                                                                      }                                                                                                   
                                                                                                     | }                                                                                                   
