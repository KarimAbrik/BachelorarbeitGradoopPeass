@Test                                                                                                  @Test                                                                                               
public void checkSimpleRDFNTripleInputTest() {                                                         public void checkSimpleRDFNTripleInputTest() {                                                      
for (Vertex v : createVerticesFromRDF()) {                                                             for (Vertex v : createVerticesFromRDF()) {                                                          
long id = v.getID();                                                                                 | long id = v.getId();                                                                                
if (id == lgdID) {                                                                                     if (id == lgdID) {                                                                                  
checkLabel(v, lgd);                                                                                    checkLabel(v, lgd);                                                                                 
for (Edge e : v.getOutgoingEdges()) {                                                                  for (Edge e : v.getOutgoingEdges()) {                                                               
assertEquals(e.getOtherID(), geoID);                                                                   assertEquals(e.getOtherID(), geoID);                                                                
assertEquals(e.getLabel(), eLabel);                                                                    assertEquals(e.getLabel(), eLabel);                                                                 
}                                                                                                      }                                                                                                   
} else if (id == geoID) {                                                                              } else if (id == geoID) {                                                                           
checkLabel(v, geo);                                                                                    checkLabel(v, geo);                                                                                 
for (Edge e : v.getIncomingEdges()) {                                                                  for (Edge e : v.getIncomingEdges()) {                                                               
assertTrue((long) e.getOtherID() == lgdID || (long) e.getOtherID() == dbpID);                          assertTrue((long) e.getOtherID() == lgdID || (long) e.getOtherID() == dbpID);                       
assertEquals(e.getLabel(), eLabel);                                                                    assertEquals(e.getLabel(), eLabel);                                                                 
}                                                                                                      }                                                                                                   
} else if (id == dbpID) {                                                                              } else if (id == dbpID) {                                                                           
checkLabel(v, dbp);                                                                                    checkLabel(v, dbp);                                                                                 
if (v.getOutgoingDegree() &lt; 1) {                                                                    if (v.getOutgoingDegree() &lt; 1) {                                                                 
for (String prop : v.getPropertyKeys()) {                                                              for (String prop : v.getPropertyKeys()) {                                                           
if (prop.equals(post)) {                                                                               if (prop.equals(post)) {                                                                            
assertEquals(v.getProperty(prop), postVal);                                                            assertEquals(v.getProperty(prop), postVal);                                                         
} else if (prop.equals(pop)) {                                                                         } else if (prop.equals(pop)) {                                                                      
assertEquals(v.getProperty(prop), popVal);                                                             assertEquals(v.getProperty(prop), popVal);                                                          
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
} else {                                                                                               } else {                                                                                            
for (Edge e : v.getOutgoingEdges()) {                                                                  for (Edge e : v.getOutgoingEdges()) {                                                               
assertTrue((long) e.getOtherID() == geoID || (long) e.getOtherID() == hedbpID);                        assertTrue((long) e.getOtherID() == geoID || (long) e.getOtherID() == hedbpID);                     
assertEquals(e.getLabel(), eLabel);                                                                    assertEquals(e.getLabel(), eLabel);                                                                 
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
} else if (id == hedbpID) {                                                                            } else if (id == hedbpID) {                                                                         
checkLabel(v, hedbp);                                                                                  checkLabel(v, hedbp);                                                                               
for (Edge e : v.getIncomingEdges()) {                                                                  for (Edge e : v.getIncomingEdges()) {                                                               
assertEquals(e.getOtherID(), dbpID);                                                                   assertEquals(e.getOtherID(), dbpID);                                                                
assertEquals(e.getLabel(), eLabel);                                                                    assertEquals(e.getLabel(), eLabel);                                                                 
}                                                                                                      }                                                                                                   
} else {                                                                                               } else {                                                                                            
assertTrue("wrong triple contained", false);                                                           assertTrue("wrong triple contained", false);                                                        
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
