@Test                                                                                                  @Test                                                                                               
public void propertyTypeTest() {                                                                       public void propertyTypeTest() {                                                                    
GraphStore graphStore = createEmptyGraphStore();                                                       GraphStore graphStore = createEmptyGraphStore();                                                    
final int propertyCount = 6;                                                                           final int propertyCount = 6;                                                                        
final String keyBoolean = "key1";                                                                      final String keyBoolean = "key1";                                                                   
final boolean valueBoolean = true;                                                                     final boolean valueBoolean = true;                                                                  
final String keyInteger = "key2";                                                                      final String keyInteger = "key2";                                                                   
final int valueInteger = 23;                                                                           final int valueInteger = 23;                                                                        
final String keyLong = "key3";                                                                         final String keyLong = "key3";                                                                      
final long valueLong = 42L;                                                                            final long valueLong = 42L;                                                                         
final String keyFloat = "key4";                                                                        final String keyFloat = "key4";                                                                     
final float valueFloat = 13.37f;                                                                       final float valueFloat = 13.37f;                                                                    
final String keyDouble = "key5";                                                                       final String keyDouble = "key5";                                                                    
final double valueDouble = 3.14d;                                                                      final double valueDouble = 3.14d;                                                                   
final String keyString = "key6";                                                                       final String keyString = "key6";                                                                    
final String valueString = "value";                                                                    final String valueString = "value";                                                                 
final Long vertexID = 0L;                                                                              final Long vertexID = 0L;                                                                           
final Iterable&lt;String&gt; labels = Lists.newArrayList("A");                                       | final String label = "A";                                                                           
final Map&lt;String, Object&gt; properties = new HashMap&lt;&gt;();                                    final Map&lt;String, Object&gt; properties = new HashMap&lt;&gt;();                                 
properties.put(keyBoolean, valueBoolean);                                                              properties.put(keyBoolean, valueBoolean);                                                           
properties.put(keyInteger, valueInteger);                                                              properties.put(keyInteger, valueInteger);                                                           
properties.put(keyLong, valueLong);                                                                    properties.put(keyLong, valueLong);                                                                 
properties.put(keyFloat, valueFloat);                                                                  properties.put(keyFloat, valueFloat);                                                               
properties.put(keyDouble, valueDouble);                                                                properties.put(keyDouble, valueDouble);                                                             
properties.put(keyString, valueString);                                                                properties.put(keyString, valueString);                                                             
final Iterable&lt;Edge&gt; outEdges = Lists.newArrayListWithCapacity(0);                               final Iterable&lt;Edge&gt; outEdges = Lists.newArrayListWithCapacity(0);                            
final Iterable&lt;Edge&gt; inEdges = Lists.newArrayListWithCapacity(0);                                final Iterable&lt;Edge&gt; inEdges = Lists.newArrayListWithCapacity(0);                             
final Iterable&lt;Long&gt; graphs = Lists.newArrayList();                                              final Iterable&lt;Long&gt; graphs = Lists.newArrayList();                                           
Vertex v = VertexFactory.createDefaultVertex(vertexID, labels, properties, outEdges, inEdges, graphs | Vertex v = VertexFactory.createDefaultVertex(vertexID, label, properties, outEdges, inEdges, graphs)
graphStore.writeVertex(v);                                                                             graphStore.writeVertex(v);                                                                          
// reopen                                                                                              // reopen                                                                                           
graphStore.close();                                                                                    graphStore.close();                                                                                 
graphStore = openGraphStore();                                                                         graphStore = openGraphStore();                                                                      
v = graphStore.readVertex(vertexID);                                                                   v = graphStore.readVertex(vertexID);                                                                
List&lt;String&gt; propertyKeys = Lists.newArrayList(v.getPropertyKeys());                             List&lt;String&gt; propertyKeys = Lists.newArrayList(v.getPropertyKeys());                          
assertEquals(propertyCount, propertyKeys.size());                                                      assertEquals(propertyCount, propertyKeys.size());                                                   
for (String propertyKey : propertyKeys) {                                                              for (String propertyKey : propertyKeys) {                                                           
switch(propertyKey) {                                                                                  switch(propertyKey) {                                                                               
case keyBoolean:                                                                                       case keyBoolean:                                                                                    
assertEquals(valueBoolean, v.getProperty(propertyKey));                                                assertEquals(valueBoolean, v.getProperty(propertyKey));                                             
break;                                                                                                 break;                                                                                              
case keyInteger:                                                                                       case keyInteger:                                                                                    
assertEquals(valueInteger, v.getProperty(keyInteger));                                                 assertEquals(valueInteger, v.getProperty(keyInteger));                                              
break;                                                                                                 break;                                                                                              
case keyLong:                                                                                          case keyLong:                                                                                       
assertEquals(valueLong, v.getProperty(keyLong));                                                       assertEquals(valueLong, v.getProperty(keyLong));                                                    
break;                                                                                                 break;                                                                                              
case keyFloat:                                                                                         case keyFloat:                                                                                      
assertEquals(valueFloat, v.getProperty(keyFloat));                                                     assertEquals(valueFloat, v.getProperty(keyFloat));                                                  
break;                                                                                                 break;                                                                                              
case keyDouble:                                                                                        case keyDouble:                                                                                     
assertEquals(valueDouble, v.getProperty(keyDouble));                                                   assertEquals(valueDouble, v.getProperty(keyDouble));                                                
break;                                                                                                 break;                                                                                              
case keyString:                                                                                        case keyString:                                                                                     
assertEquals(valueString, v.getProperty(keyString));                                                   assertEquals(valueString, v.getProperty(keyString));                                                
break;                                                                                                 break;                                                                                              
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
