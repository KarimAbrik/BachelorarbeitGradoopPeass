/**                                                                                                    /**                                                                                                 
* Starting point for BTG analysis pipeline.                                                            * Starting point for BTG analysis pipeline.                                                         
*                                                                                                      *                                                                                                   
* @param args driver arguments                                                                         * @param args driver arguments                                                                      
* @return Exit code (0 - ok)                                                                           * @return Exit code (0 - ok)                                                                        
* @throws Exception                                                                                    * @throws Exception                                                                                 
*/                                                                                                     */                                                                                                  
@Override                                                                                              @Override                                                                                           
public int run(String[] args) throws Exception {                                                       public int run(String[] args) throws Exception {                                                    
Configuration conf = getConf();                                                                        Configuration conf = getConf();                                                                     
CommandLine cmd = ConfigurationUtils.parseArgs(args);                                                  CommandLine cmd = ConfigurationUtils.parseArgs(args);                                               
if (cmd == null) {                                                                                     if (cmd == null) {                                                                                  
return 0;                                                                                              return 0;                                                                                           
}                                                                                                      }                                                                                                   
boolean verbose = cmd.hasOption(ConfigurationUtils.OPTION_VERBOSE);                                    boolean verbose = cmd.hasOption(ConfigurationUtils.OPTION_VERBOSE);                                 
/*                                                                                                     /*                                                                                                  
Step 0: Delete (if exists) and create HBase tables                                                     Step 0: Delete (if exists) and create HBase tables                                                  
*/                                                                                                     */                                                                                                  
if (cmd.hasOption(ConfigurationUtils.OPTION_DROP_TABLES)) {                                            if (cmd.hasOption(ConfigurationUtils.OPTION_DROP_TABLES)) {                                         
HBaseGraphStoreFactory.deleteGraphStore(conf);                                                         HBaseGraphStoreFactory.deleteGraphStore(conf);                                                      
}                                                                                                      }                                                                                                   
HBaseGraphStoreFactory.createOrOpenGraphStore(conf, new EPGVertexHandler(), new EPGGraphHandler());    HBaseGraphStoreFactory.createOrOpenGraphStore(conf, new EPGVertexHandler(), new EPGGraphHandler()); 
/*                                                                                                     /*                                                                                                  
Step 1: Bulk Load of the graph into HBase using MapReduce                                              Step 1: Bulk Load of the graph into HBase using MapReduce                                           
*/                                                                                                     */                                                                                                  
String inputPath = cmd.getOptionValue(ConfigurationUtils.OPTION_GRAPH_INPUT_PATH);                     String inputPath = cmd.getOptionValue(ConfigurationUtils.OPTION_GRAPH_INPUT_PATH);                  
String outputPath = cmd.getOptionValue(ConfigurationUtils.OPTION_GRAPH_OUTPUT_PATH);                   String outputPath = cmd.getOptionValue(ConfigurationUtils.OPTION_GRAPH_OUTPUT_PATH);                
if (!runBulkLoad(conf, inputPath, outputPath, verbose)) {                                              if (!runBulkLoad(conf, inputPath, outputPath, verbose)) {                                           
return -1;                                                                                             return -1;                                                                                          
}                                                                                                      }                                                                                                   
/*                                                                                                     /*                                                                                                  
Step 2: BTG Computation using Giraph                                                                   Step 2: BTG Computation using Giraph                                                                
*/                                                                                                     */                                                                                                  
int workers = Integer.parseInt(cmd.getOptionValue(ConfigurationUtils.OPTION_WORKERS));                 int workers = Integer.parseInt(cmd.getOptionValue(ConfigurationUtils.OPTION_WORKERS));              
if (!runBTGComputation(conf, workers, verbose)) {                                                      if (!runBTGComputation(conf, workers, verbose)) {                                                   
return -1;                                                                                             return -1;                                                                                          
}                                                                                                      }                                                                                                   
/*                                                                                                     /*                                                                                                  
Step 3: Select And Aggregate using MapReduce                                                           Step 3: Select And Aggregate using MapReduce                                                        
*/                                                                                                     */                                                                                                  
int scanCache = Integer.parseInt(cmd.getOptionValue(ConfigurationUtils.OPTION_HBASE_SCAN_CACHE, "500   int scanCache = Integer.parseInt(cmd.getOptionValue(ConfigurationUtils.OPTION_HBASE_SCAN_CACHE, "500
int reducers = Integer.parseInt(cmd.getOptionValue(ConfigurationUtils.OPTION_REDUCERS, "1"));          int reducers = Integer.parseInt(cmd.getOptionValue(ConfigurationUtils.OPTION_REDUCERS, "1"));       
if (!runSelectAndAggregate(conf, scanCache, reducers, verbose)) {                                      if (!runSelectAndAggregate(conf, scanCache, reducers, verbose)) {                                   
return -1;                                                                                             return -1;                                                                                          
}                                                                                                      }                                                                                                   
                                                                                                     | /*                                                                                                  
                                                                                                     | Step 4: Sort graphs by profit                                                                       
                                                                                                     | */                                                                                                  
                                                                                                     | if (!runSort(conf, scanCache, verbose)) {                                                           
                                                                                                     | return -1;                                                                                          
                                                                                                     | }                                                                                                   
return 0;                                                                                              return 0;                                                                                           
}                                                                                                      }                                                                                                   
