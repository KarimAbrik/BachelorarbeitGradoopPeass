{
  "url" : "https://github.com/dbs-leipzig/gradoop.git",
  "testGoal" : null,
  "initialcommit" : {
    "commit" : "d5bc5baeb00b670f64e09071bfaab76b4377c278",
    "jdk" : 8,
    "initialDependencies" : {
      "gradoop-core§org.gradoop.drivers.BulkLoadDriverTest#testBulkLoadDriver" : {
        "entities" : [ {
          "clazz" : "org.gradoop.GradoopClusterTest",
          "module" : "gradoop-core",
          "method" : "copyFromLocal",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkDriver",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkDriver",
          "module" : "gradoop-core",
          "method" : "getGraphsTableName",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkDriver",
          "module" : "gradoop-core",
          "method" : "getHadoopConf",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkDriver",
          "module" : "gradoop-core",
          "method" : "getInputPath",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkDriver",
          "module" : "gradoop-core",
          "method" : "getOutputPath",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkDriver",
          "module" : "gradoop-core",
          "method" : "getVerbose",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkDriver",
          "module" : "gradoop-core",
          "method" : "getVerticesTableName",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkDriver",
          "module" : "gradoop-core",
          "method" : "parseArgs",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkDriver$ConfUtils",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkDriver$ConfUtils",
          "module" : "gradoop-core",
          "method" : "parseArgs",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkLoadDriver",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkLoadDriver",
          "module" : "gradoop-core",
          "method" : "createGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "boolean", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkLoadDriver",
          "module" : "gradoop-core",
          "method" : "getLineReaderClass",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkLoadDriver",
          "module" : "gradoop-core",
          "method" : "performSanityCheck",
          "parameters" : [ "org.apache.commons.cli.CommandLine" ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkLoadDriver",
          "module" : "gradoop-core",
          "method" : "run",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkLoadDriver",
          "module" : "gradoop-core",
          "method" : "runBulkLoad",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "java.lang.Class", "java.lang.String", "java.lang.String", "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkLoadDriver$LoadConfUtils",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkLoadDriverTest",
          "module" : "gradoop-core",
          "method" : "testBulkLoadDriver",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.apache.hadoop.hbase.client.HTable", "org.apache.hadoop.hbase.client.HTable", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createOrOpenGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createTablesIfNotExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteTablesIfExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "java.lang.String", "java.lang.String" ]
        } ]
      },
      "gradoop-core§org.gradoop.drivers.BulkWriteDriverTest#testBulkWriteDriver" : {
        "entities" : [ {
          "clazz" : "org.gradoop.GradoopClusterTest",
          "module" : "gradoop-core",
          "method" : "createEmptyGraphStore",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createBasicGraphVertices",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createVertices",
          "parameters" : [ "java.lang.String[]", "org.gradoop.io.reader.VertexLineReader" ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkDriver",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkDriver",
          "module" : "gradoop-core",
          "method" : "getHadoopConf",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkDriver",
          "module" : "gradoop-core",
          "method" : "getOutputPath",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkDriver",
          "module" : "gradoop-core",
          "method" : "getVerbose",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkDriver",
          "module" : "gradoop-core",
          "method" : "parseArgs",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkDriver$ConfUtils",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkDriver$ConfUtils",
          "module" : "gradoop-core",
          "method" : "parseArgs",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkWriteDriver",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkWriteDriver",
          "module" : "gradoop-core",
          "method" : "getLineWriterClass",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkWriteDriver",
          "module" : "gradoop-core",
          "method" : "performSanityCheck",
          "parameters" : [ "org.apache.commons.cli.CommandLine" ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkWriteDriver",
          "module" : "gradoop-core",
          "method" : "run",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkWriteDriver",
          "module" : "gradoop-core",
          "method" : "runBulkWrite",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "java.lang.Class", "java.lang.String", "int", "boolean" ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkWriteDriver$LoadConfUtils",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkWriteDriverTest",
          "module" : "gradoop-core",
          "method" : "testBulkWriteDriver",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.SimpleVertexReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.SimpleVertexReader",
          "module" : "gradoop-core",
          "method" : "getTokens",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.SimpleVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.SingleVertexReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getIndex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getOtherID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getId",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyKeys",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexWithEdges",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexWithOutgoingEdges",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeLabel",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Labeled" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperties",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Attributed" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgeIdentifier",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgePropertiesString",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "getRowKey",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdge",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeGraphs",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.GraphElement" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeIncomingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeOutgoingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.apache.hadoop.hbase.client.HTable", "org.apache.hadoop.hbase.client.HTable", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createOrOpenGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createOrOpenGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createTablesIfNotExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteTablesIfExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "java.lang.String", "java.lang.String" ]
        } ]
      },
      "gradoop-core§org.gradoop.io.reader.AdjacencyListReaderTest#writeReadExtendedGraphTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.GradoopClusterTest",
          "module" : "gradoop-core",
          "method" : "createEmptyGraphStore",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createTestReader",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "getCallingMethod",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "getTempFile",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "getTempFile",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "testEdge",
          "parameters" : [ "java.util.List", "java.lang.Long", "java.lang.String", "java.lang.Long", "int" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "testProperties",
          "parameters" : [ "org.gradoop.model.Attributed", "int" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "validateExtendedGraphVertices",
          "parameters" : [ "java.util.List" ]
        }, {
          "clazz" : "org.gradoop.io.reader.AdjacencyListReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.gradoop.storage.GraphStore", "org.gradoop.io.reader.VertexLineReader" ]
        }, {
          "clazz" : "org.gradoop.io.reader.AdjacencyListReader",
          "module" : "gradoop-core",
          "method" : "read",
          "parameters" : [ "java.io.BufferedReader" ]
        }, {
          "clazz" : "org.gradoop.io.reader.AdjacencyListReaderTest",
          "module" : "gradoop-core",
          "method" : "writeReadExtendedGraphTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "decodeValue",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "getLineTokens",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readEdges",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readGraphs",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readProperties",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertexID",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "supportsVertexLists",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "equals",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getIndex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getOtherID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getId",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getProperty",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyKeys",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "decodeValueFromBytes",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "decodeValueFromString",
          "parameters" : [ "byte", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "encodeValueToBytes",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "getColumnKeysFromFamily",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result", "byte[]" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "getType",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "readLabel",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "readProperties",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeLabel",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Labeled" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperties",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Attributed" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperty",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.String", "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgeIdentifier",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgePropertiesString",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "getRowKey",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readEdge",
          "parameters" : [ "byte[]", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result", "byte[]" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readGraphs",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readIncomingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readOutgoingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdge",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeGraphs",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.GraphElement" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeIncomingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeOutgoingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.apache.hadoop.hbase.client.HTable", "org.apache.hadoop.hbase.client.HTable", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createOrOpenGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createOrOpenGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createTablesIfNotExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteTablesIfExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "java.lang.String", "java.lang.String" ]
        } ]
      },
      "gradoop-core§org.gradoop.io.reader.BulkLoadTest#bulkLoadTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.GradoopClusterTest",
          "module" : "gradoop-core",
          "method" : "createEmptyGraphStore",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createTestReader",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "getCallingMethod",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "getTempFile",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "getTempFile",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.BulkLoadTest",
          "module" : "gradoop-core",
          "method" : "bulkLoadTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.apache.hadoop.hbase.client.HTable", "org.apache.hadoop.hbase.client.HTable", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createOrOpenGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createOrOpenGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createTablesIfNotExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteTablesIfExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "java.lang.String", "java.lang.String" ]
        } ]
      },
      "gradoop-core§org.gradoop.io.reader.EPGVertexReaderTest#readExtendedGraphTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "testEdge",
          "parameters" : [ "java.util.List", "java.lang.Long", "java.lang.String", "java.lang.Long", "int" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "testProperties",
          "parameters" : [ "org.gradoop.model.Attributed", "int" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "validateExtendedGraphVertices",
          "parameters" : [ "java.util.List" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "decodeValue",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "getLineTokens",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readEdges",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readGraphs",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readProperties",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertexID",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReaderTest",
          "module" : "gradoop-core",
          "method" : "readExtendedGraphTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "equals",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getId",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getProperty",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyKeys",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        } ]
      },
      "gradoop-core§org.gradoop.io.reader.JsonReaderTest#testReader" : {
        "entities" : [ {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "testEdge",
          "parameters" : [ "java.util.List", "java.lang.Long", "java.lang.String", "java.lang.Long", "int" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "testProperties",
          "parameters" : [ "org.gradoop.model.Attributed", "int" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "validateExtendedGraphVertices",
          "parameters" : [ "java.util.List" ]
        }, {
          "clazz" : "org.gradoop.io.reader.JsonReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.JsonReader",
          "module" : "gradoop-core",
          "method" : "readEdges",
          "parameters" : [ "org.codehaus.jettison.json.JSONArray" ]
        }, {
          "clazz" : "org.gradoop.io.reader.JsonReader",
          "module" : "gradoop-core",
          "method" : "readGraphs",
          "parameters" : [ "org.codehaus.jettison.json.JSONArray" ]
        }, {
          "clazz" : "org.gradoop.io.reader.JsonReader",
          "module" : "gradoop-core",
          "method" : "readLabel",
          "parameters" : [ "org.codehaus.jettison.json.JSONObject" ]
        }, {
          "clazz" : "org.gradoop.io.reader.JsonReader",
          "module" : "gradoop-core",
          "method" : "readProperties",
          "parameters" : [ "org.codehaus.jettison.json.JSONObject" ]
        }, {
          "clazz" : "org.gradoop.io.reader.JsonReader",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.JsonReader",
          "module" : "gradoop-core",
          "method" : "readVertexID",
          "parameters" : [ "org.codehaus.jettison.json.JSONObject" ]
        }, {
          "clazz" : "org.gradoop.io.reader.JsonReaderTest",
          "module" : "gradoop-core",
          "method" : "testReader",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.SingleVertexReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "equals",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getId",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getProperty",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyKeys",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        } ]
      },
      "gradoop-core§org.gradoop.io.reader.RDFReaderTest#countGeneratedVertices" : {
        "entities" : [ {
          "clazz" : "org.gradoop.io.reader.RDFReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.RDFReader",
          "module" : "gradoop-core",
          "method" : "addLiteralAsProperty",
          "parameters" : [ "java.util.Map", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.RDFReader",
          "module" : "gradoop-core",
          "method" : "createSourceVertex",
          "parameters" : [ "java.lang.String", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.RDFReader",
          "module" : "gradoop-core",
          "method" : "createTargetVertex",
          "parameters" : [ "java.lang.String", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.RDFReader",
          "module" : "gradoop-core",
          "method" : "createVertexWithLiteral",
          "parameters" : [ "java.lang.String", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.RDFReader",
          "module" : "gradoop-core",
          "method" : "getDatatype",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.RDFReader",
          "module" : "gradoop-core",
          "method" : "getHash",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.RDFReader",
          "module" : "gradoop-core",
          "method" : "getLiteralValue",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.RDFReader",
          "module" : "gradoop-core",
          "method" : "getPlainResource",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.RDFReader",
          "module" : "gradoop-core",
          "method" : "getTokens",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.RDFReader",
          "module" : "gradoop-core",
          "method" : "isNTResource",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.RDFReader",
          "module" : "gradoop-core",
          "method" : "readVertexList",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.RDFReader",
          "module" : "gradoop-core",
          "method" : "simpleValidate",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.RDFReaderTest",
          "module" : "gradoop-core",
          "method" : "countGeneratedVertices",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.RDFReaderTest",
          "module" : "gradoop-core",
          "method" : "createVerticesFromRDF",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Iterable" ]
        } ]
      },
      "gradoop-core§org.gradoop.io.reader.RDFReaderTest#countRDFNTriplesTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.io.reader.RDFReaderTest",
          "module" : "gradoop-core",
          "method" : "countRDFNTriplesTest",
          "parameters" : [ ]
        } ]
      },
      "gradoop-core§org.gradoop.io.reader.RDFReaderTest#loadRDFToHBaseTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.GradoopClusterTest",
          "module" : "gradoop-core",
          "method" : "createEmptyGraphStore",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.RDFReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.RDFReader",
          "module" : "gradoop-core",
          "method" : "addLiteralAsProperty",
          "parameters" : [ "java.util.Map", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.RDFReader",
          "module" : "gradoop-core",
          "method" : "createSourceVertex",
          "parameters" : [ "java.lang.String", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.RDFReader",
          "module" : "gradoop-core",
          "method" : "createTargetVertex",
          "parameters" : [ "java.lang.String", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.RDFReader",
          "module" : "gradoop-core",
          "method" : "createVertexWithLiteral",
          "parameters" : [ "java.lang.String", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.RDFReader",
          "module" : "gradoop-core",
          "method" : "getDatatype",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.RDFReader",
          "module" : "gradoop-core",
          "method" : "getHash",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.RDFReader",
          "module" : "gradoop-core",
          "method" : "getLiteralValue",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.RDFReader",
          "module" : "gradoop-core",
          "method" : "getPlainResource",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.RDFReader",
          "module" : "gradoop-core",
          "method" : "getTokens",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.RDFReader",
          "module" : "gradoop-core",
          "method" : "isNTResource",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.RDFReader",
          "module" : "gradoop-core",
          "method" : "readVertexList",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.RDFReader",
          "module" : "gradoop-core",
          "method" : "simpleValidate",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.RDFReaderTest",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "org.gradoop.model.Vertex", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.RDFReaderTest",
          "module" : "gradoop-core",
          "method" : "loadRDFToHBaseTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.RDFReaderTest",
          "module" : "gradoop-core",
          "method" : "validateDetails",
          "parameters" : [ "org.gradoop.storage.GraphStore" ]
        }, {
          "clazz" : "org.gradoop.io.reader.RDFReaderTest",
          "module" : "gradoop-core",
          "method" : "validateRDFGraph",
          "parameters" : [ "org.gradoop.storage.GraphStore" ]
        }, {
          "clazz" : "org.gradoop.io.reader.RDFReaderTest",
          "module" : "gradoop-core",
          "method" : "validateVertex",
          "parameters" : [ "org.gradoop.model.Vertex", "int", "int", "int" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getIndex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getOtherID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingDegree",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getId",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getProperty",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyKeys",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "decodeValueFromBytes",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "encodeValueToBytes",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "getColumnKeysFromFamily",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result", "byte[]" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "readLabel",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "readProperties",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeLabel",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Labeled" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperties",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Attributed" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperty",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.String", "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgeIdentifier",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgePropertiesString",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "getRowKey",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readEdge",
          "parameters" : [ "byte[]", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result", "byte[]" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readGraphs",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readIncomingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readOutgoingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdge",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeGraphs",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.GraphElement" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeIncomingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeOutgoingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.apache.hadoop.hbase.client.HTable", "org.apache.hadoop.hbase.client.HTable", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "getVertices",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore$VertexIterator",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.gradoop.storage.hbase.HBaseGraphStore", "org.apache.hadoop.hbase.client.ResultScanner" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore$VertexIterator",
          "module" : "gradoop-core",
          "method" : "hasNext",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore$VertexIterator",
          "module" : "gradoop-core",
          "method" : "next",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createOrOpenGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createOrOpenGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createTablesIfNotExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteTablesIfExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "java.lang.String", "java.lang.String" ]
        } ]
      },
      "gradoop-core§org.gradoop.io.reader.SimpleVertexReaderTest#readBasicGraphTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "validateBasicGraphEdges",
          "parameters" : [ "java.util.List", "int", "long" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "validateBasicGraphVertices",
          "parameters" : [ "java.util.List" ]
        }, {
          "clazz" : "org.gradoop.io.reader.SimpleVertexReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.SimpleVertexReader",
          "module" : "gradoop-core",
          "method" : "getTokens",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.SimpleVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.SimpleVertexReaderTest",
          "module" : "gradoop-core",
          "method" : "readBasicGraphTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.SingleVertexReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getIndex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getOtherID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingDegree",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getId",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexWithEdges",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexWithOutgoingEdges",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable" ]
        } ]
      },
      "gradoop-core§org.gradoop.io.writer.BulkWriteTest#bulkWriteSimpleGraphTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.GradoopClusterTest",
          "module" : "gradoop-core",
          "method" : "createEmptyGraphStore",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopClusterTest",
          "module" : "gradoop-core",
          "method" : "readGraphFromFile",
          "parameters" : [ "org.apache.hadoop.fs.Path", "int" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createBasicGraphVertices",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createVertices",
          "parameters" : [ "java.lang.String[]", "org.gradoop.io.reader.VertexLineReader" ]
        }, {
          "clazz" : "org.gradoop.io.reader.SimpleVertexReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.SimpleVertexReader",
          "module" : "gradoop-core",
          "method" : "getTokens",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.SimpleVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.SingleVertexReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.writer.BulkWriteTest",
          "module" : "gradoop-core",
          "method" : "bulkWriteSimpleGraphTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getIndex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getOtherID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getId",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyKeys",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexWithEdges",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexWithOutgoingEdges",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeLabel",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Labeled" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperties",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Attributed" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgeIdentifier",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgePropertiesString",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "getRowKey",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdge",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeGraphs",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.GraphElement" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeIncomingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeOutgoingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.apache.hadoop.hbase.client.HTable", "org.apache.hadoop.hbase.client.HTable", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createOrOpenGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createOrOpenGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createTablesIfNotExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteTablesIfExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "java.lang.String", "java.lang.String" ]
        } ]
      },
      "gradoop-core§org.gradoop.io.writer.JsonWriterTest#writerTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createExtendedGraphVertices",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createVertices",
          "parameters" : [ "java.lang.String[]", "org.gradoop.io.reader.VertexLineReader" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "decodeValue",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "getLineTokens",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readEdges",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readGraphs",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readProperties",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertexID",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.writer.JsonWriter",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.writer.JsonWriter",
          "module" : "gradoop-core",
          "method" : "writeEdges",
          "parameters" : [ "org.codehaus.jettison.json.JSONObject", "java.lang.String", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.io.writer.JsonWriter",
          "module" : "gradoop-core",
          "method" : "writeGraphs",
          "parameters" : [ "org.codehaus.jettison.json.JSONObject", "org.gradoop.model.GraphElement" ]
        }, {
          "clazz" : "org.gradoop.io.writer.JsonWriter",
          "module" : "gradoop-core",
          "method" : "writeProperties",
          "parameters" : [ "org.codehaus.jettison.json.JSONObject", "org.gradoop.model.Attributed" ]
        }, {
          "clazz" : "org.gradoop.io.writer.JsonWriter",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.io.writer.JsonWriterTest",
          "module" : "gradoop-core",
          "method" : "writerTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getOtherID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getId",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getProperty",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyKeys",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        } ]
      },
      "gradoop-core§org.gradoop.io.writer.Neo4JVertexLineWriterTest#extendedGraphNeo4jTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createExtendedGraphVertices",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createVertices",
          "parameters" : [ "java.lang.String[]", "org.gradoop.io.reader.VertexLineReader" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "decodeValue",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "getLineTokens",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readEdges",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readGraphs",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readProperties",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertexID",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.writer.Neo4JVertexLineWriterTest",
          "module" : "gradoop-core",
          "method" : "extendedGraphNeo4jTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.writer.Neo4JVertexLineWriterTest",
          "module" : "gradoop-core",
          "method" : "testEdge",
          "parameters" : [ "java.lang.Long", "java.lang.Long", "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.gradoop.io.writer.Neo4JVertexLineWriterTest",
          "module" : "gradoop-core",
          "method" : "testEdges",
          "parameters" : [ "org.neo4j.graphdb.Node", "int" ]
        }, {
          "clazz" : "org.gradoop.io.writer.Neo4JVertexLineWriterTest",
          "module" : "gradoop-core",
          "method" : "testProperties",
          "parameters" : [ "org.neo4j.graphdb.Node", "int" ]
        }, {
          "clazz" : "org.gradoop.io.writer.Neo4JVertexLineWriterTest",
          "module" : "gradoop-core",
          "method" : "validateEdges",
          "parameters" : [ "org.gradoop.io.writer.Neo4jLineWriter" ]
        }, {
          "clazz" : "org.gradoop.io.writer.Neo4JVertexLineWriterTest",
          "module" : "gradoop-core",
          "method" : "validateNodes",
          "parameters" : [ "org.gradoop.io.writer.Neo4jLineWriter" ]
        }, {
          "clazz" : "org.gradoop.io.writer.Neo4jLineWriter",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.writer.Neo4jLineWriter",
          "module" : "gradoop-core",
          "method" : "deleteFileOrDirectory",
          "parameters" : [ "java.io.File" ]
        }, {
          "clazz" : "org.gradoop.io.writer.Neo4jLineWriter",
          "module" : "gradoop-core",
          "method" : "getGraphDbService",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.writer.Neo4jLineWriter",
          "module" : "gradoop-core",
          "method" : "getNodeCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.writer.Neo4jLineWriter",
          "module" : "gradoop-core",
          "method" : "getNodes",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.writer.Neo4jLineWriter",
          "module" : "gradoop-core",
          "method" : "initDb",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.writer.Neo4jLineWriter",
          "module" : "gradoop-core",
          "method" : "registerShutdownHook",
          "parameters" : [ "org.neo4j.graphdb.GraphDatabaseService" ]
        }, {
          "clazz" : "org.gradoop.io.writer.Neo4jLineWriter",
          "module" : "gradoop-core",
          "method" : "shutdown",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.writer.Neo4jLineWriter",
          "module" : "gradoop-core",
          "method" : "writeEdges",
          "parameters" : [ "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.io.writer.Neo4jLineWriter",
          "module" : "gradoop-core",
          "method" : "writeGraphs",
          "parameters" : [ "org.neo4j.graphdb.Node", "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.io.writer.Neo4jLineWriter",
          "module" : "gradoop-core",
          "method" : "writeLabels",
          "parameters" : [ "org.neo4j.graphdb.Node", "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.io.writer.Neo4jLineWriter",
          "module" : "gradoop-core",
          "method" : "writeNodeRelationships",
          "parameters" : [ "org.neo4j.graphdb.Node", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.io.writer.Neo4jLineWriter",
          "module" : "gradoop-core",
          "method" : "writeProperties",
          "parameters" : [ "org.neo4j.graphdb.Node", "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.io.writer.Neo4jLineWriter",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getOtherID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingDegree",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getId",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getProperty",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyKeys",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        } ]
      },
      "gradoop-core§org.gradoop.model.impl.DefaultEdgeTest#createWithMissingIndexTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultEdgeTest",
          "module" : "gradoop-core",
          "method" : "createWithMissingIndexTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        } ]
      },
      "gradoop-core§org.gradoop.model.impl.DefaultEdgeTest#createWithMissingLabelTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultEdgeTest",
          "module" : "gradoop-core",
          "method" : "createWithMissingLabelTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        } ]
      },
      "gradoop-core§org.gradoop.model.impl.DefaultEdgeTest#createWithMissingOtherIDTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultEdgeTest",
          "module" : "gradoop-core",
          "method" : "createWithMissingOtherIDTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        } ]
      },
      "gradoop-core§org.gradoop.model.impl.DefaultEdgeTest#createWithOtherIDIndexTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getIndex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getOtherID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdgeTest",
          "module" : "gradoop-core",
          "method" : "createWithOtherIDIndexTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        } ]
      },
      "gradoop-core§org.gradoop.model.impl.DefaultEdgeTest#createWithOtherIDLabelIndexPropertiesTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getIndex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getOtherID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdgeTest",
          "module" : "gradoop-core",
          "method" : "createWithOtherIDLabelIndexPropertiesTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getProperty",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        } ]
      },
      "gradoop-core§org.gradoop.model.impl.DefaultEdgeTest#createWithOtherIDLabelIndexTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getIndex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getOtherID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdgeTest",
          "module" : "gradoop-core",
          "method" : "createWithOtherIDLabelIndexTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        } ]
      },
      "gradoop-core§org.gradoop.model.impl.DefaultEdgeTest#testCompareTo" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getIndex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getOtherID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdgeTest",
          "module" : "gradoop-core",
          "method" : "testCompareTo",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeComparator",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeComparator",
          "module" : "gradoop-core",
          "method" : "compare",
          "parameters" : [ "org.gradoop.model.Edge", "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        } ]
      },
      "gradoop-core§org.gradoop.model.impl.DefaultEdgeTest#testEquals" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "equals",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdgeTest",
          "module" : "gradoop-core",
          "method" : "testEquals",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        } ]
      },
      "gradoop-core§org.gradoop.model.impl.DefaultGraphTest#createDefaultGraphTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultGraph",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultGraph",
          "module" : "gradoop-core",
          "method" : "getVertexCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultGraph",
          "module" : "gradoop-core",
          "method" : "getVertices",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultGraphTest",
          "module" : "gradoop-core",
          "method" : "createDefaultGraphTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.GraphFactory",
          "module" : "gradoop-core",
          "method" : "checkGraphID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.GraphFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultGraph",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getId",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getProperty",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        } ]
      },
      "gradoop-core§org.gradoop.model.impl.DefaultGraphTest#createWithIDTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultGraph",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultGraphTest",
          "module" : "gradoop-core",
          "method" : "createWithIDTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.GraphFactory",
          "module" : "gradoop-core",
          "method" : "checkGraphID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.GraphFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultGraph",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.GraphFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultGraphWithID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getId",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        } ]
      },
      "gradoop-core§org.gradoop.model.impl.DefaultGraphTest#createWithMissingIDTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultGraphTest",
          "module" : "gradoop-core",
          "method" : "createWithMissingIDTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.GraphFactory",
          "module" : "gradoop-core",
          "method" : "checkGraphID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.GraphFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultGraph",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.GraphFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultGraphWithID",
          "parameters" : [ "java.lang.Long" ]
        } ]
      },
      "gradoop-core§org.gradoop.model.impl.DefaultVertexTest#addAndResetGraphsTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "addGraph",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "addGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "resetGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertexTest",
          "module" : "gradoop-core",
          "method" : "addAndResetGraphsTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexWithID",
          "parameters" : [ "java.lang.Long" ]
        } ]
      },
      "gradoop-core§org.gradoop.model.impl.DefaultVertexTest#createDefaultVertexTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "equals",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertexTest",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getId",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getProperty",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        } ]
      },
      "gradoop-core§org.gradoop.model.impl.DefaultVertexTest#createWithIDEdgesTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "equals",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getDegree",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingDegree",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingDegree",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertexTest",
          "module" : "gradoop-core",
          "method" : "createWithIDEdgesTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getId",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexWithEdges",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.lang.Iterable" ]
        } ]
      },
      "gradoop-core§org.gradoop.model.impl.DefaultVertexTest#createWithIDLabelsEdgesTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "equals",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getDegree",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingDegree",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingDegree",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertexTest",
          "module" : "gradoop-core",
          "method" : "createWithIDLabelsEdgesTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getId",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Iterable" ]
        } ]
      },
      "gradoop-core§org.gradoop.model.impl.DefaultVertexTest#createWithIDOutgoingEdgesTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "equals",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getDegree",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingDegree",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingDegree",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertexTest",
          "module" : "gradoop-core",
          "method" : "createWithIDOutgoingEdgesTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getId",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexWithEdges",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexWithOutgoingEdges",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable" ]
        } ]
      },
      "gradoop-core§org.gradoop.model.impl.DefaultVertexTest#createWithIDTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getDegree",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingDegree",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingDegree",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertexTest",
          "module" : "gradoop-core",
          "method" : "createWithIDTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getId",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexWithID",
          "parameters" : [ "java.lang.Long" ]
        } ]
      },
      "gradoop-core§org.gradoop.model.impl.DefaultVertexTest#createWithMissingIDTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultVertexTest",
          "module" : "gradoop-core",
          "method" : "createWithMissingIDTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexWithID",
          "parameters" : [ "java.lang.Long" ]
        } ]
      },
      "gradoop-core§org.gradoop.storage.hbase.HBaseGraphStoreTest#propertyTypeTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.GradoopClusterTest",
          "module" : "gradoop-core",
          "method" : "createEmptyGraphStore",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopClusterTest",
          "module" : "gradoop-core",
          "method" : "openGraphStore",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getId",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getProperty",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyKeys",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "decodeValueFromBytes",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "encodeValueToBytes",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "getColumnKeysFromFamily",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result", "byte[]" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "readLabel",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "readProperties",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeLabel",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Labeled" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperties",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Attributed" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperty",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.String", "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "getRowKey",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result", "byte[]" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readGraphs",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readIncomingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readOutgoingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeGraphs",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.GraphElement" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeIncomingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeOutgoingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.apache.hadoop.hbase.client.HTable", "org.apache.hadoop.hbase.client.HTable", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createOrOpenGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createOrOpenGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createTablesIfNotExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteTablesIfExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreTest",
          "module" : "gradoop-core",
          "method" : "propertyTypeTest",
          "parameters" : [ ]
        } ]
      },
      "gradoop-core§org.gradoop.storage.hbase.HBaseGraphStoreTest#writeCloseOpenReadTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.GradoopClusterTest",
          "module" : "gradoop-core",
          "method" : "createEmptyGraphStore",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopClusterTest",
          "module" : "gradoop-core",
          "method" : "openGraphStore",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createExtendedGraphVertices",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createVertices",
          "parameters" : [ "java.lang.String[]", "org.gradoop.io.reader.VertexLineReader" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "testEdge",
          "parameters" : [ "java.util.List", "java.lang.Long", "java.lang.String", "java.lang.Long", "int" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "testProperties",
          "parameters" : [ "org.gradoop.model.Attributed", "int" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "validateExtendedGraphEdges",
          "parameters" : [ "java.util.List" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "validateExtendedGraphVertices",
          "parameters" : [ "java.util.List" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "decodeValue",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "getLineTokens",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readEdges",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readGraphs",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readProperties",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertexID",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "equals",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getIndex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getOtherID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultGraph",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultGraph",
          "module" : "gradoop-core",
          "method" : "getVertices",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultGraph",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.GraphFactory",
          "module" : "gradoop-core",
          "method" : "checkGraphID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.GraphFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultGraph",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getId",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getProperty",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyKeys",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "decodeValueFromBytes",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "decodeValueFromString",
          "parameters" : [ "byte", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "encodeValueToBytes",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "getColumnKeysFromFamily",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result", "byte[]" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "getType",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "readLabel",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "readProperties",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeLabel",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Labeled" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperties",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Attributed" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperty",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.String", "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "getRowKey",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "readGraph",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "readVertices",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "writeGraph",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Graph" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "writeVertices",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Graph" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgeIdentifier",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgePropertiesString",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "getRowKey",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readEdge",
          "parameters" : [ "byte[]", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result", "byte[]" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readGraphs",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readIncomingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readOutgoingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdge",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeGraphs",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.GraphElement" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeIncomingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeOutgoingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.apache.hadoop.hbase.client.HTable", "org.apache.hadoop.hbase.client.HTable", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "getEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "getVertices",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "readGraph",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "writeGraph",
          "parameters" : [ "org.gradoop.model.Graph" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore$VertexIterator",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.gradoop.storage.hbase.HBaseGraphStore", "org.apache.hadoop.hbase.client.ResultScanner" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore$VertexIterator",
          "module" : "gradoop-core",
          "method" : "hasNext",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore$VertexIterator",
          "module" : "gradoop-core",
          "method" : "next",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createOrOpenGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createOrOpenGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createTablesIfNotExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteTablesIfExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreTest",
          "module" : "gradoop-core",
          "method" : "createGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreTest",
          "module" : "gradoop-core",
          "method" : "validateAllVertices",
          "parameters" : [ "org.gradoop.storage.GraphStore" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreTest",
          "module" : "gradoop-core",
          "method" : "validateEdges",
          "parameters" : [ "org.gradoop.storage.GraphStore" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreTest",
          "module" : "gradoop-core",
          "method" : "validateGraphs",
          "parameters" : [ "org.gradoop.storage.GraphStore" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreTest",
          "module" : "gradoop-core",
          "method" : "validateSingleVertices",
          "parameters" : [ "org.gradoop.storage.GraphStore" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreTest",
          "module" : "gradoop-core",
          "method" : "writeCloseOpenReadTest",
          "parameters" : [ ]
        } ]
      },
      "gradoop-core§org.gradoop.storage.hbase.HBaseGraphStoreTest#writeFlushReadEdgesTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.GradoopClusterTest",
          "module" : "gradoop-core",
          "method" : "createEmptyGraphStore",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createExtendedGraphVertices",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createVertices",
          "parameters" : [ "java.lang.String[]", "org.gradoop.io.reader.VertexLineReader" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "testEdge",
          "parameters" : [ "java.util.List", "java.lang.Long", "java.lang.String", "java.lang.Long", "int" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "testProperties",
          "parameters" : [ "org.gradoop.model.Attributed", "int" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "validateExtendedGraphEdges",
          "parameters" : [ "java.util.List" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "decodeValue",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "getLineTokens",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readEdges",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readGraphs",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readProperties",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertexID",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "equals",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getIndex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getOtherID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getId",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getProperty",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyKeys",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "decodeValueFromString",
          "parameters" : [ "byte", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "encodeValueToBytes",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "getType",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeLabel",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Labeled" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperties",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Attributed" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperty",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.String", "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgeIdentifier",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgePropertiesString",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "getRowKey",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readEdge",
          "parameters" : [ "byte[]", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result", "byte[]" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readOutgoingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdge",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeGraphs",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.GraphElement" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeIncomingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeOutgoingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.apache.hadoop.hbase.client.HTable", "org.apache.hadoop.hbase.client.HTable", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "getEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "setAutoFlush",
          "parameters" : [ "boolean" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createOrOpenGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createOrOpenGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createTablesIfNotExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteTablesIfExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreTest",
          "module" : "gradoop-core",
          "method" : "validateEdges",
          "parameters" : [ "org.gradoop.storage.GraphStore" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreTest",
          "module" : "gradoop-core",
          "method" : "writeFlushReadEdgesTest",
          "parameters" : [ ]
        } ]
      },
      "gradoop-core§org.gradoop.storage.hbase.HBaseGraphStoreTest#writeFlushReadTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.GradoopClusterTest",
          "module" : "gradoop-core",
          "method" : "createEmptyGraphStore",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createExtendedGraphVertices",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createVertices",
          "parameters" : [ "java.lang.String[]", "org.gradoop.io.reader.VertexLineReader" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "testEdge",
          "parameters" : [ "java.util.List", "java.lang.Long", "java.lang.String", "java.lang.Long", "int" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "testProperties",
          "parameters" : [ "org.gradoop.model.Attributed", "int" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "validateExtendedGraphVertices",
          "parameters" : [ "java.util.List" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "decodeValue",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "getLineTokens",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readEdges",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readGraphs",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readProperties",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertexID",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "equals",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getIndex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getOtherID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultGraph",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultGraph",
          "module" : "gradoop-core",
          "method" : "getVertices",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultGraph",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.GraphFactory",
          "module" : "gradoop-core",
          "method" : "checkGraphID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.GraphFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultGraph",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getId",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getProperty",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyKeys",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "decodeValueFromBytes",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "decodeValueFromString",
          "parameters" : [ "byte", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "encodeValueToBytes",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "getColumnKeysFromFamily",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result", "byte[]" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "getType",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "readLabel",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "readProperties",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeLabel",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Labeled" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperties",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Attributed" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperty",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.String", "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "getRowKey",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "readGraph",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "readVertices",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "writeGraph",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Graph" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "writeVertices",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Graph" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgeIdentifier",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgePropertiesString",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "getRowKey",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readEdge",
          "parameters" : [ "byte[]", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result", "byte[]" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readGraphs",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readIncomingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readOutgoingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdge",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeGraphs",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.GraphElement" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeIncomingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeOutgoingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.apache.hadoop.hbase.client.HTable", "org.apache.hadoop.hbase.client.HTable", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "readGraph",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "setAutoFlush",
          "parameters" : [ "boolean" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "writeGraph",
          "parameters" : [ "org.gradoop.model.Graph" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createOrOpenGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createOrOpenGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createTablesIfNotExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteTablesIfExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreTest",
          "module" : "gradoop-core",
          "method" : "createGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreTest",
          "module" : "gradoop-core",
          "method" : "validateGraphs",
          "parameters" : [ "org.gradoop.storage.GraphStore" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreTest",
          "module" : "gradoop-core",
          "method" : "validateSingleVertices",
          "parameters" : [ "org.gradoop.storage.GraphStore" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreTest",
          "module" : "gradoop-core",
          "method" : "writeFlushReadTest",
          "parameters" : [ ]
        } ]
      },
      "gradoop-core§org.gradoop.storage.hbase.HBaseGraphStoreTest#wrongPropertyTypeTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.GradoopClusterTest",
          "module" : "gradoop-core",
          "method" : "createEmptyGraphStore",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getId",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.LabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getProperty",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyKeys",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.exceptions.UnsupportedTypeException",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "encodeValueToBytes",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeLabel",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Labeled" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperties",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Attributed" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperty",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.String", "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "getRowKey",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.apache.hadoop.hbase.client.HTable", "org.apache.hadoop.hbase.client.HTable", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createOrOpenGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createOrOpenGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createTablesIfNotExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteTablesIfExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreTest",
          "module" : "gradoop-core",
          "method" : "wrongPropertyTypeTest",
          "parameters" : [ ]
        } ]
      },
      "gradoop-flink§org.gradoop.model.impl.EPGraphAggregateTest#aggregateEdgeCountTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.EPEdgeCollection",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "org.apache.flink.api.java.DataSet" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPEdgeCollection",
          "module" : "gradoop-flink",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEdgeData",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEdgeData",
          "module" : "gradoop-flink",
          "method" : "getSourceVertex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEdgeData",
          "module" : "gradoop-flink",
          "method" : "getTargetVertex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEdgeData",
          "module" : "gradoop-flink",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEntity",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEntity",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEntity",
          "module" : "gradoop-flink",
          "method" : "getId",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEntity",
          "module" : "gradoop-flink",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEntity",
          "module" : "gradoop-flink",
          "method" : "getProperties",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEntity",
          "module" : "gradoop-flink",
          "method" : "getProperty",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEntity",
          "module" : "gradoop-flink",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEntity",
          "module" : "gradoop-flink",
          "method" : "setProperty",
          "parameters" : [ "java.lang.String", "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEntity",
          "module" : "gradoop-flink",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkGraphData",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkGraphData",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkGraphElementEntity",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkGraphElementEntity",
          "module" : "gradoop-flink",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkGraphElementEntity",
          "module" : "gradoop-flink",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkVertexData",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkVertexData",
          "module" : "gradoop-flink",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "org.apache.flink.graph.Graph", "org.gradoop.model.impl.EPFlinkGraphData", "org.apache.flink.api.java.ExecutionEnvironment" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph",
          "module" : "gradoop-flink",
          "method" : "aggregate",
          "parameters" : [ "java.lang.String", "org.gradoop.model.helper.UnaryFunction" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph",
          "module" : "gradoop-flink",
          "method" : "callForGraph",
          "parameters" : [ "org.gradoop.model.operators.UnaryGraphToGraphOperator" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph",
          "module" : "gradoop-flink",
          "method" : "fromGraph",
          "parameters" : [ "org.apache.flink.graph.Graph", "org.gradoop.model.impl.EPFlinkGraphData" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph",
          "module" : "gradoop-flink",
          "method" : "getEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph",
          "module" : "gradoop-flink",
          "method" : "getGellyGraph",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph",
          "module" : "gradoop-flink",
          "method" : "getId",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph",
          "module" : "gradoop-flink",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph",
          "module" : "gradoop-flink",
          "method" : "getProperties",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph",
          "module" : "gradoop-flink",
          "method" : "getProperty",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph",
          "module" : "gradoop-flink",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph$EdgeKeySelector",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph$EdgeSourceVertexKeySelector",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph$EdgeTargetVertexKeySelector",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph$GraphKeySelector",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph$GraphKeySelector",
          "module" : "gradoop-flink",
          "method" : "getKey",
          "parameters" : [ "org.gradoop.model.impl.Subgraph" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph$VertexKeySelector",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraphAggregateTest",
          "module" : "gradoop-flink",
          "method" : "aggregateEdgeCountTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraphCollection",
          "module" : "gradoop-flink",
          "method" : "getGraph",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraphCollection$EdgeGraphContainmentFilter",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraphCollection$EdgeGraphContainmentFilter",
          "module" : "gradoop-flink",
          "method" : "filter",
          "parameters" : [ "org.apache.flink.graph.Edge" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraphCollection$VertexGraphContainmentFilter",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraphCollection$VertexGraphContainmentFilter",
          "module" : "gradoop-flink",
          "method" : "filter",
          "parameters" : [ "org.apache.flink.graph.Vertex" ]
        }, {
          "clazz" : "org.gradoop.model.impl.FlinkGraphStore",
          "module" : "gradoop-flink",
          "method" : "getGraph",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.FlinkGraphStore$EdgesConverter",
          "module" : "gradoop-flink",
          "method" : "map",
          "parameters" : [ "org.gradoop.model.impl.EPFlinkEdgeData" ]
        }, {
          "clazz" : "org.gradoop.model.impl.FlinkGraphStore$GraphsConverter",
          "module" : "gradoop-flink",
          "method" : "map",
          "parameters" : [ "org.gradoop.model.impl.EPFlinkGraphData" ]
        }, {
          "clazz" : "org.gradoop.model.impl.FlinkGraphStore$VerticesConverter",
          "module" : "gradoop-flink",
          "method" : "map",
          "parameters" : [ "org.gradoop.model.impl.EPFlinkVertexData" ]
        }, {
          "clazz" : "org.gradoop.model.impl.Subgraph",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.Subgraph",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "org.gradoop.model.impl.K", "org.gradoop.model.impl.V" ]
        }, {
          "clazz" : "org.gradoop.model.impl.Subgraph",
          "module" : "gradoop-flink",
          "method" : "getValue",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.operators.Aggregation",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "org.gradoop.model.helper.UnaryFunction" ]
        }, {
          "clazz" : "org.gradoop.model.impl.operators.Aggregation",
          "module" : "gradoop-flink",
          "method" : "execute",
          "parameters" : [ "org.gradoop.model.impl.EPGraph" ]
        } ]
      },
      "gradoop-flink§org.gradoop.model.impl.EPGraphCombineTest#testAssignment" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.EPEdgeCollection",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "org.apache.flink.api.java.DataSet" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPEdgeCollection",
          "module" : "gradoop-flink",
          "method" : "collect",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEdgeData",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEdgeData",
          "module" : "gradoop-flink",
          "method" : "getSourceVertex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEdgeData",
          "module" : "gradoop-flink",
          "method" : "getTargetVertex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEdgeData",
          "module" : "gradoop-flink",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEntity",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEntity",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEntity",
          "module" : "gradoop-flink",
          "method" : "equals",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEntity",
          "module" : "gradoop-flink",
          "method" : "getId",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEntity",
          "module" : "gradoop-flink",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkGraphData",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkGraphData",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkGraphData",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkGraphElementEntity",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkGraphElementEntity",
          "module" : "gradoop-flink",
          "method" : "addGraph",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkGraphElementEntity",
          "module" : "gradoop-flink",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkGraphElementEntity",
          "module" : "gradoop-flink",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkVertexData",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkVertexData",
          "module" : "gradoop-flink",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "org.apache.flink.graph.Graph", "org.gradoop.model.impl.EPFlinkGraphData", "org.apache.flink.api.java.ExecutionEnvironment" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph",
          "module" : "gradoop-flink",
          "method" : "callForGraph",
          "parameters" : [ "org.gradoop.model.operators.BinaryGraphToGraphOperator", "org.gradoop.model.impl.EPGraph" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph",
          "module" : "gradoop-flink",
          "method" : "combine",
          "parameters" : [ "org.gradoop.model.impl.EPGraph" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph",
          "module" : "gradoop-flink",
          "method" : "fromGraph",
          "parameters" : [ "org.apache.flink.graph.Graph", "org.gradoop.model.impl.EPFlinkGraphData" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph",
          "module" : "gradoop-flink",
          "method" : "getEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph",
          "module" : "gradoop-flink",
          "method" : "getGellyGraph",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph",
          "module" : "gradoop-flink",
          "method" : "getVertices",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph$EdgeKeySelector",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph$EdgeKeySelector",
          "module" : "gradoop-flink",
          "method" : "getKey",
          "parameters" : [ "org.apache.flink.graph.Edge" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph$EdgeSourceVertexKeySelector",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph$EdgeTargetVertexKeySelector",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph$GraphKeySelector",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph$GraphKeySelector",
          "module" : "gradoop-flink",
          "method" : "getKey",
          "parameters" : [ "org.gradoop.model.impl.Subgraph" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph$VertexKeySelector",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph$VertexKeySelector",
          "module" : "gradoop-flink",
          "method" : "getKey",
          "parameters" : [ "org.apache.flink.graph.Vertex" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraphCollection",
          "module" : "gradoop-flink",
          "method" : "getGraph",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraphCollection$EdgeGraphContainmentFilter",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraphCollection$EdgeGraphContainmentFilter",
          "module" : "gradoop-flink",
          "method" : "filter",
          "parameters" : [ "org.apache.flink.graph.Edge" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraphCollection$VertexGraphContainmentFilter",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraphCollection$VertexGraphContainmentFilter",
          "module" : "gradoop-flink",
          "method" : "filter",
          "parameters" : [ "org.apache.flink.graph.Vertex" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraphCombineTest",
          "module" : "gradoop-flink",
          "method" : "testAssignment",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPVertexCollection",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "org.apache.flink.api.java.DataSet" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPVertexCollection",
          "module" : "gradoop-flink",
          "method" : "collect",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.FlinkGraphStore",
          "module" : "gradoop-flink",
          "method" : "getGraph",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.FlinkGraphStore$EdgesConverter",
          "module" : "gradoop-flink",
          "method" : "map",
          "parameters" : [ "org.gradoop.model.impl.EPFlinkEdgeData" ]
        }, {
          "clazz" : "org.gradoop.model.impl.FlinkGraphStore$GraphsConverter",
          "module" : "gradoop-flink",
          "method" : "map",
          "parameters" : [ "org.gradoop.model.impl.EPFlinkGraphData" ]
        }, {
          "clazz" : "org.gradoop.model.impl.FlinkGraphStore$VerticesConverter",
          "module" : "gradoop-flink",
          "method" : "map",
          "parameters" : [ "org.gradoop.model.impl.EPFlinkVertexData" ]
        }, {
          "clazz" : "org.gradoop.model.impl.Subgraph",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.Subgraph",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "org.gradoop.model.impl.K", "org.gradoop.model.impl.V" ]
        }, {
          "clazz" : "org.gradoop.model.impl.Subgraph",
          "module" : "gradoop-flink",
          "method" : "getValue",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.operators.AbstractBinaryGraphToGraphOperator",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.operators.AbstractBinaryGraphToGraphOperator",
          "module" : "gradoop-flink",
          "method" : "execute",
          "parameters" : [ "org.gradoop.model.impl.EPGraph", "org.gradoop.model.impl.EPGraph" ]
        }, {
          "clazz" : "org.gradoop.model.impl.operators.AbstractBinaryGraphToGraphOperator$EdgeToGraphUpdater",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.operators.AbstractBinaryGraphToGraphOperator$EdgeToGraphUpdater",
          "module" : "gradoop-flink",
          "method" : "map",
          "parameters" : [ "org.apache.flink.graph.Edge" ]
        }, {
          "clazz" : "org.gradoop.model.impl.operators.AbstractBinaryGraphToGraphOperator$VertexToGraphUpdater",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.operators.AbstractBinaryGraphToGraphOperator$VertexToGraphUpdater",
          "module" : "gradoop-flink",
          "method" : "map",
          "parameters" : [ "org.apache.flink.graph.Vertex" ]
        }, {
          "clazz" : "org.gradoop.model.impl.operators.Combination",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.operators.Combination",
          "module" : "gradoop-flink",
          "method" : "executeInternal",
          "parameters" : [ "org.gradoop.model.impl.EPGraph", "org.gradoop.model.impl.EPGraph" ]
        } ]
      },
      "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest#testFromJsonFile" : {
        "entities" : [ {
          "clazz" : "org.gradoop.io.json.JsonIO$JsonToEntityMapper",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonIO$JsonToEntityMapper",
          "module" : "gradoop-flink",
          "method" : "getGraphs",
          "parameters" : [ "org.codehaus.jettison.json.JSONObject" ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonIO$JsonToEntityMapper",
          "module" : "gradoop-flink",
          "method" : "getID",
          "parameters" : [ "org.codehaus.jettison.json.JSONObject" ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonIO$JsonToEntityMapper",
          "module" : "gradoop-flink",
          "method" : "getLabel",
          "parameters" : [ "org.codehaus.jettison.json.JSONObject" ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonIO$JsonToEntityMapper",
          "module" : "gradoop-flink",
          "method" : "getProperties",
          "parameters" : [ "org.codehaus.jettison.json.JSONObject" ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonReader$JsonToEdgeMapper",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonReader$JsonToEdgeMapper",
          "module" : "gradoop-flink",
          "method" : "getSourceVertexID",
          "parameters" : [ "org.codehaus.jettison.json.JSONObject" ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonReader$JsonToEdgeMapper",
          "module" : "gradoop-flink",
          "method" : "getTargetVertexID",
          "parameters" : [ "org.codehaus.jettison.json.JSONObject" ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonReader$JsonToEdgeMapper",
          "module" : "gradoop-flink",
          "method" : "map",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonReader$JsonToGraphMapper",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonReader$JsonToGraphMapper",
          "module" : "gradoop-flink",
          "method" : "map",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonReader$JsonToVertexMapper",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonReader$JsonToVertexMapper",
          "module" : "gradoop-flink",
          "method" : "map",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEdgeData",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.lang.Long", "java.util.Map", "java.util.Set" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEntity",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkGraphData",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkGraphElementEntity",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.util.Set" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkVertexData",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.util.Set" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "org.apache.flink.graph.Graph", "org.gradoop.model.impl.EPFlinkGraphData", "org.apache.flink.api.java.ExecutionEnvironment" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph",
          "module" : "gradoop-flink",
          "method" : "fromGraph",
          "parameters" : [ "org.apache.flink.graph.Graph", "org.gradoop.model.impl.EPFlinkGraphData" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph",
          "module" : "gradoop-flink",
          "method" : "getEdgeCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph",
          "module" : "gradoop-flink",
          "method" : "getGellyGraph",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph",
          "module" : "gradoop-flink",
          "method" : "getVertexCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph$EdgeKeySelector",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph$EdgeSourceVertexKeySelector",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph$EdgeTargetVertexKeySelector",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph$GraphKeySelector",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph$VertexKeySelector",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraphCollection",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "org.apache.flink.graph.Graph", "org.apache.flink.api.java.DataSet", "org.apache.flink.api.java.ExecutionEnvironment" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraphCollection",
          "module" : "gradoop-flink",
          "method" : "getGraph",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraphCollection",
          "module" : "gradoop-flink",
          "method" : "getGraphCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.FlinkGraphStore",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "org.apache.flink.api.java.DataSet", "org.apache.flink.api.java.DataSet", "org.apache.flink.api.java.DataSet", "org.apache.flink.api.java.ExecutionEnvironment" ]
        }, {
          "clazz" : "org.gradoop.model.impl.FlinkGraphStore",
          "module" : "gradoop-flink",
          "method" : "fromJsonFile",
          "parameters" : [ "java.lang.String", "java.lang.String", "java.lang.String", "org.apache.flink.api.java.ExecutionEnvironment" ]
        }, {
          "clazz" : "org.gradoop.model.impl.FlinkGraphStore",
          "module" : "gradoop-flink",
          "method" : "getCollection",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.FlinkGraphStore",
          "module" : "gradoop-flink",
          "method" : "getDatabaseGraph",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.FlinkGraphStoreTest",
          "module" : "gradoop-flink",
          "method" : "testFromJsonFile",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.Subgraph",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "org.gradoop.model.impl.K", "org.gradoop.model.impl.V" ]
        } ]
      },
      "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest#testGetDatabaseGraph" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.EPEdgeCollection",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "org.apache.flink.api.java.DataSet" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPEdgeCollection",
          "module" : "gradoop-flink",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEdgeData",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEdgeData",
          "module" : "gradoop-flink",
          "method" : "getSourceVertex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEdgeData",
          "module" : "gradoop-flink",
          "method" : "getTargetVertex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEdgeData",
          "module" : "gradoop-flink",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEntity",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEntity",
          "module" : "gradoop-flink",
          "method" : "getId",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEntity",
          "module" : "gradoop-flink",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkGraphElementEntity",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkGraphElementEntity",
          "module" : "gradoop-flink",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkVertexData",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkVertexData",
          "module" : "gradoop-flink",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "org.apache.flink.graph.Graph", "org.gradoop.model.impl.EPFlinkGraphData", "org.apache.flink.api.java.ExecutionEnvironment" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph",
          "module" : "gradoop-flink",
          "method" : "fromGraph",
          "parameters" : [ "org.apache.flink.graph.Graph", "org.gradoop.model.impl.EPFlinkGraphData" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph",
          "module" : "gradoop-flink",
          "method" : "getEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph",
          "module" : "gradoop-flink",
          "method" : "getGellyGraph",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph",
          "module" : "gradoop-flink",
          "method" : "getVertices",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph$EdgeKeySelector",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph$EdgeSourceVertexKeySelector",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph$EdgeTargetVertexKeySelector",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph$GraphKeySelector",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph$VertexKeySelector",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraphCollection",
          "module" : "gradoop-flink",
          "method" : "getGraph",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPVertexCollection",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "org.apache.flink.api.java.DataSet" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPVertexCollection",
          "module" : "gradoop-flink",
          "method" : "size",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.FlinkGraphStore",
          "module" : "gradoop-flink",
          "method" : "getDatabaseGraph",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.FlinkGraphStore$EdgesConverter",
          "module" : "gradoop-flink",
          "method" : "map",
          "parameters" : [ "org.gradoop.model.impl.EPFlinkEdgeData" ]
        }, {
          "clazz" : "org.gradoop.model.impl.FlinkGraphStore$VerticesConverter",
          "module" : "gradoop-flink",
          "method" : "map",
          "parameters" : [ "org.gradoop.model.impl.EPFlinkVertexData" ]
        }, {
          "clazz" : "org.gradoop.model.impl.FlinkGraphStoreTest",
          "module" : "gradoop-flink",
          "method" : "testGetDatabaseGraph",
          "parameters" : [ ]
        } ]
      },
      "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest#testWriteAsJsonFile" : {
        "entities" : [ {
          "clazz" : "org.gradoop.io.json.JsonIO$EntityToJsonFormatter",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonIO$EntityToJsonFormatter",
          "module" : "gradoop-flink",
          "method" : "getGraphsArray",
          "parameters" : [ "org.gradoop.model.EPGraphElement" ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonIO$EntityToJsonFormatter",
          "module" : "gradoop-flink",
          "method" : "writeGraphElementMeta",
          "parameters" : [ "org.gradoop.io.json.T" ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonIO$EntityToJsonFormatter",
          "module" : "gradoop-flink",
          "method" : "writeMeta",
          "parameters" : [ "org.gradoop.model.Labeled" ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonIO$EntityToJsonFormatter",
          "module" : "gradoop-flink",
          "method" : "writeProperties",
          "parameters" : [ "org.gradoop.model.Attributed" ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonIO$JsonToEntityMapper",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonIO$JsonToEntityMapper",
          "module" : "gradoop-flink",
          "method" : "getGraphs",
          "parameters" : [ "org.codehaus.jettison.json.JSONObject" ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonIO$JsonToEntityMapper",
          "module" : "gradoop-flink",
          "method" : "getID",
          "parameters" : [ "org.codehaus.jettison.json.JSONObject" ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonIO$JsonToEntityMapper",
          "module" : "gradoop-flink",
          "method" : "getLabel",
          "parameters" : [ "org.codehaus.jettison.json.JSONObject" ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonIO$JsonToEntityMapper",
          "module" : "gradoop-flink",
          "method" : "getProperties",
          "parameters" : [ "org.codehaus.jettison.json.JSONObject" ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonReader$JsonToEdgeMapper",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonReader$JsonToEdgeMapper",
          "module" : "gradoop-flink",
          "method" : "getSourceVertexID",
          "parameters" : [ "org.codehaus.jettison.json.JSONObject" ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonReader$JsonToEdgeMapper",
          "module" : "gradoop-flink",
          "method" : "getTargetVertexID",
          "parameters" : [ "org.codehaus.jettison.json.JSONObject" ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonReader$JsonToEdgeMapper",
          "module" : "gradoop-flink",
          "method" : "map",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonReader$JsonToGraphMapper",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonReader$JsonToGraphMapper",
          "module" : "gradoop-flink",
          "method" : "map",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonReader$JsonToVertexMapper",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonReader$JsonToVertexMapper",
          "module" : "gradoop-flink",
          "method" : "map",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonWriter$EdgeTextFormatter",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonWriter$EdgeTextFormatter",
          "module" : "gradoop-flink",
          "method" : "format",
          "parameters" : [ "org.apache.flink.graph.Edge" ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonWriter$GraphTextFormatter",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonWriter$GraphTextFormatter",
          "module" : "gradoop-flink",
          "method" : "format",
          "parameters" : [ "org.gradoop.model.impl.Subgraph" ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonWriter$VertexTextFormatter",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.json.JsonWriter$VertexTextFormatter",
          "module" : "gradoop-flink",
          "method" : "format",
          "parameters" : [ "org.apache.flink.graph.Vertex" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEdgeData",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEdgeData",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.lang.Long", "java.util.Map", "java.util.Set" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEdgeData",
          "module" : "gradoop-flink",
          "method" : "getSourceVertex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEdgeData",
          "module" : "gradoop-flink",
          "method" : "getTargetVertex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEdgeData",
          "module" : "gradoop-flink",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEntity",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEntity",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEntity",
          "module" : "gradoop-flink",
          "method" : "getId",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEntity",
          "module" : "gradoop-flink",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEntity",
          "module" : "gradoop-flink",
          "method" : "getProperty",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEntity",
          "module" : "gradoop-flink",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEntity",
          "module" : "gradoop-flink",
          "method" : "getPropertyKeys",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkEntity",
          "module" : "gradoop-flink",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkGraphData",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkGraphData",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkGraphElementEntity",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkGraphElementEntity",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.util.Set" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkGraphElementEntity",
          "module" : "gradoop-flink",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkGraphElementEntity",
          "module" : "gradoop-flink",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkVertexData",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkVertexData",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.util.Map", "java.util.Set" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPFlinkVertexData",
          "module" : "gradoop-flink",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "org.apache.flink.graph.Graph", "org.gradoop.model.impl.EPFlinkGraphData", "org.apache.flink.api.java.ExecutionEnvironment" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph",
          "module" : "gradoop-flink",
          "method" : "fromGraph",
          "parameters" : [ "org.apache.flink.graph.Graph", "org.gradoop.model.impl.EPFlinkGraphData" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph",
          "module" : "gradoop-flink",
          "method" : "getEdgeCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph",
          "module" : "gradoop-flink",
          "method" : "getGellyGraph",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph",
          "module" : "gradoop-flink",
          "method" : "getVertexCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph$EdgeKeySelector",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph$EdgeSourceVertexKeySelector",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph$EdgeTargetVertexKeySelector",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph$GraphKeySelector",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraph$VertexKeySelector",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraphCollection",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "org.apache.flink.graph.Graph", "org.apache.flink.api.java.DataSet", "org.apache.flink.api.java.ExecutionEnvironment" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraphCollection",
          "module" : "gradoop-flink",
          "method" : "getGraph",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraphCollection",
          "module" : "gradoop-flink",
          "method" : "getGraphCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EPGraphCollection",
          "module" : "gradoop-flink",
          "method" : "getSubgraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.FlinkGraphStore",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "org.apache.flink.api.java.DataSet", "org.apache.flink.api.java.DataSet", "org.apache.flink.api.java.DataSet", "org.apache.flink.api.java.ExecutionEnvironment" ]
        }, {
          "clazz" : "org.gradoop.model.impl.FlinkGraphStore",
          "module" : "gradoop-flink",
          "method" : "fromJsonFile",
          "parameters" : [ "java.lang.String", "java.lang.String", "java.lang.String", "org.apache.flink.api.java.ExecutionEnvironment" ]
        }, {
          "clazz" : "org.gradoop.model.impl.FlinkGraphStore",
          "module" : "gradoop-flink",
          "method" : "getCollection",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.FlinkGraphStore",
          "module" : "gradoop-flink",
          "method" : "getDatabaseGraph",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.FlinkGraphStore",
          "module" : "gradoop-flink",
          "method" : "writeAsJson",
          "parameters" : [ "java.lang.String", "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.FlinkGraphStore$EdgesConverter",
          "module" : "gradoop-flink",
          "method" : "map",
          "parameters" : [ "org.gradoop.model.impl.EPFlinkEdgeData" ]
        }, {
          "clazz" : "org.gradoop.model.impl.FlinkGraphStore$GraphsConverter",
          "module" : "gradoop-flink",
          "method" : "map",
          "parameters" : [ "org.gradoop.model.impl.EPFlinkGraphData" ]
        }, {
          "clazz" : "org.gradoop.model.impl.FlinkGraphStore$VerticesConverter",
          "module" : "gradoop-flink",
          "method" : "map",
          "parameters" : [ "org.gradoop.model.impl.EPFlinkVertexData" ]
        }, {
          "clazz" : "org.gradoop.model.impl.FlinkGraphStoreTest",
          "module" : "gradoop-flink",
          "method" : "testWriteAsJsonFile",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.Subgraph",
          "module" : "gradoop-flink",
          "method" : "<init>",
          "parameters" : [ "org.gradoop.model.impl.K", "org.gradoop.model.impl.V" ]
        }, {
          "clazz" : "org.gradoop.model.impl.Subgraph",
          "module" : "gradoop-flink",
          "method" : "getId",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.Subgraph",
          "module" : "gradoop-flink",
          "method" : "getValue",
          "parameters" : [ ]
        } ]
      }
    }
  },
  "commits" : {
    "c7b7778c3e9d9a36b9d9be77bb8ecbf7efe738cc" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d5bc5baeb00b670f64e09071bfaab76b4377c278",
      "changedClazzes" : { }
    },
    "d787db4c7ed78f9e64477fe053cb4832a44eba76" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c7b7778c3e9d9a36b9d9be77bb8ecbf7efe738cc",
      "changedClazzes" : { }
    },
    "92d80bf2b850b75293ea134466c78230b0a64ff0" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d787db4c7ed78f9e64477fe053cb4832a44eba76",
      "changedClazzes" : {
        "gradoop-core§org.gradoop.GConstants" : { },
        "gradoop-core§org.gradoop.GradoopClusterTest" : { },
        "gradoop-core§org.gradoop.GradoopTest" : { },
        "gradoop-core§org.gradoop.drivers.BulkDriver" : { },
        "gradoop-core§org.gradoop.drivers.BulkDriver$ConfUtils" : { },
        "gradoop-core§org.gradoop.drivers.BulkLoadDriver" : { },
        "gradoop-core§org.gradoop.drivers.BulkLoadDriver$LoadConfUtils" : { },
        "gradoop-core§org.gradoop.drivers.BulkLoadDriverTest" : { },
        "gradoop-core§org.gradoop.drivers.BulkWriteDriver" : { },
        "gradoop-core§org.gradoop.drivers.BulkWriteDriver$LoadConfUtils" : { },
        "gradoop-core§org.gradoop.drivers.BulkWriteDriverTest" : { },
        "gradoop-core§org.gradoop.io.formats.EPGAttributedWritable" : { },
        "gradoop-core§org.gradoop.io.formats.EPGEdgeDataValueWritable" : { },
        "gradoop-core§org.gradoop.io.formats.EPGEdgeValueWritable" : { },
        "gradoop-core§org.gradoop.io.formats.EPGLabeledAttributedWritable" : { },
        "gradoop-core§org.gradoop.io.formats.EPGVertexIdentifierWritable" : { },
        "gradoop-core§org.gradoop.io.formats.EPGVertexValueWritable" : { },
        "gradoop-core§org.gradoop.io.reader.AdjacencyListReader" : { },
        "gradoop-core§org.gradoop.io.reader.AdjacencyListReaderTest" : { },
        "gradoop-core§org.gradoop.io.reader.BulkLoadEPG" : { },
        "gradoop-core§org.gradoop.io.reader.BulkLoadTest" : { },
        "gradoop-core§org.gradoop.io.reader.ConfigurableVertexLineReader" : { },
        "gradoop-core§org.gradoop.io.reader.EPGVertexDataReaderTest" : { },
        "gradoop-core§org.gradoop.io.reader.EPGVertexReader" : { },
        "gradoop-core§org.gradoop.io.reader.EPGVertexReaderTest" : { },
        "gradoop-core§org.gradoop.io.reader.JsonReader" : { },
        "gradoop-core§org.gradoop.io.reader.JsonReaderTest" : { },
        "gradoop-core§org.gradoop.io.reader.RDFReader" : { },
        "gradoop-core§org.gradoop.io.reader.RDFReaderTest" : { },
        "gradoop-core§org.gradoop.io.reader.SimpleVertexDataReaderTest" : { },
        "gradoop-core§org.gradoop.io.reader.SimpleVertexReader" : { },
        "gradoop-core§org.gradoop.io.reader.SimpleVertexReaderTest" : { },
        "gradoop-core§org.gradoop.io.reader.SingleVertexReader" : { },
        "gradoop-core§org.gradoop.io.reader.VertexLineReader" : { },
        "gradoop-core§org.gradoop.io.writer.BulkWriteEPG" : { },
        "gradoop-core§org.gradoop.io.writer.BulkWriteTest" : { },
        "gradoop-core§org.gradoop.io.writer.JsonWriter" : { },
        "gradoop-core§org.gradoop.io.writer.JsonWriterTest" : { },
        "gradoop-core§org.gradoop.io.writer.Neo4JVertexDataLineWriterTest" : { },
        "gradoop-core§org.gradoop.io.writer.Neo4JVertexLineWriterTest" : { },
        "gradoop-core§org.gradoop.io.writer.Neo4jLineWriter" : { },
        "gradoop-core§org.gradoop.io.writer.SimpleVertexWriter" : { },
        "gradoop-core§org.gradoop.io.writer.VertexLineWriter" : { },
        "gradoop-core§org.gradoop.model.Attributed" : { },
        "gradoop-core§org.gradoop.model.Edge" : { },
        "gradoop-core§org.gradoop.model.EdgeData" : { },
        "gradoop-core§org.gradoop.model.Graph" : { },
        "gradoop-core§org.gradoop.model.GraphData" : { },
        "gradoop-core§org.gradoop.model.GraphElement" : { },
        "gradoop-core§org.gradoop.model.VertexData" : { },
        "gradoop-core§org.gradoop.model.impl.DefaultEdge" : { },
        "gradoop-core§org.gradoop.model.impl.DefaultEdgeData" : { },
        "gradoop-core§org.gradoop.model.impl.DefaultEdgeDataTest" : { },
        "gradoop-core§org.gradoop.model.impl.DefaultEdgeTest" : { },
        "gradoop-core§org.gradoop.model.impl.DefaultGraph" : { },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphData" : { },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphTest" : { },
        "gradoop-core§org.gradoop.model.impl.DefaultVertex" : { },
        "gradoop-core§org.gradoop.model.impl.DefaultVertexData" : { },
        "gradoop-core§org.gradoop.model.impl.DefaultVertexDataTest" : { },
        "gradoop-core§org.gradoop.model.impl.DefaultVertexTest" : { },
        "gradoop-core§org.gradoop.model.impl.EPGMElement" : { },
        "gradoop-core§org.gradoop.model.impl.EdgeComparator" : { },
        "gradoop-core§org.gradoop.model.impl.EdgeDataFactory" : { },
        "gradoop-core§org.gradoop.model.impl.EdgeFactory" : { },
        "gradoop-core§org.gradoop.model.impl.GraphDataFactory" : { },
        "gradoop-core§org.gradoop.model.impl.LabeledPropertyContainer" : { },
        "gradoop-core§org.gradoop.model.impl.PropertyContainer" : { },
        "gradoop-core§org.gradoop.model.impl.VertexDataFactory" : { },
        "gradoop-core§org.gradoop.model.impl.VertexFactory" : { },
        "gradoop-core§org.gradoop.model.operators.VertexAggregate" : { },
        "gradoop-core§org.gradoop.model.operators.VertexPredicate" : { },
        "gradoop-core§org.gradoop.storage.GraphStore" : { },
        "gradoop-core§org.gradoop.storage.hbase.BasicHandler" : { },
        "gradoop-core§org.gradoop.storage.hbase.EPGGraphHandler" : { },
        "gradoop-core§org.gradoop.storage.hbase.EPGVertexHandler" : { },
        "gradoop-core§org.gradoop.storage.hbase.EntityHandler" : { },
        "gradoop-core§org.gradoop.storage.hbase.GraphHandler" : { },
        "gradoop-core§org.gradoop.storage.hbase.HBaseGraphStore" : { },
        "gradoop-core§org.gradoop.storage.hbase.HBaseGraphStore$GraphIterator" : { },
        "gradoop-core§org.gradoop.storage.hbase.HBaseGraphStore$VertexIterator" : { },
        "gradoop-core§org.gradoop.storage.hbase.HBaseGraphStoreFactory" : { },
        "gradoop-core§org.gradoop.storage.hbase.HBaseGraphStoreTest" : { },
        "gradoop-core§org.gradoop.storage.hbase.VertexHandler" : { },
        "gradoop-flink§org.gradoop.io.json.JsonIO" : { },
        "gradoop-flink§org.gradoop.io.json.JsonIO$EntityToJsonFormatter" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonIO$JsonToEntityMapper" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonReader" : { },
        "gradoop-flink§org.gradoop.io.json.JsonReader$JsonToEdgeMapper" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonReader$JsonToGraphMapper" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonReader$JsonToVertexMapper" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonWriter" : { },
        "gradoop-flink§org.gradoop.io.json.JsonWriter$EdgeTextFormatter" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonWriter$GraphTextFormatter" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonWriter$VertexTextFormatter" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.EPEdgeData" : { },
        "gradoop-flink§org.gradoop.model.EPFlinkTest" : { },
        "gradoop-flink§org.gradoop.model.EPGraphData" : { },
        "gradoop-flink§org.gradoop.model.EPGraphElement" : { },
        "gradoop-flink§org.gradoop.model.EPVertexData" : { },
        "gradoop-flink§org.gradoop.model.WorkflowTest#clusterCharacteristicPatterns" : { },
        "gradoop-flink§org.gradoop.model.WorkflowTest#topRevenueBusinessProcess" : { },
        "gradoop-flink§org.gradoop.model.impl.EPEdgeCollection" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGraphCombineTest" : [ "testAssignment" ],
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPFlinkEdgeData" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGraphCombineTest" : [ "testAssignment" ],
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testFromJsonFile", "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPFlinkGraphData" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGraphCombineTest" : [ "testAssignment" ],
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPFlinkVertexData" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGraphCombineTest" : [ "testAssignment" ],
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testFromJsonFile", "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGraph" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGraphCombineTest" : [ "testAssignment" ],
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testFromJsonFile", "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGraph$EdgeKeySelector" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGraphCombineTest" : [ "testAssignment" ],
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testFromJsonFile", "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGraph$EdgeSourceVertexKeySelector" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGraphCombineTest" : [ "testAssignment" ],
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testFromJsonFile", "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGraph$EdgeTargetVertexKeySelector" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGraphCombineTest" : [ "testAssignment" ],
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testFromJsonFile", "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGraph$GraphKeySelector" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGraphCombineTest" : [ "testAssignment" ],
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testFromJsonFile", "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGraph$VertexKeySelector" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGraphCombineTest" : [ "testAssignment" ],
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testFromJsonFile", "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGraphCollection" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGraphCombineTest" : [ "testAssignment" ],
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testFromJsonFile", "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGraphCollection$EdgeGraphContainmentFilter" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGraphCollection$EdgeInGraphFilter" : { },
        "gradoop-flink§org.gradoop.model.impl.EPGraphCollection$VertexGraphContainmentFilter" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGraphCollection$VertexInGraphFilter" : { },
        "gradoop-flink§org.gradoop.model.impl.EPGraphCombineTest" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGraphExcludeTest" : { },
        "gradoop-flink§org.gradoop.model.impl.EPGraphOverlapTest" : { },
        "gradoop-flink§org.gradoop.model.impl.EPGraphSummarizeTest" : { },
        "gradoop-flink§org.gradoop.model.impl.EPVertexCollection" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGraphCombineTest" : [ "testAssignment" ],
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.FlinkGraphStore" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGraphCombineTest" : [ "testAssignment" ],
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testFromJsonFile", "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.FlinkGraphStore$EdgesConverter" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGraphCombineTest" : [ "testAssignment" ],
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.FlinkGraphStore$GraphsConverter" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGraphCombineTest" : [ "testAssignment" ],
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.FlinkGraphStore$VerticesConverter" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGraphCombineTest" : [ "testAssignment" ],
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryCollectionToCollectionOperator" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryCollectionToCollectionOperator$EdgeJoinFunction" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryCollectionToCollectionOperator$SubgraphGroupReducer" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryCollectionToCollectionOperator$SubgraphTupleKeySelector" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryCollectionToCollectionOperator$Tuple2LongMapper" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryGraphToGraphOperator" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryGraphToGraphOperator$EdgeGroupReducer" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryGraphToGraphOperator$EdgeToGraphUpdater" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryGraphToGraphOperator$VertexGroupReducer" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryGraphToGraphOperator$VertexToGraphUpdater" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.Aggregation" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGraphAggregateTest" : [ "aggregateEdgeCountTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.Combination" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.Difference" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.DifferenceWithSmallResult" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Exclusion" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Intersect" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.IntersectWithSmall" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Overlap" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Projection" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Summarization" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Summarization$EdgeGroupSummarizer" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Summarization$SummarizationBuilder" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Summarization$VertexGroupSummarizer" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Summarization$VertexGroupingKeySelector" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.SummarizationCross" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.SummarizationCross$EdgeProjection" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.SummarizationCross$FirstRoundFlatMap" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.SummarizationCross$InterEdgeFilter" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.SummarizationCross$IntraEdgeFilterWith" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.SummarizationCross$SecondRoundFlatMap" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.SummarizationCross$VertexGroupToList" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.SummarizationJoin" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.SummarizationJoin$SourceVertexJoinFunction" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.SummarizationJoin$TargetVertexJoinFunction" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.SummarizationJoin$VertexToRepresentativeReducer" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Union" : { },
        "gradoop-flink§org.gradoop.model.operators.EPEdgeCollectionOperators" : { },
        "gradoop-flink§org.gradoop.model.operators.EPGraphCollectionOperators" : { },
        "gradoop-flink§org.gradoop.model.operators.EPGraphOperators" : { },
        "gradoop-flink§org.gradoop.model.operators.EPVertexCollectionOperators" : { }
      }
    },
    "4a6d0d5e37f46f18d788d0dc6acc48b9476a45df" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "92d80bf2b850b75293ea134466c78230b0a64ff0",
      "changedClazzes" : {
        "gradoop-core§org.gradoop.model.EPGMElementFactory" : { },
        "gradoop-core§org.gradoop.model.EdgeDataFactory" : { },
        "gradoop-core§org.gradoop.model.GraphDataFactory" : { },
        "gradoop-core§org.gradoop.model.VertexDataFactory" : { },
        "gradoop-core§org.gradoop.model.impl.DefaultEdgeData" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testFromJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultEdgeDataFactory" : { },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphDataFactory" : { },
        "gradoop-core§org.gradoop.model.impl.DefaultVertexData" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testFromJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultVertexDataFactory" : { },
        "gradoop-core§org.gradoop.model.impl.EPGMGraphElement" : { },
        "gradoop-core§org.gradoop.model.impl.EdgeDataFactory" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testFromJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.GraphDataFactory" : { },
        "gradoop-core§org.gradoop.model.impl.VertexDataFactory" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testFromJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonIO" : { },
        "gradoop-flink§org.gradoop.io.json.JsonIO$EntityToJsonFormatter" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonIO$JsonToEntityMapper" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testFromJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonReader" : { },
        "gradoop-flink§org.gradoop.io.json.JsonReader$JsonToEdgeMapper" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testFromJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonReader$JsonToGraphMapper" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testFromJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonReader$JsonToVertexMapper" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testFromJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonWriter$EdgeTextFormatter" : { },
        "gradoop-flink§org.gradoop.io.json.JsonWriter$GraphTextFormatter" : { },
        "gradoop-flink§org.gradoop.io.json.JsonWriter$VertexTextFormatter" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.EPFlinkTest" : { },
        "gradoop-flink§org.gradoop.model.WorkflowTest" : { },
        "gradoop-flink§org.gradoop.model.WorkflowTest$BTG" : { },
        "gradoop-flink§org.gradoop.model.WorkflowTest$FSM" : { },
        "gradoop-flink§org.gradoop.model.WorkflowTest$LP" : { },
        "gradoop-flink§org.gradoop.model.helper.KeySelectors" : { },
        "gradoop-flink§org.gradoop.model.impl.EPEdgeCollection" : { },
        "gradoop-flink§org.gradoop.model.impl.EPGraph" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testFromJsonFile", "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGraph$EdgeKeySelector" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testFromJsonFile", "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGraph$EdgeSourceVertexKeySelector" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testFromJsonFile", "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGraph$EdgeTargetVertexKeySelector" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testFromJsonFile", "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGraph$GraphKeySelector" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testFromJsonFile", "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGraph$VertexKeySelector" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testFromJsonFile", "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGraphCollection" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGraphCombineTest" : [ "testAssignment" ],
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testFromJsonFile", "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGraphCollection$EdgeGraphContainmentFilter" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGraphCollection$EdgeInGraphFilter" : { },
        "gradoop-flink§org.gradoop.model.impl.EPGraphCollection$VertexGraphContainmentFilter" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGraphCollection$VertexInGraphFilter" : { },
        "gradoop-flink§org.gradoop.model.impl.EPGraphSummarizeCrossTest" : { },
        "gradoop-flink§org.gradoop.model.impl.EPGraphSummarizeJoinTest" : { },
        "gradoop-flink§org.gradoop.model.impl.EPGraphSummarizeTest" : { },
        "gradoop-flink§org.gradoop.model.impl.EPVertexCollection" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.FlinkGraphStore" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGraphCombineTest" : [ "testAssignment" ],
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testFromJsonFile", "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.FlinkGraphStore$EdgesConverter" : { },
        "gradoop-flink§org.gradoop.model.impl.FlinkGraphStore$GraphsConverter" : { },
        "gradoop-flink§org.gradoop.model.impl.FlinkGraphStore$VerticesConverter" : { },
        "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.FlinkGraphStoreTest" : [ "testFromJsonFile", "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryCollectionToCollectionOperator" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryCollectionToCollectionOperator$EdgeJoinFunction" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryCollectionToCollectionOperator$SubgraphGroupReducer" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryCollectionToCollectionOperator$SubgraphTupleKeySelector" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryCollectionToCollectionOperator$Tuple2LongMapper" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryGraphToGraphOperator" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryGraphToGraphOperator$EdgeGroupReducer" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryGraphToGraphOperator$EdgeToGraphUpdater" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryGraphToGraphOperator$VertexGroupReducer" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryGraphToGraphOperator$VertexToGraphUpdater" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Aggregation" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Combination" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Difference" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.DifferenceWithSmallResult" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Exclusion" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Intersect" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.IntersectWithSmall" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Overlap" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Projection" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Summarization" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Summarization$EdgeGroupSummarizer" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Summarization$SummarizationBuilder" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Summarization$VertexGroupSummarizer" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Summarization$VertexGroupingKeySelector" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.SummarizationCross" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.SummarizationCross$EdgeProjection" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.SummarizationCross$FirstRoundFlatMap" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.SummarizationCross$InterEdgeFilter" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.SummarizationCross$IntraEdgeFilterWith" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.SummarizationCross$SecondRoundFlatMap" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.SummarizationCross$VertexGroupToList" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.SummarizationJoin" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.SummarizationJoin$SourceVertexJoinFunction" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.SummarizationJoin$TargetVertexJoinFunction" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.SummarizationJoin$VertexToRepresentativeReducer" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Union" : { },
        "gradoop-flink§org.gradoop.model.operators.BinaryCollectionToCollectionOperator" : { },
        "gradoop-flink§org.gradoop.model.operators.BinaryGraphToGraphOperator" : { },
        "gradoop-flink§org.gradoop.model.operators.EPEdgeCollectionOperators" : { },
        "gradoop-flink§org.gradoop.model.operators.EPGraphCollectionOperators" : { },
        "gradoop-flink§org.gradoop.model.operators.EPGraphOperators" : { },
        "gradoop-flink§org.gradoop.model.operators.EPVertexCollectionOperators" : { },
        "gradoop-flink§org.gradoop.model.operators.UnaryCollectionToCollectionOperator" : { },
        "gradoop-flink§org.gradoop.model.operators.UnaryCollectionToGraphOperator" : { },
        "gradoop-flink§org.gradoop.model.operators.UnaryGraphToCollectionOperator" : { },
        "gradoop-flink§org.gradoop.model.operators.UnaryGraphToGraphOperator" : { },
        "gradoop-flink§org.gradoop.model.store.EPGraphStore" : { }
      }
    },
    "b07a249b553b376afcebf4da4f0fcb49149aaf59" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4a6d0d5e37f46f18d788d0dc6acc48b9476a45df",
      "changedClazzes" : {
        "gradoop-core§org.gradoop.model.impl.DefaultEPGMElementFactory" : { },
        "gradoop-core§org.gradoop.model.impl.DefaultEPGMElementFactory#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultEPGMElementFactory#checkId(java.lang.Long)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultEPGMElementFactory#checkLabel(java.lang.String)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultEdgeData#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultEdgeData#getSourceVertexId" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testGetDatabaseGraph", "testWriteAsJsonFile" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultEdgeData#getTargetVertexId" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testGetDatabaseGraph", "testWriteAsJsonFile" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultEdgeData#toString" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testGetDatabaseGraph", "testWriteAsJsonFile" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultEdgeDataFactory" : { },
        "gradoop-core§org.gradoop.model.impl.DefaultEdgeDataFactory#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultEdgeDataFactory#createEdgeData(java.lang.Long,java.lang.String,java.lang.Long,java.lang.Long,java.util.Map,java.util.Set)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultEdgeDataFactory#getType" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphData#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphData#getEdges" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphData#getVertices" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphData#toString" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testWriteAsJsonFile" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphDataFactory" : { },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphDataFactory#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphDataFactory#createGraphData(java.lang.Long)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphDataFactory#getType" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultVertexData#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultVertexData#toString" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testGetDatabaseGraph", "testWriteAsJsonFile" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultVertexDataFactory" : { },
        "gradoop-core§org.gradoop.model.impl.DefaultVertexDataFactory#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultVertexDataFactory#createVertexData(java.lang.Long,java.lang.String,java.util.Map,java.util.Set)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultVertexDataFactory#getType" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.EPGMElement#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.EPGMElement#equals(java.lang.Object)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.EPGMElement#getId" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testGetDatabaseGraph", "testWriteAsJsonFile" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.EPGMElement#getLabel" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testWriteAsJsonFile" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.EPGMElement#getProperties" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.EPGMElement#getProperty(java.lang.String)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testWriteAsJsonFile" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.EPGMElement#getPropertyCount" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testWriteAsJsonFile" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.EPGMElement#getPropertyKeys" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.EPGMElement#setProperties(java.util.Map)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.EPGMElement#setProperty(java.lang.String,java.lang.Object)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.EPGMElement#toString" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testGetDatabaseGraph", "testWriteAsJsonFile" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.EPGMGraphElement#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.EPGMGraphElement#addGraph(java.lang.Long)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.EPGMGraphElement#getGraphCount" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testWriteAsJsonFile" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.EPGMGraphElement#getGraphs" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testWriteAsJsonFile" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.EPGMGraphElement#toString" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testGetDatabaseGraph", "testWriteAsJsonFile" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-examples§org.gradoop.examples.Summarization" : { },
        "gradoop-examples§org.gradoop.examples.package-info" : { },
        "gradoop-flink§org.gradoop.io.json.JsonIO$EntityToJsonFormatter#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonIO$EntityToJsonFormatter#writeGraphElementMeta(org.gradoop.io.json.T)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonIO$EntityToJsonFormatter#writeGraphMeta(org.gradoop.io.json.T)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonIO$EntityToJsonFormatter#writeJsonArray(java.util.Set)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonIO$EntityToJsonFormatter#writeMeta(org.gradoop.model.Labeled)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonIO$EntityToJsonFormatter#writeProperties(org.gradoop.model.Attributed)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonIO$JsonToEntityMapper#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonIO$JsonToEntityMapper#getArrayValues(org.codehaus.jettison.json.JSONArray)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonIO$JsonToEntityMapper#getGraphs(org.codehaus.jettison.json.JSONObject)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonIO$JsonToEntityMapper#getID(org.codehaus.jettison.json.JSONObject)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonIO$JsonToEntityMapper#getLabel(org.codehaus.jettison.json.JSONObject)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonIO$JsonToEntityMapper#getProperties(org.codehaus.jettison.json.JSONObject)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonReader" : { },
        "gradoop-flink§org.gradoop.io.json.JsonReader$JsonToEdgeMapper" : { },
        "gradoop-flink§org.gradoop.io.json.JsonReader$JsonToEdgeMapper#<init>(org.gradoop.model.EdgeDataFactory)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonReader$JsonToEdgeMapper#getSourceVertexID(org.codehaus.jettison.json.JSONObject)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonReader$JsonToEdgeMapper#getTargetVertexID(org.codehaus.jettison.json.JSONObject)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonReader$JsonToEdgeMapper#map(java.lang.String)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonReader$JsonToGraphMapper" : { },
        "gradoop-flink§org.gradoop.io.json.JsonReader$JsonToGraphMapper#<init>(org.gradoop.model.GraphDataFactory)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonReader$JsonToGraphMapper#map(java.lang.String)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonReader$JsonToVertexMapper" : { },
        "gradoop-flink§org.gradoop.io.json.JsonReader$JsonToVertexMapper#<init>(org.gradoop.model.VertexDataFactory)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonReader$JsonToVertexMapper#map(java.lang.String)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonWriter$EdgeTextFormatter#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonWriter$EdgeTextFormatter#format(org.apache.flink.graph.Edge)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonWriter$GraphTextFormatter#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonWriter$GraphTextFormatter#format(org.gradoop.model.impl.Subgraph)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonWriter$VertexTextFormatter#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonWriter$VertexTextFormatter#format(org.apache.flink.graph.Vertex)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.package-info" : { },
        "gradoop-flink§org.gradoop.model.EPPatternGraph" : { },
        "gradoop-flink§org.gradoop.model.FlinkTest" : { },
        "gradoop-flink§org.gradoop.model.WorkflowTest" : { },
        "gradoop-flink§org.gradoop.model.WorkflowTest$BTG" : { },
        "gradoop-flink§org.gradoop.model.WorkflowTest$FSM" : { },
        "gradoop-flink§org.gradoop.model.WorkflowTest$LP" : { },
        "gradoop-flink§org.gradoop.model.helper.FlinkConstants" : { },
        "gradoop-flink§org.gradoop.model.helper.KeySelectors$EdgeKeySelector#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.helper.KeySelectors$EdgeKeySelector#getKey(org.apache.flink.graph.Edge)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.helper.KeySelectors$GraphKeySelector#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.helper.KeySelectors$GraphKeySelector#getKey(org.gradoop.model.impl.Subgraph)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.helper.KeySelectors$VertexKeySelector#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.helper.KeySelectors$VertexKeySelector#getKey(org.apache.flink.graph.Vertex)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.helper.package-info" : { },
        "gradoop-flink§org.gradoop.model.impl.EPFlinkEntity" : { },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabase" : { },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabase#<init>(org.apache.flink.api.java.DataSet,org.apache.flink.api.java.DataSet,org.apache.flink.api.java.DataSet,org.gradoop.model.VertexDataFactory,org.gradoop.model.EdgeDataFactory,org.gradoop.model.GraphDataFactory,org.apache.flink.api.java.ExecutionEnvironment)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabase#fromJsonFile(java.lang.String,java.lang.String,java.lang.String,org.apache.flink.api.java.ExecutionEnvironment)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabase#getCollection" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabase#getDatabaseGraph" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabase#getGraph(java.lang.Long)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabase#writeAsJson(java.lang.String,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabase$EdgesConverter#map(org.gradoop.model.impl.ED)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testGetDatabaseGraph", "testWriteAsJsonFile" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabase$GraphsConverter#map(org.gradoop.model.impl.GD)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testWriteAsJsonFile" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabase$VerticesConverter#map(org.gradoop.model.impl.VD)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testGetDatabaseGraph", "testWriteAsJsonFile" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest#testFromJsonFile" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest#testGetDatabaseGraph" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testGetDatabaseGraph" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest#testWriteAsJsonFile" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGraphCollectionDifferenceTest" : { },
        "gradoop-flink§org.gradoop.model.impl.EPGraphCollectionIntersectTest" : { },
        "gradoop-flink§org.gradoop.model.impl.EdgeDataCollection" : { },
        "gradoop-flink§org.gradoop.model.impl.EdgeDataCollection#<init>(org.apache.flink.api.java.DataSet)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EdgeDataCollection#collect" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EdgeDataCollection#size" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.GraphCollection" : { },
        "gradoop-flink§org.gradoop.model.impl.GraphCollection#<init>(org.apache.flink.graph.Graph,org.apache.flink.api.java.DataSet,org.gradoop.model.VertexDataFactory,org.gradoop.model.EdgeDataFactory,org.gradoop.model.GraphDataFactory,org.apache.flink.api.java.ExecutionEnvironment)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.GraphCollection#getGellyGraph" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.GraphCollection#getGraph(java.lang.Long)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.GraphCollection#getGraphCount" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.GraphCollection#getSubgraphs" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.GraphCollection$EdgeInGraphFilter#<init>(long)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.GraphCollection$EdgeInGraphFilter#filter(org.apache.flink.graph.Edge)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.GraphCollection$VertexInGraphFilter#<init>(long)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.GraphCollection$VertexInGraphFilter#filter(org.apache.flink.graph.Vertex)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.GraphCollectionDifferenceTest" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.GraphCollectionDifferenceTest" : [ "testDifference" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.GraphCollectionGetGraphTest" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.GraphCollectionGetGraphTest" : [ "testGetGraph", "testGetGraphs" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.GraphCollectionIntersectTest" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.GraphCollectionIntersectTest" : [ "testIntersect" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.GraphCollectionUnionTest" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.GraphCollectionUnionTest" : [ "testUnion" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph" : { },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#<init>(org.apache.flink.graph.Graph,org.gradoop.model.impl.GD,org.gradoop.model.VertexDataFactory,org.gradoop.model.EdgeDataFactory,org.gradoop.model.GraphDataFactory,org.apache.flink.api.java.ExecutionEnvironment)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testGetDatabaseGraph", "testWriteAsJsonFile" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#aggregate(java.lang.String,org.gradoop.model.helper.UnaryFunction)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#callForGraph(org.gradoop.model.operators.BinaryGraphToGraphOperator,org.gradoop.model.impl.LogicalGraph)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#combine(org.gradoop.model.impl.LogicalGraph)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#fromGraph(org.apache.flink.graph.Graph,org.gradoop.model.impl.GD,org.gradoop.model.VertexDataFactory,org.gradoop.model.EdgeDataFactory,org.gradoop.model.GraphDataFactory)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testGetDatabaseGraph", "testWriteAsJsonFile" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#getEdgeCount" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#getEdgeDataFactory" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#getEdges" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#getGellyGraph" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testWriteAsJsonFile" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#getGraphDataFactory" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#getId" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#getLabel" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#getProperties" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#getProperty(java.lang.String)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#getPropertyCount" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#getVertexCount" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#getVertexDataFactory" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#getVertices" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest#aggregateEdgeCountTest" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest#testAssignment" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphExcludeTest" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphExcludeTest" : [ "testAssignment", "testExclude" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphGetElementsTest" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphGetElementsTest" : [ "testGetEdges", "testGetOutgoingAndIncomingEdges", "testGetVertices" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphOverlapTest" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphOverlapTest" : [ "testAssignment", "testOverlap" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphSummarizeCrossTest" : { },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphSummarizeJoinTest" : { },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphSummarizeTest" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphSummarizeTest" : [ "testSummarizeOnVertexAndEdgeLabel", "testSummarizeOnVertexAndEdgeLabelAndEdgeProperty", "testSummarizeOnVertexAndEdgeLabelAndEdgePropertyWithAbsentValue", "testSummarizeOnVertexAndEdgeLabelAndVertexAndEdgeProperty", "testSummarizeOnVertexAndEdgeLabelAndVertexAndEdgePropertyWithAbsentValue", "testSummarizeOnVertexAndEdgeLabelAndVertexProperty", "testSummarizeOnVertexAndEdgeLabelAndVertexPropertyWithAbsentValue", "testSummarizeOnVertexAndEdgeProperty", "testSummarizeOnVertexAndEdgePropertyWithAbsentValues", "testSummarizeOnVertexLabel", "testSummarizeOnVertexLabelAndEdgeProperty", "testSummarizeOnVertexLabelAndEdgePropertyWithAbsentValue", "testSummarizeOnVertexLabelAndVertexAndEdgeProperty", "testSummarizeOnVertexLabelAndVertexProperty", "testSummarizeOnVertexLabelAndVertexPropertyWithAbsentValue", "testSummarizeOnVertexProperty", "testSummarizeOnVertexPropertySymmetricGraph", "testSummarizeOnVertexPropertyWithAbsentValue" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.Subgraph" : { },
        "gradoop-flink§org.gradoop.model.impl.Subgraph#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.Subgraph#getId" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.Subgraph#getValue" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testWriteAsJsonFile" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.VertexDataCollection" : { },
        "gradoop-flink§org.gradoop.model.impl.VertexDataCollection#<init>(org.apache.flink.api.java.DataSet)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.VertexDataCollection#collect" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.VertexDataCollection#size" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testGetDatabaseGraph" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryCollectionToCollectionOperator" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryCollectionToCollectionOperator$EdgeJoinFunction" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryCollectionToCollectionOperator$SubgraphGroupReducer" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryCollectionToCollectionOperator$SubgraphTupleKeySelector" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryCollectionToCollectionOperator$Tuple2LongMapper" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryGraphToGraphOperator" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryGraphToGraphOperator#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryGraphToGraphOperator#execute(org.gradoop.model.impl.LogicalGraph,org.gradoop.model.impl.LogicalGraph)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryGraphToGraphOperator$EdgeGroupReducer" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryGraphToGraphOperator$EdgeToGraphUpdater" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryGraphToGraphOperator$EdgeToGraphUpdater#<init>(long)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryGraphToGraphOperator$EdgeToGraphUpdater#map(org.apache.flink.graph.Edge)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryGraphToGraphOperator$VertexGroupReducer" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryGraphToGraphOperator$VertexToGraphUpdater" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryGraphToGraphOperator$VertexToGraphUpdater#<init>(long)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryGraphToGraphOperator$VertexToGraphUpdater#map(org.apache.flink.graph.Vertex)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.Aggregation" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Aggregation#<init>(java.lang.String,org.gradoop.model.helper.UnaryFunction)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.Aggregation#execute(org.gradoop.model.impl.LogicalGraph)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.Combination" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Combination#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.Combination#executeInternal(org.gradoop.model.impl.LogicalGraph,org.gradoop.model.impl.LogicalGraph)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.Difference" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.DifferenceUsingList" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.DifferenceWithSmallResult" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Exclusion" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Intersect" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.IntersectUsingList" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Overlap" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Projection" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.SetOperator" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Summarization" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Summarization$EdgeGroupSummarizer" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Summarization$VertexGroupSummarizer" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Summarization$VertexGroupingKeySelector" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.SummarizationUsingCross" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.SummarizationUsingJoin" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Union" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.package-info" : { },
        "gradoop-flink§org.gradoop.model.impl.package-info" : { },
        "gradoop-flink§org.gradoop.model.operators.BinaryCollectionToCollectionOperator" : { },
        "gradoop-flink§org.gradoop.model.operators.BinaryGraphToGraphOperator" : { },
        "gradoop-flink§org.gradoop.model.operators.DataCollectionOperators" : { },
        "gradoop-flink§org.gradoop.model.operators.EPGraphCollectionOperators" : { },
        "gradoop-flink§org.gradoop.model.operators.EPGraphOperators" : { },
        "gradoop-flink§org.gradoop.model.operators.EdgeDataCollectionOperators" : { },
        "gradoop-flink§org.gradoop.model.operators.GraphCollectionOperators" : { },
        "gradoop-flink§org.gradoop.model.operators.LogicalGraphOperators" : { },
        "gradoop-flink§org.gradoop.model.operators.UnaryCollectionToCollectionOperator" : { },
        "gradoop-flink§org.gradoop.model.operators.UnaryCollectionToGraphOperator" : { },
        "gradoop-flink§org.gradoop.model.operators.UnaryGraphToCollectionOperator" : { },
        "gradoop-flink§org.gradoop.model.operators.UnaryGraphToGraphOperator" : { },
        "gradoop-flink§org.gradoop.model.operators.VertexDataCollectionOperators" : { },
        "gradoop-flink§org.gradoop.model.operators.package-info" : { },
        "gradoop-flink§org.gradoop.model.store.EPGraphStore" : { }
      }
    },
    "3778a722f9a0cd1cb99caac12ec4ea726d4e4ce1" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "b07a249b553b376afcebf4da4f0fcb49149aaf59",
      "changedClazzes" : {
        "gradoop-flink§org.gradoop.model.impl.GraphCollectionGetGraphTest" : { },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testFromJsonFile", "testGetDatabaseGraph", "testWriteAsJsonFile" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        }
      }
    },
    "5468cb526b03c33dc86df8183981248ca122aa76" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3778a722f9a0cd1cb99caac12ec4ea726d4e4ce1",
      "changedClazzes" : {
        "gradoop-core§org.gradoop.GConstants" : { },
        "gradoop-core§org.gradoop.GradoopClusterTest" : { },
        "gradoop-core§org.gradoop.GradoopTest#createEdgeDataCollection" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.GradoopTest#createGraphDataCollection" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.GradoopTest#createVertexDataCollection" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.HBaseTest" : { },
        "gradoop-core§org.gradoop.HBaseTest#createEmptyEPGMStore" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.HBaseTest#createPersistentSocialEdgeData" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.HBaseTest#createPersistentSocialGraphData" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.HBaseTest#createPersistentSocialVertexData" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.drivers.BulkDriver" : { },
        "gradoop-core§org.gradoop.drivers.BulkLoadDriver" : { },
        "gradoop-core§org.gradoop.drivers.BulkWriteDriver" : { },
        "gradoop-core§org.gradoop.drivers.package-info" : { },
        "gradoop-core§org.gradoop.io.formats.EPGAttributedWritable" : { },
        "gradoop-core§org.gradoop.io.formats.EPGEdgeDataValueWritable" : { },
        "gradoop-core§org.gradoop.io.formats.EPGLabeledAttributedWritable" : { },
        "gradoop-core§org.gradoop.io.formats.EPGVertexIdentifierWritable" : { },
        "gradoop-core§org.gradoop.io.formats.EPGVertexValueWritable" : { },
        "gradoop-core§org.gradoop.io.reader.AdjacencyListReader" : { },
        "gradoop-core§org.gradoop.io.reader.BulkLoadEPG" : { },
        "gradoop-core§org.gradoop.io.reader.ConfigurableVertexLineReader" : { },
        "gradoop-core§org.gradoop.io.reader.EPGVertexReader" : { },
        "gradoop-core§org.gradoop.io.reader.JsonReader" : { },
        "gradoop-core§org.gradoop.io.reader.RDFReader" : { },
        "gradoop-core§org.gradoop.io.reader.SimpleVertexReader" : { },
        "gradoop-core§org.gradoop.io.reader.SingleVertexReader" : { },
        "gradoop-core§org.gradoop.io.reader.VertexLineReader" : { },
        "gradoop-core§org.gradoop.io.writer.BulkWriteEPG" : { },
        "gradoop-core§org.gradoop.io.writer.JsonWriter" : { },
        "gradoop-core§org.gradoop.io.writer.Neo4jLineWriter" : { },
        "gradoop-core§org.gradoop.io.writer.SimpleVertexWriter" : { },
        "gradoop-core§org.gradoop.io.writer.VertexLineWriter" : { },
        "gradoop-core§org.gradoop.io.writer.package-info" : { },
        "gradoop-core§org.gradoop.model.EPGMElementFactory" : { },
        "gradoop-core§org.gradoop.model.EdgeData" : { },
        "gradoop-core§org.gradoop.model.Element" : { },
        "gradoop-core§org.gradoop.model.GraphData" : { },
        "gradoop-core§org.gradoop.model.GraphDataFactory" : { },
        "gradoop-core§org.gradoop.model.GraphElement" : { },
        "gradoop-core§org.gradoop.model.VertexData" : { },
        "gradoop-core§org.gradoop.model.impl.DefaultEPGMElementFactory#<init>" : {
          "testcases" : {
            "gradoop-core§org.gradoop.model.impl.DefaultGraphDataTest" : [ "createDefaultGraphTest", "createWithEmptyLabelTest", "createWithIDTest", "createWithMissingLabelTest", "createWithNullIDTest", "createWithNullLabelTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultEPGMElementFactory#checkId(java.lang.Long)" : {
          "testcases" : {
            "gradoop-core§org.gradoop.model.impl.DefaultGraphDataTest" : [ "createDefaultGraphTest", "createWithEmptyLabelTest", "createWithIDTest", "createWithMissingLabelTest", "createWithNullIDTest", "createWithNullLabelTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultEPGMElementFactory#checkLabel(java.lang.String)" : {
          "testcases" : {
            "gradoop-core§org.gradoop.model.impl.DefaultGraphDataTest" : [ "createDefaultGraphTest", "createWithEmptyLabelTest", "createWithIDTest", "createWithMissingLabelTest", "createWithNullLabelTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultEdgeData#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultEdgeData#getSourceVertexId" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultEdgeData#getTargetVertexId" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultEdgeData#toString" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultEdgeDataFactory" : { },
        "gradoop-core§org.gradoop.model.impl.DefaultEdgeDataFactory#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultEdgeDataFactory#createEdgeData(java.lang.Long,java.lang.String,java.lang.Long,java.lang.Long)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultEdgeDataFactory#getType" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultElement" : { },
        "gradoop-core§org.gradoop.model.impl.DefaultElement#<init>" : {
          "testcases" : {
            "gradoop-core§org.gradoop.model.impl.DefaultGraphDataTest" : [ "createDefaultGraphTest", "createWithIDTest", "createWithMissingLabelTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultElement#getId" : {
          "testcases" : {
            "gradoop-core§org.gradoop.model.impl.DefaultGraphDataTest" : [ "createDefaultGraphTest", "createWithIDTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultElement#getLabel" : {
          "testcases" : {
            "gradoop-core§org.gradoop.model.impl.DefaultGraphDataTest" : [ "createDefaultGraphTest", "createWithMissingLabelTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultElement#getProperty(java.lang.String)" : {
          "testcases" : {
            "gradoop-core§org.gradoop.model.impl.DefaultGraphDataTest" : [ "createDefaultGraphTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultElement#getPropertyCount" : {
          "testcases" : {
            "gradoop-core§org.gradoop.model.impl.DefaultGraphDataTest" : [ "createDefaultGraphTest", "createWithIDTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultElement#getPropertyKeys" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultElement#hashCode" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultElement#toString" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphData" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphData#<init>" : {
          "testcases" : {
            "gradoop-core§org.gradoop.model.impl.DefaultGraphDataTest" : [ "createDefaultGraphTest", "createWithIDTest", "createWithMissingLabelTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphData#toString" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphDataFactory" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphDataFactory#<init>" : {
          "testcases" : {
            "gradoop-core§org.gradoop.model.impl.DefaultGraphDataTest" : [ "createDefaultGraphTest", "createWithEmptyLabelTest", "createWithIDTest", "createWithMissingLabelTest", "createWithNullIDTest", "createWithNullLabelTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphDataFactory#createGraphData(java.lang.Long)" : {
          "testcases" : {
            "gradoop-core§org.gradoop.model.impl.DefaultGraphDataTest" : [ "createDefaultGraphTest", "createWithEmptyLabelTest", "createWithIDTest", "createWithMissingLabelTest", "createWithNullIDTest", "createWithNullLabelTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphDataFactory#getType" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphDataTest" : {
          "testcases" : {
            "gradoop-core§org.gradoop.model.impl.DefaultGraphDataTest" : [ "createDefaultGraphTest", "createWithEmptyLabelTest", "createWithIDTest", "createWithMissingLabelTest", "createWithNullIDTest", "createWithNullLabelTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphDataTest#createDefaultGraphTest" : {
          "testcases" : {
            "gradoop-core§org.gradoop.model.impl.DefaultGraphDataTest" : [ "createDefaultGraphTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphDataTest#createWithEmptyLabelTest" : {
          "testcases" : {
            "gradoop-core§org.gradoop.model.impl.DefaultGraphDataTest" : [ "createWithEmptyLabelTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphDataTest#createWithIDTest" : {
          "testcases" : {
            "gradoop-core§org.gradoop.model.impl.DefaultGraphDataTest" : [ "createWithIDTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphDataTest#createWithMissingLabelTest" : {
          "testcases" : {
            "gradoop-core§org.gradoop.model.impl.DefaultGraphDataTest" : [ "createWithMissingLabelTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphDataTest#createWithNullIDTest" : {
          "testcases" : {
            "gradoop-core§org.gradoop.model.impl.DefaultGraphDataTest" : [ "createWithNullIDTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphDataTest#createWithNullLabelTest" : {
          "testcases" : {
            "gradoop-core§org.gradoop.model.impl.DefaultGraphDataTest" : [ "createWithNullLabelTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphElement" : { },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphElement#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphElement#getGraphCount" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphElement#getGraphs" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphElement#toString" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphTest" : { },
        "gradoop-core§org.gradoop.model.impl.DefaultVertexData#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultVertexData#toString" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultVertexDataFactory" : { },
        "gradoop-core§org.gradoop.model.impl.DefaultVertexDataFactory#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultVertexDataFactory#createVertexData(java.lang.Long,java.lang.String,java.util.Map)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultVertexDataFactory#getType" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-core§org.gradoop.storage.EPGMStore" : { },
        "gradoop-core§org.gradoop.storage.EdgeDataHandler" : { },
        "gradoop-core§org.gradoop.storage.ElementHandler" : { },
        "gradoop-core§org.gradoop.storage.GraphDataHandler" : { },
        "gradoop-core§org.gradoop.storage.GraphElementHandler" : { },
        "gradoop-core§org.gradoop.storage.GraphStore" : { },
        "gradoop-core§org.gradoop.storage.PersistentEdgeData" : { },
        "gradoop-core§org.gradoop.storage.PersistentEdgeDataFactory" : { },
        "gradoop-core§org.gradoop.storage.PersistentGraphData" : { },
        "gradoop-core§org.gradoop.storage.PersistentGraphDataFactory" : { },
        "gradoop-core§org.gradoop.storage.PersistentVertexData" : { },
        "gradoop-core§org.gradoop.storage.PersistentVertexDataFactory" : { },
        "gradoop-core§org.gradoop.storage.VertexDataHandler" : { },
        "gradoop-core§org.gradoop.storage.hbase.BasicHandler" : { },
        "gradoop-core§org.gradoop.storage.hbase.DefaultEdgeDataHandler" : { },
        "gradoop-core§org.gradoop.storage.hbase.DefaultEdgeDataHandler#<init>(org.gradoop.model.EdgeDataFactory)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultEdgeDataHandler#createTable(org.apache.hadoop.hbase.client.HBaseAdmin,org.apache.hadoop.hbase.HTableDescriptor)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultEdgeDataHandler#createVertexIdentifier(org.gradoop.model.VertexData)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultEdgeDataHandler#getEdgeDataFactory" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultEdgeDataHandler#readEdgeData(org.apache.hadoop.hbase.client.Result)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultEdgeDataHandler#readSourceVertexId(org.apache.hadoop.hbase.client.Result)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultEdgeDataHandler#readTargetVertexId(org.apache.hadoop.hbase.client.Result)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultEdgeDataHandler#writeEdgeData(org.apache.hadoop.hbase.client.Put,org.gradoop.storage.PersistentEdgeData)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultEdgeDataHandler#writeSourceVertex(org.apache.hadoop.hbase.client.Put,org.gradoop.storage.hbase.VD)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultEdgeDataHandler#writeTargetVertex(org.apache.hadoop.hbase.client.Put,org.gradoop.storage.hbase.VD)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultElementHandler" : { },
        "gradoop-core§org.gradoop.storage.hbase.DefaultElementHandler#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultElementHandler#decodeValueFromBytes(byte[])" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultElementHandler#encodeValueToBytes(java.lang.Object)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultElementHandler#getRowKey(java.lang.Long)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultElementHandler#readLabel(org.apache.hadoop.hbase.client.Result)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultElementHandler#readProperties(org.apache.hadoop.hbase.client.Result)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultElementHandler#writeLabel(org.apache.hadoop.hbase.client.Put,org.gradoop.model.Element)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultElementHandler#writeProperties(org.apache.hadoop.hbase.client.Put,org.gradoop.model.Element)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultElementHandler#writeProperty(org.apache.hadoop.hbase.client.Put,java.lang.String,java.lang.Object)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultGraphDataHandler" : { },
        "gradoop-core§org.gradoop.storage.hbase.DefaultGraphDataHandler#<init>(org.gradoop.model.GraphDataFactory)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultGraphDataHandler#createTable(org.apache.hadoop.hbase.client.HBaseAdmin,org.apache.hadoop.hbase.HTableDescriptor)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultGraphDataHandler#getGraphDataFactory" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultGraphDataHandler#readGraphData(org.apache.hadoop.hbase.client.Result)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultGraphDataHandler#writeEdges(org.apache.hadoop.hbase.client.Put,org.gradoop.storage.PersistentGraphData)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultGraphDataHandler#writeGraphData(org.apache.hadoop.hbase.client.Put,org.gradoop.storage.PersistentGraphData)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultGraphDataHandler#writeVertices(org.apache.hadoop.hbase.client.Put,org.gradoop.storage.PersistentGraphData)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultGraphElementHandler" : { },
        "gradoop-core§org.gradoop.storage.hbase.DefaultGraphElementHandler#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultGraphElementHandler#readGraphs(org.apache.hadoop.hbase.client.Result)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultGraphElementHandler#writeGraphs(org.apache.hadoop.hbase.client.Put,org.gradoop.model.GraphElement)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultPersistentEdgeData" : { },
        "gradoop-core§org.gradoop.storage.hbase.DefaultPersistentEdgeData#<init>(org.gradoop.model.EdgeData,org.gradoop.model.impl.DefaultVertexData,org.gradoop.model.impl.DefaultVertexData)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultPersistentEdgeData#getSourceVertexData" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultPersistentEdgeData#getTargetVertexData" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultPersistentEdgeData#toString" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultPersistentEdgeDataFactory" : { },
        "gradoop-core§org.gradoop.storage.hbase.DefaultPersistentEdgeDataFactory#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultPersistentEdgeDataFactory#createEdgeData(org.gradoop.model.impl.DefaultEdgeData,org.gradoop.model.impl.DefaultVertexData,org.gradoop.model.impl.DefaultVertexData)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultPersistentGraphData" : { },
        "gradoop-core§org.gradoop.storage.hbase.DefaultPersistentGraphData#<init>(org.gradoop.model.GraphData,java.util.Set,java.util.Set)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultPersistentGraphData#getEdges" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultPersistentGraphData#getVertices" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultPersistentGraphData#toString" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultPersistentGraphDataFactory" : { },
        "gradoop-core§org.gradoop.storage.hbase.DefaultPersistentGraphDataFactory#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultPersistentGraphDataFactory#createGraphData(org.gradoop.model.impl.DefaultGraphData,java.util.Set,java.util.Set)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultPersistentVertexData" : { },
        "gradoop-core§org.gradoop.storage.hbase.DefaultPersistentVertexData#<init>(org.gradoop.model.VertexData,java.util.Set,java.util.Set)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultPersistentVertexData#getIncomingEdgeData" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultPersistentVertexData#getOutgoingEdgeData" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultPersistentVertexData#toString" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultPersistentVertexDataFactory" : { },
        "gradoop-core§org.gradoop.storage.hbase.DefaultPersistentVertexDataFactory#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultPersistentVertexDataFactory#createVertexData(org.gradoop.model.impl.DefaultVertexData,java.util.Set,java.util.Set)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultVertexDataHandler" : { },
        "gradoop-core§org.gradoop.storage.hbase.DefaultVertexDataHandler#<init>(org.gradoop.model.VertexDataFactory)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultVertexDataHandler#createEdgeIdentifier(org.gradoop.model.EdgeData,boolean)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultVertexDataHandler#createTable(org.apache.hadoop.hbase.client.HBaseAdmin,org.apache.hadoop.hbase.HTableDescriptor)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultVertexDataHandler#getVertexDataFactory" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultVertexDataHandler#readVertexData(org.apache.hadoop.hbase.client.Result)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultVertexDataHandler#writeEdge(org.apache.hadoop.hbase.client.Put,byte[],org.gradoop.model.EdgeData,boolean)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultVertexDataHandler#writeEdges(org.apache.hadoop.hbase.client.Put,byte[],java.util.Set,boolean)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultVertexDataHandler#writeIncomingEdges(org.apache.hadoop.hbase.client.Put,java.util.Set)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultVertexDataHandler#writeOutgoingEdges(org.apache.hadoop.hbase.client.Put,java.util.Set)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.DefaultVertexDataHandler#writeVertexData(org.apache.hadoop.hbase.client.Put,org.gradoop.storage.PersistentVertexData)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.EPGGraphHandler" : { },
        "gradoop-core§org.gradoop.storage.hbase.EPGVertexHandler" : { },
        "gradoop-core§org.gradoop.storage.hbase.EntityHandler" : { },
        "gradoop-core§org.gradoop.storage.hbase.GraphHandler" : { },
        "gradoop-core§org.gradoop.storage.hbase.HBaseEPGMStore" : { },
        "gradoop-core§org.gradoop.storage.hbase.HBaseEPGMStore#<init>(org.apache.hadoop.hbase.client.HTable,org.apache.hadoop.hbase.client.HTable,org.apache.hadoop.hbase.client.HTable,org.gradoop.storage.VertexDataHandler,org.gradoop.storage.EdgeDataHandler,org.gradoop.storage.GraphDataHandler)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.HBaseEPGMStore#close" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.HBaseEPGMStore#flush" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.HBaseEPGMStore#getEdgeDataHandler" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.HBaseEPGMStore#getEdgeDataTableName" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.HBaseEPGMStore#getEdgeSpace" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.HBaseEPGMStore#getGraphDataHandler" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.HBaseEPGMStore#getGraphDataTableName" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.HBaseEPGMStore#getGraphSpace" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.HBaseEPGMStore#getVertexDataHandler" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.HBaseEPGMStore#getVertexDataTableName" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.HBaseEPGMStore#getVertexSpace" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.HBaseEPGMStore#writeEdgeData(org.gradoop.storage.PersistentEdgeData)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.HBaseEPGMStore#writeGraphData(org.gradoop.storage.PersistentGraphData)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.HBaseEPGMStore#writeVertexData(org.gradoop.storage.PersistentVertexData)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.HBaseEPGMStore$EdgeDataIterator#<init>(org.gradoop.storage.hbase.HBaseEPGMStore,org.apache.hadoop.hbase.client.ResultScanner)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.HBaseEPGMStore$EdgeDataIterator#hasNext" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.HBaseEPGMStore$GraphDataIterator#<init>(org.gradoop.storage.hbase.HBaseEPGMStore,org.apache.hadoop.hbase.client.ResultScanner)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.HBaseEPGMStore$GraphDataIterator#hasNext" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.HBaseEPGMStore$VertexDataIterator#<init>(org.gradoop.storage.hbase.HBaseEPGMStore,org.apache.hadoop.hbase.client.ResultScanner)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.HBaseEPGMStore$VertexDataIterator#hasNext" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.HBaseEPGMStoreFactory" : { },
        "gradoop-core§org.gradoop.storage.hbase.HBaseEPGMStoreFactory#createOrOpenEPGMStore(org.apache.hadoop.conf.Configuration,org.gradoop.storage.VertexDataHandler,org.gradoop.storage.EdgeDataHandler,org.gradoop.storage.GraphDataHandler)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.HBaseEPGMStoreFactory#createTablesIfNotExists(org.apache.hadoop.conf.Configuration,org.gradoop.storage.VertexDataHandler,org.gradoop.storage.EdgeDataHandler,org.gradoop.storage.GraphDataHandler,java.lang.String,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.HBaseEPGMStoreFactory#deleteEPGMStore(org.apache.hadoop.conf.Configuration)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.HBaseEPGMStoreFactory#deleteTablesIfExists(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.HBaseGraphStore" : { },
        "gradoop-core§org.gradoop.storage.hbase.HBaseGraphStoreFactory" : { },
        "gradoop-core§org.gradoop.storage.hbase.PersistentEPGMElement" : { },
        "gradoop-core§org.gradoop.storage.hbase.PersistentEPGMElement#<init>(org.gradoop.storage.hbase.T)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.PersistentEPGMElement#getEpgmElement" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.PersistentEPGMElement#getId" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.PersistentEPGMElement#getLabel" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.PersistentEPGMElement#getProperty(java.lang.String)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.PersistentEPGMElement#getPropertyCount" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.PersistentEPGMElement#getPropertyKeys" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.PersistentEPGMElement#toString" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.PersistentEPGMGraphElement" : { },
        "gradoop-core§org.gradoop.storage.hbase.PersistentEPGMGraphElement#<init>(org.gradoop.storage.hbase.T)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.PersistentEPGMGraphElement#getGraphCount" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.PersistentEPGMGraphElement#getGraphs" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-core§org.gradoop.storage.hbase.VertexHandler" : { },
        "gradoop-flink§org.gradoop.io.hbase.HBaseReader" : { },
        "gradoop-flink§org.gradoop.io.hbase.HBaseReader$EdgeDataTableInputFormat#<init>(org.gradoop.storage.EdgeDataHandler,java.lang.String)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseReader$EdgeDataTableInputFormat#getScanner" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseReader$EdgeDataTableInputFormat#getTableName" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseReader$EdgeDataTableInputFormat#mapResultToTuple(org.apache.hadoop.hbase.client.Result)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseReader$GraphDataTableInputFormat#<init>(org.gradoop.storage.GraphDataHandler,java.lang.String)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseReader$GraphDataTableInputFormat#getScanner" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseReader$GraphDataTableInputFormat#getTableName" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseReader$GraphDataTableInputFormat#mapResultToTuple(org.apache.hadoop.hbase.client.Result)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseReader$VertexDataTableInputFormat#<init>(org.gradoop.storage.VertexDataHandler,java.lang.String)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseReader$VertexDataTableInputFormat#getScanner" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseReader$VertexDataTableInputFormat#getTableName" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseReader$VertexDataTableInputFormat#mapResultToTuple(org.apache.hadoop.hbase.client.Result)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseWriter" : { },
        "gradoop-flink§org.gradoop.io.hbase.HBaseWriter#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseWriter#writeEdgeData(org.gradoop.model.impl.EPGMDatabase,org.gradoop.storage.EdgeDataHandler,org.gradoop.storage.PersistentEdgeDataFactory,java.lang.String)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseWriter#writeGraphData(org.gradoop.model.impl.EPGMDatabase,org.gradoop.storage.GraphDataHandler,org.gradoop.storage.PersistentGraphDataFactory,java.lang.String)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseWriter#writeVertexData(org.gradoop.model.impl.EPGMDatabase,org.gradoop.storage.VertexDataHandler,org.gradoop.storage.PersistentVertexDataFactory,java.lang.String)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseWriter$EdgeDataToHBaseMapper#<init>(org.gradoop.storage.EdgeDataHandler)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseWriter$EdgeDataToHBaseMapper#map(org.gradoop.io.hbase.PED)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseWriter$EdgeDataToHBaseMapper#open(org.apache.flink.configuration.Configuration)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseWriter$GraphDataToHBaseMapper#<init>(org.gradoop.storage.GraphDataHandler)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseWriter$GraphDataToHBaseMapper#map(org.gradoop.io.hbase.PGD)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseWriter$GraphDataToHBaseMapper#open(org.apache.flink.configuration.Configuration)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseWriter$PersistentEdgeDataJoinFunction#<init>(org.gradoop.storage.PersistentEdgeDataFactory)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseWriter$PersistentEdgeDataJoinFunction#join(org.apache.flink.api.java.tuple.Tuple2,org.apache.flink.graph.Vertex)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseWriter$PersistentGraphDataJoinFunction#<init>(org.gradoop.storage.PersistentGraphDataFactory)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseWriter$PersistentGraphDataJoinFunction#join(org.apache.flink.api.java.tuple.Tuple3,org.gradoop.model.impl.Subgraph)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseWriter$PersistentVertexDataCoGroupFunction#<init>(org.gradoop.storage.PersistentVertexDataFactory)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseWriter$PersistentVertexDataCoGroupFunction#coGroup(java.lang.Iterable,java.lang.Iterable,org.apache.flink.util.Collector)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseWriter$VertexDataToHBaseMapper#<init>(org.gradoop.storage.VertexDataHandler)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseWriter$VertexDataToHBaseMapper#map(org.gradoop.io.hbase.PVD)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseWriter$VertexDataToHBaseMapper#open(org.apache.flink.configuration.Configuration)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.package-info" : { },
        "gradoop-flink§org.gradoop.io.json.JsonIO$EntityToJsonFormatter#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonIO$EntityToJsonFormatter#writeGraphElementMeta(org.gradoop.io.json.T)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonIO$EntityToJsonFormatter#writeGraphMeta(org.gradoop.io.json.T)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonIO$EntityToJsonFormatter#writeJsonArray(java.util.Set)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonIO$EntityToJsonFormatter#writeMeta(org.gradoop.model.Labeled)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonIO$EntityToJsonFormatter#writeProperties(org.gradoop.model.Attributed)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonIO$JsonToEntityMapper#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonIO$JsonToEntityMapper#getArrayValues(org.codehaus.jettison.json.JSONArray)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonIO$JsonToEntityMapper#getGraphs(org.codehaus.jettison.json.JSONObject)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonIO$JsonToEntityMapper#getID(org.codehaus.jettison.json.JSONObject)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonIO$JsonToEntityMapper#getLabel(org.codehaus.jettison.json.JSONObject)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonIO$JsonToEntityMapper#getProperties(org.codehaus.jettison.json.JSONObject)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonReader$JsonToEdgeMapper#<init>(org.gradoop.model.EdgeDataFactory)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonReader$JsonToEdgeMapper#getSourceVertexID(org.codehaus.jettison.json.JSONObject)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonReader$JsonToEdgeMapper#getTargetVertexID(org.codehaus.jettison.json.JSONObject)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonReader$JsonToEdgeMapper#map(java.lang.String)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonReader$JsonToGraphMapper#<init>(org.gradoop.model.GraphDataFactory)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonReader$JsonToGraphMapper#map(java.lang.String)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonReader$JsonToVertexMapper#<init>(org.gradoop.model.VertexDataFactory)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonReader$JsonToVertexMapper#map(java.lang.String)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonWriter$EdgeTextFormatter#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonWriter$EdgeTextFormatter#format(org.apache.flink.graph.Edge)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonWriter$GraphTextFormatter#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonWriter$GraphTextFormatter#format(org.gradoop.model.impl.Subgraph)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonWriter$VertexTextFormatter#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.io.json.JsonWriter$VertexTextFormatter#format(org.apache.flink.graph.Vertex)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.FlinkTest" : { },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabase" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabase#<init>(org.apache.flink.api.java.DataSet,org.apache.flink.api.java.DataSet,org.apache.flink.api.java.DataSet,org.gradoop.model.VertexDataFactory,org.gradoop.model.EdgeDataFactory,org.gradoop.model.GraphDataFactory,org.apache.flink.api.java.ExecutionEnvironment)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabase#fromHBase(org.gradoop.storage.EPGMStore,org.apache.flink.api.java.ExecutionEnvironment)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabase#fromJsonFile(java.lang.String,java.lang.String,java.lang.String,org.apache.flink.api.java.ExecutionEnvironment)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabase#getCollection" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabase#getDatabaseGraph" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabase#writeAsJson(java.lang.String,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabase#writeToHBase(org.gradoop.storage.EPGMStore,org.gradoop.storage.PersistentVertexDataFactory,org.gradoop.storage.PersistentEdgeDataFactory,org.gradoop.storage.PersistentGraphDataFactory)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabase$EdgesConverter" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabase$EdgesConverter#map(org.gradoop.model.impl.ED)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabase$GraphsConverter" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabase$GraphsConverter#map(org.gradoop.model.impl.GD)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabase$VerticesConverter" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabase$VerticesConverter#map(org.gradoop.model.impl.VD)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest#readFromHBaseTest" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest#writeToHBaseTest" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest#testFromJsonFile" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest#testGetDatabaseGraph" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testGetDatabaseGraph" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest#testWriteAsJsonFile" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EdgeDataCollection#<init>(org.apache.flink.api.java.DataSet)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testGetDatabaseGraph" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EdgeDataCollection#size" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testGetDatabaseGraph" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.GraphCollection" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.GraphCollection#<init>(org.apache.flink.graph.Graph,org.apache.flink.api.java.DataSet,org.gradoop.model.VertexDataFactory,org.gradoop.model.EdgeDataFactory,org.gradoop.model.GraphDataFactory,org.apache.flink.api.java.ExecutionEnvironment)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.GraphCollection#getGellyGraph" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.GraphCollection#getGraphCount" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.GraphCollection#getSubgraphs" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.GraphCollection$EdgeInGraphFilter" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.GraphCollection$EdgeInGraphsFilter" : { },
        "gradoop-flink§org.gradoop.model.impl.GraphCollection$VertexInGraphFilter" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.GraphCollection$VertexInGraphsFilter" : { },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#<init>(org.apache.flink.graph.Graph,org.gradoop.model.impl.GD,org.gradoop.model.VertexDataFactory,org.gradoop.model.EdgeDataFactory,org.gradoop.model.GraphDataFactory,org.apache.flink.api.java.ExecutionEnvironment)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#fromGraph(org.apache.flink.graph.Graph,org.gradoop.model.impl.GD,org.gradoop.model.VertexDataFactory,org.gradoop.model.EdgeDataFactory,org.gradoop.model.GraphDataFactory)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testGetDatabaseGraph", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#getEdgeCount" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#getEdges" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testGetDatabaseGraph" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#getGellyGraph" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#getVertexCount" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#getVertices" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testGetDatabaseGraph" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.Subgraph#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.Subgraph#getId" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.Subgraph#getValue" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testWriteAsJsonFile" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.VertexDataCollection#<init>(org.apache.flink.api.java.DataSet)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testGetDatabaseGraph" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.VertexDataCollection#size" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testGetDatabaseGraph" ]
          }
        }
      }
    },
    "7621d724f4da1bdc97c5c9e2387f9fc19cf1461c" : {
      "running" : false,
      "jdk" : 8,
      "changedClazzes" : { }
    },
    "797fa7af24b3ec7811d596a80d1c6c91395e3d4e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5468cb526b03c33dc86df8183981248ca122aa76",
      "changedClazzes" : {
        "gradoop-core§org.gradoop.model.impl.DefaultEPGMElementFactory#checkId(java.lang.Long)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultEPGMElementFactory#checkLabel(java.lang.String)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultEdgeData#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultEdgeData#getSourceVertexId" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultEdgeData#getTargetVertexId" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultEdgeData#toString" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultElement#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultElement#getId" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultElement#getLabel" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultElement#getProperties" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultElement#setLabel(java.lang.String)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultElement#setProperty(java.lang.String,java.lang.Object)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultElement#toString" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphData#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphData#toString" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphDataFactory#createGraphData(java.lang.Long)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphElement#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphElement#getGraphCount" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphElement#getGraphs" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultGraphElement#toString" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultVertexData#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-core§org.gradoop.model.impl.DefaultVertexData#toString" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.helper.KeySelectors$GraphKeySelector#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.helper.KeySelectors$GraphKeySelector#getKey(org.gradoop.model.impl.Subgraph)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.helper.UnaryFunction" : { },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabase#getGraph(java.lang.Long)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabase$EdgesConverter#map(org.gradoop.model.impl.ED)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabase$GraphsConverter#map(org.gradoop.model.impl.GD)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabase$VerticesConverter#map(org.gradoop.model.impl.VD)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.GraphCollection#getGraph(java.lang.Long)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.GraphCollection$EdgeInGraphFilter#<init>(long)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.GraphCollection$EdgeInGraphFilter#filter(org.apache.flink.graph.Edge)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.GraphCollection$VertexInGraphFilter#<init>(long)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.GraphCollection$VertexInGraphFilter#filter(org.apache.flink.graph.Vertex)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest", "writeToHBaseTest" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile", "testGetDatabaseGraph", "testWriteAsJsonFile" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#<init>(org.apache.flink.graph.Graph,org.gradoop.model.impl.GD,org.gradoop.model.VertexDataFactory,org.gradoop.model.EdgeDataFactory,org.gradoop.model.GraphDataFactory,org.apache.flink.api.java.ExecutionEnvironment)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#callForGraph(org.gradoop.model.operators.UnaryGraphToGraphOperator)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#fromGraph(org.apache.flink.graph.Graph,org.gradoop.model.impl.GD,org.gradoop.model.VertexDataFactory,org.gradoop.model.EdgeDataFactory,org.gradoop.model.GraphDataFactory)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#getEdgeCount" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#getEdgeDataFactory" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#getGellyGraph" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#getGraphDataFactory" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#getId" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#getLabel" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#getVertexCount" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#getVertexDataFactory" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph#project(org.gradoop.model.helper.UnaryFunction,org.gradoop.model.helper.UnaryFunction)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest#projectionTest" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest$EdgePropertyProjectionFunction#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest$EdgePropertyProjectionFunction#execute(org.gradoop.model.impl.DefaultEdgeData)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest$VertexLabelProjectionFunction#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest$VertexLabelProjectionFunction#execute(org.gradoop.model.impl.DefaultVertexData)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.Subgraph#<init>" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.Subgraph#getValue" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.Projection" : { },
        "gradoop-flink§org.gradoop.model.impl.operators.Projection#<init>(org.gradoop.model.helper.UnaryFunction,org.gradoop.model.helper.UnaryFunction)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.Projection#execute(org.gradoop.model.impl.LogicalGraph)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.Projection#getEdgeFunc" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.Projection#getVertexFunc" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.Projection$ProjectionEdgesMapper#<init>(org.gradoop.model.helper.UnaryFunction)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.Projection$ProjectionEdgesMapper#map(org.apache.flink.graph.Edge)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.Projection$ProjectionVerticesMapper#<init>(org.gradoop.model.helper.UnaryFunction)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.Projection$ProjectionVerticesMapper#map(org.apache.flink.graph.Vertex)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.operators.LogicalGraphOperators" : { }
      }
    },
    "2d06b66cc681a2af19635fd666948b17ce716153" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "797fa7af24b3ec7811d596a80d1c6c91395e3d4e",
      "changedClazzes" : {
        "gradoop-flink§org.gradoop.model.impl.operators.Projection" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.Projection$ProjectionEdgesMapper" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.Projection$ProjectionVerticesMapper" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest" ]
          }
        }
      }
    },
    "a7e7e392804af135958cfa8ae3489653b196ffcb" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "2d06b66cc681a2af19635fd666948b17ce716153",
      "changedClazzes" : { }
    },
    "01e10be480429be9c88c939e90b4d833fcf4a41d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a7e7e392804af135958cfa8ae3489653b196ffcb",
      "changedClazzes" : { }
    },
    "dcf00faf6918dd9a1436a29acfac76961ae65996" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "01e10be480429be9c88c939e90b4d833fcf4a41d",
      "changedClazzes" : { }
    },
    "fe5d2f00d532e10566890fe9d3bc404b233ede14" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "dcf00faf6918dd9a1436a29acfac76961ae65996",
      "changedClazzes" : { }
    },
    "d3d0ee5d21458378b8afa00ce0d278d500827baa" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "fe5d2f00d532e10566890fe9d3bc404b233ede14",
      "changedClazzes" : { }
    },
    "56b4d74e59d84495603850e45e627f6071c43a25" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "b39d0cebc16067647235ebf3cc4d7fedbaae61b9",
      "changedClazzes" : {
        "gradoop-examples§org.gradoop.examples.SummarizationExample#main(org.gradoop.examples.String[])" : { },
        "gradoop-flink§org.gradoop.io.hbase.HBaseWriter" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "writeToHBaseTest(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseWriter$EdgeDataToHBaseMapper" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "writeToHBaseTest(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseWriter$GraphDataToHBaseMapper" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "writeToHBaseTest(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseWriter$PersistentEdgeDataJoinFunction" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "writeToHBaseTest(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseWriter$PersistentGraphDataJoinFunction" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "writeToHBaseTest(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseWriter$PersistentVertexDataCoGroupFunction" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "writeToHBaseTest(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.io.hbase.HBaseWriter$VertexDataToHBaseMapper" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "writeToHBaseTest(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "writeToHBaseTest(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.WorkflowTest" : { },
        "gradoop-flink§org.gradoop.model.impl.AbstractGraph" : { },
        "gradoop-flink§org.gradoop.model.impl.BinaryCollectionOperatorsTestBase#performTest(long,long,long,org.gradoop.model.impl.GraphCollection)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.GraphCollectionDifferenceTest" : [ "testNonOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testTotalOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testTotalOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.GraphCollectionIntersectTest" : [ "testNonOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingCollections2(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingCollections2(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testTotalOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testTotalOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.GraphCollectionUnionTest" : [ "testNonOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testTotalOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testTotalOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.BinaryGraphOperatorsTestBase" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphExcludeTest" : [ "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphOverlapTest" : [ "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingVertexSetGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingVertexSetGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingVertexSetSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingVertexSetSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabase#getDatabaseGraph" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "readFromHBaseTest(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "writeToHBaseTest(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "writeToHBaseTest(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testFromJsonFile(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testGetDatabaseGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetDatabaseGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testWriteAsJsonFile(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testWriteAsJsonFile(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphGetterTest" : [ "testGetEdges(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetEdges(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testGetOutgoingEdges(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetOutgoingEdges(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testGetOutgoingEdges2(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetOutgoingEdges2(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testGetVertices(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetVertices(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testIncomingEdges(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testIncomingEdges(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testIncomingEdges2(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testIncomingEdges2(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphOverlapSplitByTest" : [ "testOverlappingResultGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingResultGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.btg.BTGGradoopTest" : [ "testFromJsonFile(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testFromJsonFile(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest#testGetDatabaseGraph" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testGetDatabaseGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetDatabaseGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest#testGetCollection" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testGetCollection(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetCollection(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest#testGetExistingGraph" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testGetExistingGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetExistingGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest#testGetGraphs" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testGetGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.EdgeDataCollection" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testGetDatabaseGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetDatabaseGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testGetExistingGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetExistingGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "aggregateEdgeCountTest(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testAssignment(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphExcludeTest" : [ "testAssignment(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testAssignment(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphGetterTest" : [ "testGetEdges(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetEdges(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testGetOutgoingEdges(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetOutgoingEdges(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testGetOutgoingEdges2(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetOutgoingEdges2(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testIncomingEdges(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testIncomingEdges(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testIncomingEdges2(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testIncomingEdges2(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphOverlapTest" : [ "testAssignment(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testAssignment(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingVertexSetGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingVertexSetGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingVertexSetSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingVertexSetSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.GraphCollection" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "readFromHBaseTest(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "writeToHBaseTest(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "writeToHBaseTest(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testFromJsonFile(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testGetDatabaseGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetDatabaseGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testWriteAsJsonFile(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testWriteAsJsonFile(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testGetCollection(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetCollection(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testGetExistingGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetExistingGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testGetGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonExistingGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonExistingGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.GraphCollectionDifferenceTest" : [ "testNonOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testTotalOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testTotalOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.GraphCollectionIntersectTest" : [ "testNonOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingCollections2(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingCollections2(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testTotalOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testTotalOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.GraphCollectionUnionTest" : [ "testNonOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testTotalOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testTotalOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "aggregateEdgeCountTest(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testAssignment(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphExcludeTest" : [ "testAssignment(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testAssignment(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphGetterTest" : [ "testGetEdges(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetEdges(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testGetOutgoingEdges(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetOutgoingEdges(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testGetOutgoingEdges2(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetOutgoingEdges2(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testGetVertices(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetVertices(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testIncomingEdges(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testIncomingEdges(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testIncomingEdges2(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testIncomingEdges2(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphOverlapSplitByTest" : [ "testOverlappingResultGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingResultGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphOverlapTest" : [ "testAssignment(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testAssignment(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingVertexSetGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingVertexSetGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingVertexSetSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingVertexSetSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "projectionTest(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphSplitByTest" : [ "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.btg.BTGGradoopTest" : [ "testFromJsonFile(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testFromJsonFile(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.EPGMLabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.LabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraph" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseHBaseTest" : [ "readFromHBaseTest(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "readFromHBaseTest(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "writeToHBaseTest(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "writeToHBaseTest(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testFromJsonFile(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testFromJsonFile(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testGetDatabaseGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetDatabaseGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testWriteAsJsonFile(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testWriteAsJsonFile(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testGetExistingGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetExistingGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "aggregateEdgeCountTest(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testAssignment(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphExcludeTest" : [ "testAssignment(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testAssignment(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphGetterTest" : [ "testGetEdges(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetEdges(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testGetOutgoingEdges(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetOutgoingEdges(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testGetOutgoingEdges2(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetOutgoingEdges2(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testGetVertices(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetVertices(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testIncomingEdges(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testIncomingEdges(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testIncomingEdges2(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testIncomingEdges2(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphOverlapSplitByTest" : [ "testOverlappingResultGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingResultGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphOverlapTest" : [ "testAssignment(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testAssignment(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingVertexSetGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingVertexSetGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingVertexSetSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingVertexSetSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "projectionTest(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphSplitByTest" : [ "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.btg.BTGGradoopTest" : [ "testFromJsonFile(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testFromJsonFile(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.EPGMLabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.LabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest#aggregateEdgeCountTest" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "aggregateEdgeCountTest(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testAssignment(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphExcludeTest#testAssignment" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphExcludeTest" : [ "testAssignment(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testAssignment(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphGetterTest#testGetEdges" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphGetterTest" : [ "testGetEdges(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetEdges(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphGetterTest#testGetOutgoingEdges" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphGetterTest" : [ "testGetOutgoingEdges(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetOutgoingEdges(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphGetterTest#testGetOutgoingEdges2" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphGetterTest" : [ "testGetOutgoingEdges2(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetOutgoingEdges2(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphGetterTest#testGetVertices" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphGetterTest" : [ "testGetVertices(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetVertices(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphGetterTest#testIncomingEdges" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphGetterTest" : [ "testIncomingEdges(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testIncomingEdges(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphGetterTest#testIncomingEdges2" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphGetterTest" : [ "testIncomingEdges2(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testIncomingEdges2(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphOverlapSplitByTest#testOverlappingResultGraphs" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphOverlapSplitByTest" : [ "testOverlappingResultGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingResultGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphOverlapTest" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphOverlapTest" : [ "testAssignment(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testAssignment(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingVertexSetGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingVertexSetGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingVertexSetSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingVertexSetSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphSplitByTest#testSplitBy" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphSplitByTest" : [ "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.VertexDataCollection" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseJSONTest" : [ "testGetDatabaseGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetDatabaseGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.EPGMDatabaseTest" : [ "testGetExistingGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetExistingGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testAssignment(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphExcludeTest" : [ "testAssignment(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testAssignment(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphGetterTest" : [ "testGetVertices(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testGetVertices(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphOverlapTest" : [ "testAssignment(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testAssignment(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingVertexSetGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingVertexSetGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingVertexSetSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingVertexSetSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.btg.BTGGradoopTest#testFromJsonFile" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.btg.BTGGradoopTest" : [ "testFromJsonFile(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testFromJsonFile(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.labelpropagation.EPGMLabelPropagationGradoopTest#testLabelPropagationWithCallByPropertyKey" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.EPGMLabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.labelpropagation.LabelPropagationGradoopTest#testLabelPropagationWithCallByPropertyKey" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.LabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.AbstractBinaryCollectionToCollectionOperator#execute(org.gradoop.model.impl.GraphCollection,org.gradoop.model.impl.GraphCollection)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.GraphCollectionDifferenceTest" : [ "testNonOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testTotalOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testTotalOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.GraphCollectionIntersectTest" : [ "testNonOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingCollections2(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingCollections2(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testTotalOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testTotalOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.GraphCollectionUnionTest" : [ "testNonOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testTotalOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testTotalOverlappingCollections(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.Aggregation#execute(org.gradoop.model.impl.LogicalGraph)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphAggregateTest" : [ "aggregateEdgeCountTest(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "aggregateEdgeCountTest(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.Combination#executeInternal(org.gradoop.model.impl.LogicalGraph,org.gradoop.model.impl.LogicalGraph)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testAssignment(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.Exclusion" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphExcludeTest" : [ "testAssignment(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testAssignment(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.Overlap" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphOverlapTest" : [ "testAssignment(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testAssignment(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingVertexSetGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingVertexSetGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingVertexSetSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingVertexSetSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.OverlapSplitBy#computeNewEdges(org.gradoop.model.impl.LogicalGraph,org.apache.flink.api.java.DataSet,org.apache.flink.api.java.DataSet)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphOverlapSplitByTest" : [ "testOverlappingResultGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingResultGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.btg.BTGGradoopTest" : [ "testFromJsonFile(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testFromJsonFile(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.OverlapSplitBy#computeNewVertices(org.gradoop.model.impl.LogicalGraph)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphOverlapSplitByTest" : [ "testOverlappingResultGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingResultGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.btg.BTGGradoopTest" : [ "testFromJsonFile(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testFromJsonFile(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.Projection" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "projectionTest(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.Projection$ProjectionEdgesMapper" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "projectionTest(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.Projection$ProjectionVerticesMapper" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "projectionTest(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.SplitBy#computeNewEdges(org.gradoop.model.impl.LogicalGraph,org.apache.flink.api.java.DataSet,org.apache.flink.api.java.DataSet)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphSplitByTest" : [ "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.EPGMLabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.LabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.SplitBy#computeNewVertices(org.gradoop.model.impl.LogicalGraph)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphSplitByTest" : [ "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.EPGMLabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.LabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.btg.BTG#execute(org.gradoop.model.impl.LogicalGraph)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.btg.BTGGradoopTest" : [ "testFromJsonFile(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testFromJsonFile(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.labelpropagation.EPGMLabelPropagation#execute(org.gradoop.model.impl.LogicalGraph)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.EPGMLabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.labelpropagation.LabelPropagation#execute(org.gradoop.model.impl.LogicalGraph)" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.LabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.summarization.Summarization#execute(org.gradoop.model.impl.LogicalGraph)" : { },
        "gradoop-flink§org.gradoop.model.impl.summarization.LogicalGraphSummarizeGroupCombineTest" : { },
        "gradoop-flink§org.gradoop.model.impl.summarization.LogicalGraphSummarizeGroupMapTest" : { },
        "gradoop-flink§org.gradoop.model.impl.summarization.LogicalGraphSummarizeGroupSortTest" : { },
        "gradoop-flink§org.gradoop.model.impl.summarization.LogicalGraphSummarizeGroupWithListsTest" : { },
        "gradoop-flink§org.gradoop.model.impl.summarization.LogicalGraphSummarizeTestBase" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.summarization.LogicalGraphSummarizeTestBase" : [ "testSummarizeOnVertexAndEdgeLabel", "testSummarizeOnVertexAndEdgeLabelAndEdgeProperty", "testSummarizeOnVertexAndEdgeLabelAndEdgePropertyWithAbsentValue", "testSummarizeOnVertexAndEdgeLabelAndVertexAndEdgeProperty", "testSummarizeOnVertexAndEdgeLabelAndVertexAndEdgePropertyWithAbsentValue", "testSummarizeOnVertexAndEdgeLabelAndVertexProperty", "testSummarizeOnVertexAndEdgeLabelAndVertexPropertyWithAbsentValue", "testSummarizeOnVertexAndEdgeProperty", "testSummarizeOnVertexAndEdgePropertyWithAbsentValues", "testSummarizeOnVertexLabel", "testSummarizeOnVertexLabelAndEdgeProperty", "testSummarizeOnVertexLabelAndEdgePropertyWithAbsentValue", "testSummarizeOnVertexLabelAndVertexAndEdgeProperty", "testSummarizeOnVertexLabelAndVertexProperty", "testSummarizeOnVertexLabelAndVertexPropertyWithAbsentValue", "testSummarizeOnVertexProperty", "testSummarizeOnVertexPropertySymmetricGraph", "testSummarizeOnVertexPropertyWithAbsentValue" ]
          }
        },
        "gradoop-flink§org.gradoop.model.operators.EdgeDataCollectionOperators" : { },
        "gradoop-flink§org.gradoop.model.operators.GraphCollectionOperators" : { },
        "gradoop-flink§org.gradoop.model.operators.GraphOperators" : { },
        "gradoop-flink§org.gradoop.model.operators.LogicalGraphOperators" : { },
        "gradoop-flink§org.gradoop.model.operators.VertexDataCollectionOperators" : { }
      }
    },
    "e56da032dc5cd886fe871f750231dd077f5ba7d6" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "56b4d74e59d84495603850e45e627f6071c43a25",
      "changedClazzes" : { }
    },
    "6209595896568bded13130a7921e4584df72ce8f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e56da032dc5cd886fe871f750231dd077f5ba7d6",
      "changedClazzes" : {
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphCombineTest" : [ "testAssignment(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testAssignment(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphExcludeTest" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphExcludeTest" : [ "testAssignment(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testAssignment(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphOverlapTest" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphOverlapTest" : [ "testAssignment(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testAssignment(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testNonOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingVertexSetGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingVertexSetGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testOverlappingVertexSetSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testOverlappingVertexSetSwitchedGraphs(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSameGraph(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        }
      }
    },
    "645eb1baa10fae290a3889480fec4febe1411921" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6209595896568bded13130a7921e4584df72ce8f",
      "changedClazzes" : {
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "projectionTest(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest$EdgeComparator" : { },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest$EdgePropertyProjectionFunction" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "projectionTest(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest$VertexLabelProjectionFunction" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphProjectionTest" : [ "projectionTest(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "projectionTest(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphSplitByTest" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphSplitByTest" : [ "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.LogicalGraphSplitByTest$SplitByIdOddOrEven" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphSplitByTest" : [ "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.SplitBy" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphSplitByTest" : [ "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.EPGMLabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.LabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.SplitBy$AddNewGraphsToVertexMapper" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphSplitByTest" : [ "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.EPGMLabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.LabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.SplitBy$CheckEdgesSourceTargetGraphs" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphSplitByTest" : [ "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.EPGMLabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.LabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.SplitBy$CrossEdgesWithGraphSet" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphSplitByTest" : [ "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.EPGMLabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.LabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.SplitBy$EdgeToTupleMapper" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphSplitByTest" : [ "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.EPGMLabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.LabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.SplitBy$JoinEdgeTupleWithSourceGraphs" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphSplitByTest" : [ "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.EPGMLabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.LabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.SplitBy$JoinEdgeTupleWithTargetGraphs" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphSplitByTest" : [ "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.EPGMLabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.LabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.SplitBy$JoinEdgeTuplesWithEdges" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphSplitByTest" : [ "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.EPGMLabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.LabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.SplitBy$LongFromVertexSelector" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphSplitByTest" : [ "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.EPGMLabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.LabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.SplitBy$MapSubgraphIdToSet" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphSplitByTest" : [ "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.EPGMLabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.LabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.SplitBy$ReduceSets" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphSplitByTest" : [ "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.EPGMLabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.LabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.SplitBy$SubgraphsFromGroupsReducer" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.LogicalGraphSplitByTest" : [ "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testSplitBy(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.EPGMLabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ],
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.LabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.labelpropagation.EPGMLabelPropagation" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.EPGMLabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.labelpropagation.EPGMLabelPropagation$LongFromProperty" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.EPGMLabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.labelpropagation.LabelPropagation" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.LabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.labelpropagation.LabelPropagation$LPJoin" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.LabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.labelpropagation.LabelPropagation$LPKeySelector" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.LabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        },
        "gradoop-flink§org.gradoop.model.impl.operators.labelpropagation.LabelPropagation$LongFromProperty" : {
          "testcases" : {
            "gradoop-flink§org.gradoop.model.impl.labelpropagation.LabelPropagationGradoopTest" : [ "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = CLUSTER)", "testLabelPropagationWithCallByPropertyKey(JUNIT_PARAMETERIZED-Execution mode = COLLECTION)" ]
          }
        }
      }
    }
  },
  "android" : false
}