@Override
public void updateVertex(Vertex<Long, VD> vertex, MessageIterator<Long> msg) throws Exception {
    if (getSuperstepNumber() == 1) {
        vertex.getValue().setProperty(CURRENT_VALUE, vertex.getId());
        vertex.getValue().setProperty(LAST_VALUE, Long.MAX_VALUE);
        vertex.getValue().setProperty(STABILIZATION_COUNTER, 0);
        // Todo: Use Broadcast to set ChangeMax
        vertex.getValue().setProperty(STABILIZATION_MAX, 20);
        setNewVertexValue(vertex.getValue());
    } else {
        long currentCommunity = (Long) vertex.getValue().getProperty(CURRENT_VALUE);
        long lastCommunity = (Long) vertex.getValue().getProperty(LAST_VALUE);
        int stabilizationRound = (int) vertex.getValue().getProperty(STABILIZATION_COUNTER);
        long newCommunity = getNewCommunity(vertex, msg);
        boolean changed = currentCommunity != newCommunity;
        boolean lastEqualsnew = lastCommunity == newCommunity;
        if (changed && lastEqualsnew) {
            // Counts the amount of community swaps between 2
            // communities
            stabilizationRound++;
            vertex.getValue().setProperty(STABILIZATION_COUNTER, stabilizationRound);
            boolean maximalChanges = stabilizationRound <= (int) vertex.getValue().getProperty(STABILIZATION_MAX);
            if (maximalChanges) {
                vertex.getValue().setProperty(LAST_VALUE, currentCommunity);
                vertex.getValue().setProperty(CURRENT_VALUE, newCommunity);
                setNewVertexValue(vertex.getValue());
            } else {
                vertex.getValue().setProperty(CURRENT_VALUE, Math.min(currentCommunity, newCommunity));
                vertex.getValue().setProperty(LAST_VALUE, vertex.getValue().getProperty(CURRENT_VALUE));
                setNewVertexValue(vertex.getValue());
            }
        }
        if (changed && !lastEqualsnew) {
            vertex.getValue().setProperty(LAST_VALUE, currentCommunity);
            vertex.getValue().setProperty(CURRENT_VALUE, newCommunity);
            setNewVertexValue(vertex.getValue());
        }
    }
}