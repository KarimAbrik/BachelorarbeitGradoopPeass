public static Collection<DefaultEdgeData> createEdgeDataCollection() {
    // sna_edges
    DefaultEdgeDataFactory edgeDataFactory = new DefaultEdgeDataFactory();
    List<DefaultEdgeData> edges = Lists.newArrayList();
    // Person:Alice-[knows]->Person:Bob (0L)
    Map<String, Object> properties = new HashMap<>();
    properties.put(PROPERTY_KEY_SINCE, 2014);
    EDGE_0_KNOWS = edgeDataFactory.createEdgeData(0L, LABEL_KNOWS, VERTEX_PERSON_ALICE.getId(), VERTEX_PERSON_BOB.getId(), properties, Sets.newHashSet(0L, 2L));
    edges.add(EDGE_0_KNOWS);
    // Person:Bob-[knows]->Person:Alice (1L)
    properties = new HashMap<>();
    properties.put(PROPERTY_KEY_SINCE, 2014);
    EDGE_1_KNOWS = edgeDataFactory.createEdgeData(1L, LABEL_KNOWS, VERTEX_PERSON_BOB.getId(), VERTEX_PERSON_ALICE.getId(), properties, Sets.newHashSet(0L, 2L));
    edges.add(EDGE_1_KNOWS);
    // Person:Bob-[knows]->Person:Carol (2L)
    properties = new HashMap<>();
    properties.put(PROPERTY_KEY_SINCE, 2013);
    EDGE_2_KNOWS = edgeDataFactory.createEdgeData(2L, LABEL_KNOWS, VERTEX_PERSON_BOB.getId(), VERTEX_PERSON_CAROL.getId(), properties, Sets.newHashSet(2L));
    edges.add(EDGE_2_KNOWS);
    // Person:Carol-[knows]->Person:Bob (3L)
    properties = new HashMap<>();
    properties.put(PROPERTY_KEY_SINCE, 2013);
    EDGE_3_KNOWS = edgeDataFactory.createEdgeData(3L, LABEL_KNOWS, VERTEX_PERSON_CAROL.getId(), VERTEX_PERSON_BOB.getId(), properties, Sets.newHashSet(2L));
    edges.add(EDGE_3_KNOWS);
    // Person:Carol-[knows]->Person:Dave (4L)
    properties = new HashMap<>();
    properties.put(PROPERTY_KEY_SINCE, 2014);
    EDGE_4_KNOWS = edgeDataFactory.createEdgeData(4L, LABEL_KNOWS, VERTEX_PERSON_CAROL.getId(), VERTEX_PERSON_DAVE.getId(), properties, Sets.newHashSet(1L, 2L, 3L));
    edges.add(EDGE_4_KNOWS);
    // Person:Dave-[knows]->Person:Carol (5L)
    properties = new HashMap<>();
    properties.put(PROPERTY_KEY_SINCE, 2014);
    EDGE_5_KNOWS = edgeDataFactory.createEdgeData(5L, LABEL_KNOWS, VERTEX_PERSON_DAVE.getId(), VERTEX_PERSON_CAROL.getId(), properties, Sets.newHashSet(1L, 2L));
    edges.add(EDGE_5_KNOWS);
    // Person:Eve-[knows]->Person:Alice (6L)
    properties = new HashMap<>();
    properties.put(PROPERTY_KEY_SINCE, 2013);
    EDGE_6_KNOWS = edgeDataFactory.createEdgeData(6L, LABEL_KNOWS, VERTEX_PERSON_EVE.getId(), VERTEX_PERSON_ALICE.getId(), properties, Sets.newHashSet(0L));
    edges.add(EDGE_6_KNOWS);
    // Person:Eve-[knows]->Person:Bob (21L)
    properties = new HashMap<>();
    properties.put(PROPERTY_KEY_SINCE, 2015);
    EDGE_21_KNOWS = edgeDataFactory.createEdgeData(21L, LABEL_KNOWS, VERTEX_PERSON_EVE.getId(), VERTEX_PERSON_BOB.getId(), properties, Sets.newHashSet(0L));
    edges.add(EDGE_21_KNOWS);
    // Person:Frank-[knows]->Person:Carol (22L)
    properties = new HashMap<>();
    properties.put(PROPERTY_KEY_SINCE, 2015);
    EDGE_22_KNOWS = edgeDataFactory.createEdgeData(22L, LABEL_KNOWS, VERTEX_PERSON_FRANK.getId(), VERTEX_PERSON_CAROL.getId(), properties, Sets.newHashSet(1L));
    edges.add(EDGE_22_KNOWS);
    // Person:Frank-[knows]->Person:Dave (23L)
    properties = new HashMap<>();
    properties.put(PROPERTY_KEY_SINCE, 2015);
    EDGE_23_KNOWS = edgeDataFactory.createEdgeData(23L, LABEL_KNOWS, VERTEX_PERSON_FRANK.getId(), VERTEX_PERSON_DAVE.getId(), properties, Sets.newHashSet(1L));
    edges.add(EDGE_23_KNOWS);
    // Person:Eve-[hasInterest]->Tag:Databases (7L)
    EDGE_7_HAS_INTEREST = edgeDataFactory.createEdgeData(7L, LABEL_HAS_INTEREST, VERTEX_PERSON_EVE.getId(), VERTEX_TAG_DATABASES.getId());
    edges.add(EDGE_7_HAS_INTEREST);
    // Person:Alice-[hasInterest]->Tag:Databases (8L)
    EDGE_8_HAS_INTEREST = edgeDataFactory.createEdgeData(8L, LABEL_HAS_INTEREST, VERTEX_PERSON_ALICE.getId(), VERTEX_TAG_DATABASES.getId());
    edges.add(EDGE_8_HAS_INTEREST);
    // Person:Dave-[hasInterest]->Tag:Hadoop (9L)
    EDGE_9_HAS_INTEREST = edgeDataFactory.createEdgeData(9L, LABEL_HAS_INTEREST, VERTEX_PERSON_DAVE.getId(), VERTEX_TAG_HADOOP.getId());
    edges.add(EDGE_9_HAS_INTEREST);
    // Person:Frank-[hasInterest]->Tag:Hadoop (10L)
    EDGE_10_HAS_INTEREST = edgeDataFactory.createEdgeData(10L, LABEL_HAS_INTEREST, VERTEX_PERSON_FRANK.getId(), VERTEX_TAG_HADOOP.getId());
    edges.add(EDGE_10_HAS_INTEREST);
    // Forum:Graph Databases-[hasTag]->Tag:Databases (11L)
    EDGE_11_HAS_TAG = edgeDataFactory.createEdgeData(11L, LABEL_HAS_TAG, VERTEX_FORUM_GDBS.getId(), VERTEX_TAG_DATABASES.getId());
    edges.add(EDGE_11_HAS_TAG);
    // Forum:Graph Databases-[hasTag]->Tag:Graphs (12L)
    EDGE_12_HAS_TAG = edgeDataFactory.createEdgeData(12L, LABEL_HAS_TAG, VERTEX_FORUM_GDBS.getId(), VERTEX_TAG_GRAPHS.getId());
    edges.add(EDGE_12_HAS_TAG);
    // Forum:Graph Processing-[hasTag]->Tag:Graphs (13L)
    EDGE_13_HAS_TAG = edgeDataFactory.createEdgeData(13L, LABEL_HAS_TAG, VERTEX_FORUM_GPS.getId(), VERTEX_TAG_GRAPHS.getId());
    edges.add(EDGE_13_HAS_TAG);
    // Forum:Graph Processing-[hasTag]->Tag:Hadoop (14L)
    EDGE_14_HAS_TAG = edgeDataFactory.createEdgeData(14L, LABEL_HAS_TAG, VERTEX_FORUM_GPS.getId(), VERTEX_TAG_HADOOP.getId());
    edges.add(EDGE_14_HAS_TAG);
    // Forum:Graph Databases-[hasModerator]->Person:Alice (15L)
    EDGE_15_HAS_MODERATOR = edgeDataFactory.createEdgeData(15L, LABEL_HAS_MODERATOR, VERTEX_FORUM_GDBS.getId(), VERTEX_PERSON_ALICE.getId());
    edges.add(EDGE_15_HAS_MODERATOR);
    // Forum:Graph Processing-[hasModerator]->Person:Dave (16L)
    properties = new HashMap<>();
    properties.put(PROPERTY_KEY_SINCE, 2013);
    EDGE_16_HAS_MODERATOR = edgeDataFactory.createEdgeData(16L, LABEL_HAS_MODERATOR, VERTEX_FORUM_GPS.getId(), VERTEX_PERSON_DAVE.getId(), properties, Sets.newHashSet(3L));
    edges.add(EDGE_16_HAS_MODERATOR);
    // Forum:Graph Databases-[hasMember]->Person:Alice (17L)
    EDGE_17_HAS_MEMBER = edgeDataFactory.createEdgeData(17L, LABEL_HAS_MEMBER, VERTEX_FORUM_GDBS.getId(), VERTEX_PERSON_ALICE.getId());
    edges.add(EDGE_17_HAS_MEMBER);
    // Forum:Graph Databases-[hasMember]->Person:Bob (18L)
    EDGE_18_HAS_MEMBER = edgeDataFactory.createEdgeData(18L, LABEL_HAS_MEMBER, VERTEX_FORUM_GDBS.getId(), VERTEX_PERSON_BOB.getId());
    edges.add(EDGE_18_HAS_MEMBER);
    // Forum:Graph Processing-[hasMember]->Person:Carol (19L)
    EDGE_19_HAS_MEMBER = edgeDataFactory.createEdgeData(19L, LABEL_HAS_MEMBER, VERTEX_FORUM_GPS.getId(), VERTEX_PERSON_CAROL.getId(), Sets.newHashSet(3L));
    edges.add(EDGE_19_HAS_MEMBER);
    // Forum:Graph Processing-[hasMember]->Person:Dave (20L)
    EDGE_20_HAS_MEMBER = edgeDataFactory.createEdgeData(20L, LABEL_HAS_MEMBER, VERTEX_FORUM_GPS.getId(), VERTEX_PERSON_DAVE.getId(), Sets.newHashSet(3L));
    edges.add(EDGE_20_HAS_MEMBER);
    return edges;
}