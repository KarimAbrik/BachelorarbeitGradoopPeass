/**                                                                                                    /**                                                                                                 
* Creates a new logical graph based on the given parameters.                                           * Creates a new logical graph based on the given parameters.                                        
*                                                                                                      *                                                                                                   
* @param graph             flink gelly graph holding vertex and edge set                               * @param graph             flink gelly graph holding vertex and edge set                            
* @param graphData         graph data associated with that logical graph                               * @param graphData         graph data associated with that logical graph                            
* @param vertexDataFactory used to create vertex data                                                  * @param vertexDataFactory used to create vertex data                                               
* @param edgeDataFactory   used to create edge data                                                    * @param edgeDataFactory   used to create edge data                                                 
* @param graphDataFactory  used to create graph data                                                   * @param graphDataFactory  used to create graph data                                                
* @param env               Flink execution environment                                                 * @param env               Flink execution environment                                              
*/                                                                                                     */                                                                                                  
private LogicalGraph(Graph&lt;Long, VD, ED&gt; graph, GD graphData, VertexDataFactory&lt;VD&gt; vert   private LogicalGraph(Graph&lt;Long, VD, ED&gt; graph, GD graphData, VertexDataFactory&lt;VD&gt; vert
this.graph = graph;                                                                                  | super(graph, vertexDataFactory, edgeDataFactory, graphDataFactory, env);                            
this.graphData = graphData;                                                                            this.graphData = graphData;                                                                         
this.vertexDataFactory = vertexDataFactory;                                                          |                                                                                                     
this.edgeDataFactory = edgeDataFactory;                                                              |                                                                                                     
this.graphDataFactory = graphDataFactory;                                                            |                                                                                                     
this.env = env;                                                                                      |                                                                                                     
}                                                                                                      }                                                                                                   
