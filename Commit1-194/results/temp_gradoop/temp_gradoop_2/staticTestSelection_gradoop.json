{
  "url" : "https://github.com/dbs-leipzig/gradoop.git",
  "testGoal" : null,
  "initialcommit" : {
    "commit" : "553458a9a08bb522283b19464f76ca91713bc19b",
    "jdk" : 8,
    "initialDependencies" : {
      "gradoop-biiigÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest#testConnectedIIG" : {
        "entities" : [ {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputationTestHelper",
          "module" : "gradoop-biiig",
          "method" : "getConnectedIIG",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGHBaseComputationTest",
          "module" : "gradoop-biiig",
          "method" : "compute",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGHBaseComputationTest",
          "module" : "gradoop-biiig",
          "method" : "testConnectedIIG",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGHBaseComputationTest$BTGLineReader",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGHBaseComputationTest$BTGLineReader",
          "module" : "gradoop-biiig",
          "method" : "readVertex",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGHBaseVertexOutputFormat",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createTestReader",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "getCallingMethod",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "getTempFile",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "getTempFile",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.HBaseClusterTest",
          "module" : "gradoop-core",
          "method" : "createEmptyGraphStore",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.AdjacencyListReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.gradoop.storage.GraphStore", "org.gradoop.io.reader.VertexLineReader" ]
        }, {
          "clazz" : "org.gradoop.io.reader.AdjacencyListReader",
          "module" : "gradoop-core",
          "method" : "read",
          "parameters" : [ "java.io.BufferedReader" ]
        }, {
          "clazz" : "org.gradoop.io.reader.SingleVertexReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.SingleVertexReader",
          "module" : "gradoop-core",
          "method" : "supportsVertexLists",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getIndex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getOtherID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabelCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabels",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyKeys",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexWithLabels",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeLabels",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.MultiLabeled" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperties",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Attributed" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgeIdentifier",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgePropertiesString",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "getRowKey",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdge",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeGraphs",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.GraphElement" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeIncomingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeOutgoingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.apache.hadoop.hbase.client.HTable", "org.apache.hadoop.hbase.client.HTable", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createTablesIfNotExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteTablesIfExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.GiraphClusterTest",
          "module" : "gradoop-giraph",
          "method" : "setupConfiguration",
          "parameters" : [ "org.apache.giraph.job.GiraphJob" ]
        }, {
          "clazz" : "org.gradoop.io.formats.HBaseVertexOutputFormat",
          "module" : "gradoop-giraph",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.formats.HBaseVertexOutputFormat",
          "module" : "gradoop-giraph",
          "method" : "checkOutputSpecs",
          "parameters" : [ "org.apache.hadoop.mapreduce.JobContext" ]
        } ]
      },
      "gradoop-biiigÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest#testDisconnectedIIG" : {
        "entities" : [ {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputationTestHelper",
          "module" : "gradoop-biiig",
          "method" : "getDisconnectedIIG",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGHBaseComputationTest",
          "module" : "gradoop-biiig",
          "method" : "compute",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGHBaseComputationTest",
          "module" : "gradoop-biiig",
          "method" : "testDisconnectedIIG",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGHBaseComputationTest$BTGLineReader",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGHBaseComputationTest$BTGLineReader",
          "module" : "gradoop-biiig",
          "method" : "readVertex",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGHBaseVertexOutputFormat",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createTestReader",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "getCallingMethod",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "getTempFile",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "getTempFile",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.HBaseClusterTest",
          "module" : "gradoop-core",
          "method" : "createEmptyGraphStore",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.AdjacencyListReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.gradoop.storage.GraphStore", "org.gradoop.io.reader.VertexLineReader" ]
        }, {
          "clazz" : "org.gradoop.io.reader.AdjacencyListReader",
          "module" : "gradoop-core",
          "method" : "read",
          "parameters" : [ "java.io.BufferedReader" ]
        }, {
          "clazz" : "org.gradoop.io.reader.SingleVertexReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.SingleVertexReader",
          "module" : "gradoop-core",
          "method" : "supportsVertexLists",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getIndex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getOtherID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabelCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabels",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyKeys",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexWithLabels",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeLabels",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.MultiLabeled" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperties",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Attributed" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgeIdentifier",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgePropertiesString",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "getRowKey",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdge",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeGraphs",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.GraphElement" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeIncomingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeOutgoingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.apache.hadoop.hbase.client.HTable", "org.apache.hadoop.hbase.client.HTable", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createTablesIfNotExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteTablesIfExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.GiraphClusterTest",
          "module" : "gradoop-giraph",
          "method" : "setupConfiguration",
          "parameters" : [ "org.apache.giraph.job.GiraphJob" ]
        }, {
          "clazz" : "org.gradoop.io.formats.HBaseVertexOutputFormat",
          "module" : "gradoop-giraph",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.formats.HBaseVertexOutputFormat",
          "module" : "gradoop-giraph",
          "method" : "checkOutputSpecs",
          "parameters" : [ "org.apache.hadoop.mapreduce.JobContext" ]
        } ]
      },
      "gradoop-biiigÂ§org.gradoop.biiig.algorithms.BTGTextComputationTest#testConnectedIIG" : {
        "entities" : [ {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputation",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputation",
          "module" : "gradoop-biiig",
          "method" : "compute",
          "parameters" : [ "org.apache.giraph.graph.Vertex", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputation",
          "module" : "gradoop-biiig",
          "method" : "getCurrentMinValue",
          "parameters" : [ "org.apache.giraph.graph.Vertex" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputation",
          "module" : "gradoop-biiig",
          "method" : "getNewMinValue",
          "parameters" : [ "java.lang.Iterable", "long" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputation",
          "module" : "gradoop-biiig",
          "method" : "processMasterVertex",
          "parameters" : [ "org.apache.giraph.graph.Vertex", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputation",
          "module" : "gradoop-biiig",
          "method" : "processTransactionalVertex",
          "parameters" : [ "org.apache.giraph.graph.Vertex", "long" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputationTestHelper",
          "module" : "gradoop-biiig",
          "method" : "getConnectedIIG",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGTextComputationTest",
          "module" : "gradoop-biiig",
          "method" : "computeResults",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGTextComputationTest",
          "module" : "gradoop-biiig",
          "method" : "getConfiguration",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGTextComputationTest",
          "module" : "gradoop-biiig",
          "method" : "parseResults",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGTextComputationTest",
          "module" : "gradoop-biiig",
          "method" : "testConnectedIIG",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGTextComputationTest",
          "module" : "gradoop-biiig",
          "method" : "validateConnectedIIGResult",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGMessage",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGMessage",
          "module" : "gradoop-biiig",
          "method" : "getBtgID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGMessage",
          "module" : "gradoop-biiig",
          "method" : "getSenderID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGMessage",
          "module" : "gradoop-biiig",
          "method" : "readFields",
          "parameters" : [ "java.io.DataInput" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGMessage",
          "module" : "gradoop-biiig",
          "method" : "setBtgID",
          "parameters" : [ "long" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGMessage",
          "module" : "gradoop-biiig",
          "method" : "setSenderID",
          "parameters" : [ "long" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGMessage",
          "module" : "gradoop-biiig",
          "method" : "write",
          "parameters" : [ "java.io.DataOutput" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat",
          "module" : "gradoop-biiig",
          "method" : "createVertexReader",
          "parameters" : [ "org.apache.hadoop.mapreduce.InputSplit", "org.apache.hadoop.mapreduce.TaskAttemptContext" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat$IIGTextVertexReaderFromEachLine",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat$IIGTextVertexReaderFromEachLine",
          "module" : "gradoop-biiig",
          "method" : "getEdges",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat$IIGTextVertexReaderFromEachLine",
          "module" : "gradoop-biiig",
          "method" : "getId",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat$IIGTextVertexReaderFromEachLine",
          "module" : "gradoop-biiig",
          "method" : "getValue",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat$IIGTextVertexReaderFromEachLine",
          "module" : "gradoop-biiig",
          "method" : "preprocessLine",
          "parameters" : [ "org.apache.hadoop.io.Text" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexOutputFormat",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexOutputFormat",
          "module" : "gradoop-biiig",
          "method" : "createVertexWriter",
          "parameters" : [ "org.apache.hadoop.mapreduce.TaskAttemptContext" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexOutputFormat$BTGTextVertexLineWriter",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ "org.gradoop.biiig.io.formats.BTGTextVertexOutputFormat" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexOutputFormat$BTGTextVertexLineWriter",
          "module" : "gradoop-biiig",
          "method" : "convertVertexToLine",
          "parameters" : [ "org.apache.giraph.graph.Vertex" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexType",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ "org.gradoop.biiig.io.formats.BTGVertexType", "java.lang.Double", "java.util.List" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "addToGraph",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "getGraphCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "getVertexType",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "getVertexValue",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "initNeighbourMinimBTGIDMap",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "initNeighbourMinimumBTGIDMap",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "readFields",
          "parameters" : [ "java.io.DataInput" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "removeLastBtgID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "updateBtgIDs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "updateNeighbourBtgID",
          "parameters" : [ "java.lang.Long", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "write",
          "parameters" : [ "java.io.DataOutput" ]
        } ]
      },
      "gradoop-biiigÂ§org.gradoop.biiig.algorithms.BTGTextComputationTest#testDisconnectedIIG" : {
        "entities" : [ {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputation",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputation",
          "module" : "gradoop-biiig",
          "method" : "compute",
          "parameters" : [ "org.apache.giraph.graph.Vertex", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputation",
          "module" : "gradoop-biiig",
          "method" : "getCurrentMinValue",
          "parameters" : [ "org.apache.giraph.graph.Vertex" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputation",
          "module" : "gradoop-biiig",
          "method" : "getNewMinValue",
          "parameters" : [ "java.lang.Iterable", "long" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputation",
          "module" : "gradoop-biiig",
          "method" : "processMasterVertex",
          "parameters" : [ "org.apache.giraph.graph.Vertex", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputation",
          "module" : "gradoop-biiig",
          "method" : "processTransactionalVertex",
          "parameters" : [ "org.apache.giraph.graph.Vertex", "long" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputationTestHelper",
          "module" : "gradoop-biiig",
          "method" : "getDisconnectedIIG",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGTextComputationTest",
          "module" : "gradoop-biiig",
          "method" : "computeResults",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGTextComputationTest",
          "module" : "gradoop-biiig",
          "method" : "getConfiguration",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGTextComputationTest",
          "module" : "gradoop-biiig",
          "method" : "parseResults",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGTextComputationTest",
          "module" : "gradoop-biiig",
          "method" : "testDisconnectedIIG",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGTextComputationTest",
          "module" : "gradoop-biiig",
          "method" : "validateDisconnectedIIGResult",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGMessage",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGMessage",
          "module" : "gradoop-biiig",
          "method" : "getBtgID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGMessage",
          "module" : "gradoop-biiig",
          "method" : "getSenderID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGMessage",
          "module" : "gradoop-biiig",
          "method" : "readFields",
          "parameters" : [ "java.io.DataInput" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGMessage",
          "module" : "gradoop-biiig",
          "method" : "setBtgID",
          "parameters" : [ "long" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGMessage",
          "module" : "gradoop-biiig",
          "method" : "setSenderID",
          "parameters" : [ "long" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGMessage",
          "module" : "gradoop-biiig",
          "method" : "write",
          "parameters" : [ "java.io.DataOutput" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat",
          "module" : "gradoop-biiig",
          "method" : "createVertexReader",
          "parameters" : [ "org.apache.hadoop.mapreduce.InputSplit", "org.apache.hadoop.mapreduce.TaskAttemptContext" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat$IIGTextVertexReaderFromEachLine",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat$IIGTextVertexReaderFromEachLine",
          "module" : "gradoop-biiig",
          "method" : "getEdges",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat$IIGTextVertexReaderFromEachLine",
          "module" : "gradoop-biiig",
          "method" : "getId",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat$IIGTextVertexReaderFromEachLine",
          "module" : "gradoop-biiig",
          "method" : "getValue",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat$IIGTextVertexReaderFromEachLine",
          "module" : "gradoop-biiig",
          "method" : "preprocessLine",
          "parameters" : [ "org.apache.hadoop.io.Text" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexOutputFormat",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexOutputFormat",
          "module" : "gradoop-biiig",
          "method" : "createVertexWriter",
          "parameters" : [ "org.apache.hadoop.mapreduce.TaskAttemptContext" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexOutputFormat$BTGTextVertexLineWriter",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ "org.gradoop.biiig.io.formats.BTGTextVertexOutputFormat" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexOutputFormat$BTGTextVertexLineWriter",
          "module" : "gradoop-biiig",
          "method" : "convertVertexToLine",
          "parameters" : [ "org.apache.giraph.graph.Vertex" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexType",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ "org.gradoop.biiig.io.formats.BTGVertexType", "java.lang.Double", "java.util.List" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "addToGraph",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "getGraphCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "getVertexType",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "getVertexValue",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "initNeighbourMinimBTGIDMap",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "initNeighbourMinimumBTGIDMap",
          "parameters" : [ "int" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "readFields",
          "parameters" : [ "java.io.DataInput" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "removeLastBtgID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "updateBtgIDs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "updateNeighbourBtgID",
          "parameters" : [ "java.lang.Long", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "write",
          "parameters" : [ "java.io.DataOutput" ]
        } ]
      },
      "gradoop-biiigÂ§org.gradoop.biiig.algorithms.BTGTextComputationTest#testSingleMasterVertex" : {
        "entities" : [ {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputation",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputation",
          "module" : "gradoop-biiig",
          "method" : "compute",
          "parameters" : [ "org.apache.giraph.graph.Vertex", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputation",
          "module" : "gradoop-biiig",
          "method" : "processMasterVertex",
          "parameters" : [ "org.apache.giraph.graph.Vertex", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputationTestHelper",
          "module" : "gradoop-biiig",
          "method" : "getSingleMasterVertexIIG",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGTextComputationTest",
          "module" : "gradoop-biiig",
          "method" : "computeResults",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGTextComputationTest",
          "module" : "gradoop-biiig",
          "method" : "getConfiguration",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGTextComputationTest",
          "module" : "gradoop-biiig",
          "method" : "parseResults",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGTextComputationTest",
          "module" : "gradoop-biiig",
          "method" : "testSingleMasterVertex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGTextComputationTest",
          "module" : "gradoop-biiig",
          "method" : "validateSingleMasterVertexIIGResult",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat",
          "module" : "gradoop-biiig",
          "method" : "createVertexReader",
          "parameters" : [ "org.apache.hadoop.mapreduce.InputSplit", "org.apache.hadoop.mapreduce.TaskAttemptContext" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat$IIGTextVertexReaderFromEachLine",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat$IIGTextVertexReaderFromEachLine",
          "module" : "gradoop-biiig",
          "method" : "getEdges",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat$IIGTextVertexReaderFromEachLine",
          "module" : "gradoop-biiig",
          "method" : "getId",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat$IIGTextVertexReaderFromEachLine",
          "module" : "gradoop-biiig",
          "method" : "getValue",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat$IIGTextVertexReaderFromEachLine",
          "module" : "gradoop-biiig",
          "method" : "preprocessLine",
          "parameters" : [ "org.apache.hadoop.io.Text" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexOutputFormat",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexOutputFormat",
          "module" : "gradoop-biiig",
          "method" : "createVertexWriter",
          "parameters" : [ "org.apache.hadoop.mapreduce.TaskAttemptContext" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexOutputFormat$BTGTextVertexLineWriter",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ "org.gradoop.biiig.io.formats.BTGTextVertexOutputFormat" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexOutputFormat$BTGTextVertexLineWriter",
          "module" : "gradoop-biiig",
          "method" : "convertVertexToLine",
          "parameters" : [ "org.apache.giraph.graph.Vertex" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexType",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ "org.gradoop.biiig.io.formats.BTGVertexType", "java.lang.Double", "java.util.List" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "addToGraph",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "getGraphCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "getVertexType",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "getVertexValue",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "readFields",
          "parameters" : [ "java.io.DataInput" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "updateBtgIDs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "write",
          "parameters" : [ "java.io.DataOutput" ]
        } ]
      },
      "gradoop-biiigÂ§org.gradoop.biiig.algorithms.BTGTextComputationTest#testSingleMasterVertexWithBTG" : {
        "entities" : [ {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputation",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputation",
          "module" : "gradoop-biiig",
          "method" : "compute",
          "parameters" : [ "org.apache.giraph.graph.Vertex", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputation",
          "module" : "gradoop-biiig",
          "method" : "processMasterVertex",
          "parameters" : [ "org.apache.giraph.graph.Vertex", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputationTestHelper",
          "module" : "gradoop-biiig",
          "method" : "getSingleMasterVertexIIGWithBTG",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGTextComputationTest",
          "module" : "gradoop-biiig",
          "method" : "computeResults",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGTextComputationTest",
          "module" : "gradoop-biiig",
          "method" : "getConfiguration",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGTextComputationTest",
          "module" : "gradoop-biiig",
          "method" : "parseResults",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGTextComputationTest",
          "module" : "gradoop-biiig",
          "method" : "testSingleMasterVertexWithBTG",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGTextComputationTest",
          "module" : "gradoop-biiig",
          "method" : "validateSingleMasterVertexIIGResult",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat",
          "module" : "gradoop-biiig",
          "method" : "createVertexReader",
          "parameters" : [ "org.apache.hadoop.mapreduce.InputSplit", "org.apache.hadoop.mapreduce.TaskAttemptContext" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat$IIGTextVertexReaderFromEachLine",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat$IIGTextVertexReaderFromEachLine",
          "module" : "gradoop-biiig",
          "method" : "getEdges",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat$IIGTextVertexReaderFromEachLine",
          "module" : "gradoop-biiig",
          "method" : "getId",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat$IIGTextVertexReaderFromEachLine",
          "module" : "gradoop-biiig",
          "method" : "getValue",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat$IIGTextVertexReaderFromEachLine",
          "module" : "gradoop-biiig",
          "method" : "preprocessLine",
          "parameters" : [ "org.apache.hadoop.io.Text" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexOutputFormat",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexOutputFormat",
          "module" : "gradoop-biiig",
          "method" : "createVertexWriter",
          "parameters" : [ "org.apache.hadoop.mapreduce.TaskAttemptContext" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexOutputFormat$BTGTextVertexLineWriter",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ "org.gradoop.biiig.io.formats.BTGTextVertexOutputFormat" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexOutputFormat$BTGTextVertexLineWriter",
          "module" : "gradoop-biiig",
          "method" : "convertVertexToLine",
          "parameters" : [ "org.apache.giraph.graph.Vertex" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexType",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ "org.gradoop.biiig.io.formats.BTGVertexType", "java.lang.Double", "java.util.List" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "addToGraph",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "getGraphCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "getVertexType",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "getVertexValue",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "readFields",
          "parameters" : [ "java.io.DataInput" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "updateBtgIDs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "write",
          "parameters" : [ "java.io.DataOutput" ]
        } ]
      },
      "gradoop-biiigÂ§org.gradoop.biiig.algorithms.BTGTextComputationTest#testSingleTransactionalVertex" : {
        "entities" : [ {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputation",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputation",
          "module" : "gradoop-biiig",
          "method" : "compute",
          "parameters" : [ "org.apache.giraph.graph.Vertex", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputation",
          "module" : "gradoop-biiig",
          "method" : "getCurrentMinValue",
          "parameters" : [ "org.apache.giraph.graph.Vertex" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputation",
          "module" : "gradoop-biiig",
          "method" : "getNewMinValue",
          "parameters" : [ "java.lang.Iterable", "long" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputation",
          "module" : "gradoop-biiig",
          "method" : "processTransactionalVertex",
          "parameters" : [ "org.apache.giraph.graph.Vertex", "long" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputationTestHelper",
          "module" : "gradoop-biiig",
          "method" : "getSingleTransactionalVertexIIG",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGTextComputationTest",
          "module" : "gradoop-biiig",
          "method" : "computeResults",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGTextComputationTest",
          "module" : "gradoop-biiig",
          "method" : "getConfiguration",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGTextComputationTest",
          "module" : "gradoop-biiig",
          "method" : "parseResults",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGTextComputationTest",
          "module" : "gradoop-biiig",
          "method" : "testSingleTransactionalVertex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGTextComputationTest",
          "module" : "gradoop-biiig",
          "method" : "validateSingleTransactionalVertexIIGResult",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGMessage",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGMessage",
          "module" : "gradoop-biiig",
          "method" : "setBtgID",
          "parameters" : [ "long" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGMessage",
          "module" : "gradoop-biiig",
          "method" : "setSenderID",
          "parameters" : [ "long" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat",
          "module" : "gradoop-biiig",
          "method" : "createVertexReader",
          "parameters" : [ "org.apache.hadoop.mapreduce.InputSplit", "org.apache.hadoop.mapreduce.TaskAttemptContext" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat$IIGTextVertexReaderFromEachLine",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat$IIGTextVertexReaderFromEachLine",
          "module" : "gradoop-biiig",
          "method" : "getEdges",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat$IIGTextVertexReaderFromEachLine",
          "module" : "gradoop-biiig",
          "method" : "getId",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat$IIGTextVertexReaderFromEachLine",
          "module" : "gradoop-biiig",
          "method" : "getValue",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat$IIGTextVertexReaderFromEachLine",
          "module" : "gradoop-biiig",
          "method" : "preprocessLine",
          "parameters" : [ "org.apache.hadoop.io.Text" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexOutputFormat",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexOutputFormat",
          "module" : "gradoop-biiig",
          "method" : "createVertexWriter",
          "parameters" : [ "org.apache.hadoop.mapreduce.TaskAttemptContext" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexOutputFormat$BTGTextVertexLineWriter",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ "org.gradoop.biiig.io.formats.BTGTextVertexOutputFormat" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexOutputFormat$BTGTextVertexLineWriter",
          "module" : "gradoop-biiig",
          "method" : "convertVertexToLine",
          "parameters" : [ "org.apache.giraph.graph.Vertex" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexType",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ "org.gradoop.biiig.io.formats.BTGVertexType", "java.lang.Double", "java.util.List" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "addToGraph",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "getVertexType",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "getVertexValue",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "readFields",
          "parameters" : [ "java.io.DataInput" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "removeLastBtgID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "write",
          "parameters" : [ "java.io.DataOutput" ]
        } ]
      },
      "gradoop-biiigÂ§org.gradoop.biiig.algorithms.BTGTextComputationTest#testSingleTransactionalVertexWithBTG" : {
        "entities" : [ {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputation",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputation",
          "module" : "gradoop-biiig",
          "method" : "compute",
          "parameters" : [ "org.apache.giraph.graph.Vertex", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputation",
          "module" : "gradoop-biiig",
          "method" : "getCurrentMinValue",
          "parameters" : [ "org.apache.giraph.graph.Vertex" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputation",
          "module" : "gradoop-biiig",
          "method" : "getNewMinValue",
          "parameters" : [ "java.lang.Iterable", "long" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputation",
          "module" : "gradoop-biiig",
          "method" : "processTransactionalVertex",
          "parameters" : [ "org.apache.giraph.graph.Vertex", "long" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGComputationTestHelper",
          "module" : "gradoop-biiig",
          "method" : "getSingleTransactionalVertexIIGWithBTG",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGTextComputationTest",
          "module" : "gradoop-biiig",
          "method" : "computeResults",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGTextComputationTest",
          "module" : "gradoop-biiig",
          "method" : "getConfiguration",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGTextComputationTest",
          "module" : "gradoop-biiig",
          "method" : "parseResults",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGTextComputationTest",
          "module" : "gradoop-biiig",
          "method" : "testSingleTransactionalVertexWithBTG",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.algorithms.BTGTextComputationTest",
          "module" : "gradoop-biiig",
          "method" : "validateSingleTransactionalVertexIIGResult",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGMessage",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGMessage",
          "module" : "gradoop-biiig",
          "method" : "setBtgID",
          "parameters" : [ "long" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGMessage",
          "module" : "gradoop-biiig",
          "method" : "setSenderID",
          "parameters" : [ "long" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat",
          "module" : "gradoop-biiig",
          "method" : "createVertexReader",
          "parameters" : [ "org.apache.hadoop.mapreduce.InputSplit", "org.apache.hadoop.mapreduce.TaskAttemptContext" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat$IIGTextVertexReaderFromEachLine",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat$IIGTextVertexReaderFromEachLine",
          "module" : "gradoop-biiig",
          "method" : "getEdges",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat$IIGTextVertexReaderFromEachLine",
          "module" : "gradoop-biiig",
          "method" : "getId",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat$IIGTextVertexReaderFromEachLine",
          "module" : "gradoop-biiig",
          "method" : "getValue",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexInputFormat$IIGTextVertexReaderFromEachLine",
          "module" : "gradoop-biiig",
          "method" : "preprocessLine",
          "parameters" : [ "org.apache.hadoop.io.Text" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexOutputFormat",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexOutputFormat",
          "module" : "gradoop-biiig",
          "method" : "createVertexWriter",
          "parameters" : [ "org.apache.hadoop.mapreduce.TaskAttemptContext" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexOutputFormat$BTGTextVertexLineWriter",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ "org.gradoop.biiig.io.formats.BTGTextVertexOutputFormat" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGTextVertexOutputFormat$BTGTextVertexLineWriter",
          "module" : "gradoop-biiig",
          "method" : "convertVertexToLine",
          "parameters" : [ "org.apache.giraph.graph.Vertex" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexType",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ "org.gradoop.biiig.io.formats.BTGVertexType", "java.lang.Double", "java.util.List" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "addToGraph",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "getVertexType",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "getVertexValue",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "readFields",
          "parameters" : [ "java.io.DataInput" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "removeLastBtgID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexValue",
          "module" : "gradoop-biiig",
          "method" : "write",
          "parameters" : [ "java.io.DataOutput" ]
        } ]
      },
      "gradoop-biiigÂ§org.gradoop.biiig.examples.BTGAnalysisDriverTest#driverTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.biiig.examples.BTGAnalysisDriverTest",
          "module" : "gradoop-biiig",
          "method" : "before",
          "parameters" : [ ]
        } ]
      },
      "gradoop-biiigÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest#loadJsonToHBaseTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexType",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.reader.FoodBrokerReader",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.reader.FoodBrokerReader",
          "module" : "gradoop-biiig",
          "method" : "addProperties",
          "parameters" : [ "org.gradoop.model.Attributed", "org.codehaus.jettison.json.JSONObject" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.reader.FoodBrokerReader",
          "module" : "gradoop-biiig",
          "method" : "addProperties",
          "parameters" : [ "org.gradoop.model.Attributed", "org.codehaus.jettison.json.JSONObject", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.reader.FoodBrokerReader",
          "module" : "gradoop-biiig",
          "method" : "createFromEdgeLine",
          "parameters" : [ "org.codehaus.jettison.json.JSONObject" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.reader.FoodBrokerReader",
          "module" : "gradoop-biiig",
          "method" : "createFromVertexLine",
          "parameters" : [ "org.codehaus.jettison.json.JSONObject" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.reader.FoodBrokerReader",
          "module" : "gradoop-biiig",
          "method" : "getKind",
          "parameters" : [ "org.codehaus.jettison.json.JSONObject" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.reader.FoodBrokerReader",
          "module" : "gradoop-biiig",
          "method" : "getType",
          "parameters" : [ "org.codehaus.jettison.json.JSONObject" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.reader.FoodBrokerReader",
          "module" : "gradoop-biiig",
          "method" : "readVertexList",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.reader.FoodBrokerReaderTest",
          "module" : "gradoop-biiig",
          "method" : "loadJsonToHBaseTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.reader.FoodBrokerReaderTest",
          "module" : "gradoop-biiig",
          "method" : "validateFoodbrokerGraph",
          "parameters" : [ "org.gradoop.storage.GraphStore" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.reader.FoodBrokerReaderTest",
          "module" : "gradoop-biiig",
          "method" : "validateVertex",
          "parameters" : [ "org.gradoop.model.Vertex", "int", "int", "int", "int" ]
        }, {
          "clazz" : "org.gradoop.HBaseClusterTest",
          "module" : "gradoop-core",
          "method" : "createEmptyGraphStore",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getIndex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getOtherID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "addLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabelCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabels",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "addProperty",
          "parameters" : [ "java.lang.String", "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getProperty",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyKeys",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexWithEdges",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexWithID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "decodeValueFromBytes",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "decodeValueFromString",
          "parameters" : [ "byte", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "encodeValueToBytes",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "getColumnKeysFromFamiliy",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result", "byte[]" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "getType",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "readLabels",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "readProperties",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeLabels",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.MultiLabeled" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperties",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Attributed" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperty",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.String", "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgeIdentifier",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgePropertiesString",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "getRowKey",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readEdge",
          "parameters" : [ "byte[]", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result", "byte[]" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readGraphs",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readIncomingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readOutgoingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdge",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeGraphs",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.GraphElement" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeIncomingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeOutgoingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.apache.hadoop.hbase.client.HTable", "org.apache.hadoop.hbase.client.HTable", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createTablesIfNotExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteTablesIfExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        } ]
      },
      "gradoop-biiigÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest#readFromJsonTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.biiig.io.formats.BTGVertexType",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.reader.FoodBrokerReader",
          "module" : "gradoop-biiig",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.biiig.io.reader.FoodBrokerReader",
          "module" : "gradoop-biiig",
          "method" : "addProperties",
          "parameters" : [ "org.gradoop.model.Attributed", "org.codehaus.jettison.json.JSONObject" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.reader.FoodBrokerReader",
          "module" : "gradoop-biiig",
          "method" : "addProperties",
          "parameters" : [ "org.gradoop.model.Attributed", "org.codehaus.jettison.json.JSONObject", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.reader.FoodBrokerReader",
          "module" : "gradoop-biiig",
          "method" : "createFromEdgeLine",
          "parameters" : [ "org.codehaus.jettison.json.JSONObject" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.reader.FoodBrokerReader",
          "module" : "gradoop-biiig",
          "method" : "createFromVertexLine",
          "parameters" : [ "org.codehaus.jettison.json.JSONObject" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.reader.FoodBrokerReader",
          "module" : "gradoop-biiig",
          "method" : "getKind",
          "parameters" : [ "org.codehaus.jettison.json.JSONObject" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.reader.FoodBrokerReader",
          "module" : "gradoop-biiig",
          "method" : "getType",
          "parameters" : [ "org.codehaus.jettison.json.JSONObject" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.reader.FoodBrokerReader",
          "module" : "gradoop-biiig",
          "method" : "readVertexList",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.biiig.io.reader.FoodBrokerReaderTest",
          "module" : "gradoop-biiig",
          "method" : "readFromJsonTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "addLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "addProperty",
          "parameters" : [ "java.lang.String", "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexWithEdges",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexWithID",
          "parameters" : [ "java.lang.Long" ]
        } ]
      },
      "gradoop-coreÂ§org.gradoop.drivers.BulkLoadDriverTest#testBulkLoadDriver" : {
        "entities" : [ {
          "clazz" : "org.gradoop.HBaseClusterTest",
          "module" : "gradoop-core",
          "method" : "copyFromLocal",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkLoadDriver",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkLoadDriver",
          "module" : "gradoop-core",
          "method" : "createGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "boolean" ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkLoadDriver",
          "module" : "gradoop-core",
          "method" : "getLineReaderClass",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkLoadDriver",
          "module" : "gradoop-core",
          "method" : "run",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkLoadDriver",
          "module" : "gradoop-core",
          "method" : "runBulkLoad",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "java.lang.Class", "java.lang.String", "java.lang.String", "boolean" ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkLoadDriver$ConfUtils",
          "module" : "gradoop-core",
          "method" : "parseArgs",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkLoadDriver$ConfUtils",
          "module" : "gradoop-core",
          "method" : "performSanityCheck",
          "parameters" : [ "org.apache.commons.cli.CommandLine" ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkLoadDriverTest",
          "module" : "gradoop-core",
          "method" : "testBulkLoadDriver",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.apache.hadoop.hbase.client.HTable", "org.apache.hadoop.hbase.client.HTable", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createTablesIfNotExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteTablesIfExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        } ]
      },
      "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest#testBulkWriteDriver" : {
        "entities" : [ {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createBasicGraphVertices",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createVertices",
          "parameters" : [ "java.lang.String[]", "org.gradoop.io.reader.VertexLineReader" ]
        }, {
          "clazz" : "org.gradoop.HBaseClusterTest",
          "module" : "gradoop-core",
          "method" : "createEmptyGraphStore",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkWriteDriver",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkWriteDriver",
          "module" : "gradoop-core",
          "method" : "getLineWriterClass",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkWriteDriver",
          "module" : "gradoop-core",
          "method" : "run",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkWriteDriver",
          "module" : "gradoop-core",
          "method" : "runBulkWrite",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "java.lang.Class", "java.lang.String", "int", "boolean" ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkWriteDriver$ConfUtils",
          "module" : "gradoop-core",
          "method" : "parseArgs",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkWriteDriver$ConfUtils",
          "module" : "gradoop-core",
          "method" : "performSanityCheck",
          "parameters" : [ "org.apache.commons.cli.CommandLine" ]
        }, {
          "clazz" : "org.gradoop.drivers.BulkWriteDriverTest",
          "module" : "gradoop-core",
          "method" : "testBulkWriteDriver",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.SimpleVertexReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.SimpleVertexReader",
          "module" : "gradoop-core",
          "method" : "getTokens",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.SimpleVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.SingleVertexReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getIndex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getOtherID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabelCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabels",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyKeys",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexWithEdges",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexWithOutgoingEdges",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeLabels",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.MultiLabeled" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperties",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Attributed" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgeIdentifier",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgePropertiesString",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "getRowKey",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdge",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeGraphs",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.GraphElement" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeIncomingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeOutgoingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.apache.hadoop.hbase.client.HTable", "org.apache.hadoop.hbase.client.HTable", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createTablesIfNotExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteTablesIfExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        } ]
      },
      "gradoop-coreÂ§org.gradoop.io.reader.AdjacencyListReaderTest#writeReadExtendedGraphTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createTestReader",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "getCallingMethod",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "getTempFile",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "getTempFile",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "testEdge",
          "parameters" : [ "java.util.List", "java.lang.Long", "java.lang.String", "java.lang.Long", "int" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "testProperties",
          "parameters" : [ "org.gradoop.model.Attributed", "int" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "validateExtendedGraphVertices",
          "parameters" : [ "java.util.List" ]
        }, {
          "clazz" : "org.gradoop.HBaseClusterTest",
          "module" : "gradoop-core",
          "method" : "createEmptyGraphStore",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.AdjacencyListReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.gradoop.storage.GraphStore", "org.gradoop.io.reader.VertexLineReader" ]
        }, {
          "clazz" : "org.gradoop.io.reader.AdjacencyListReader",
          "module" : "gradoop-core",
          "method" : "read",
          "parameters" : [ "java.io.BufferedReader" ]
        }, {
          "clazz" : "org.gradoop.io.reader.AdjacencyListReaderTest",
          "module" : "gradoop-core",
          "method" : "writeReadExtendedGraphTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "decodeValue",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "getLineTokens",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readEdges",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readGraphs",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readLabels",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readProperties",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertexID",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "supportsVertexLists",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "equals",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getIndex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getOtherID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabelCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabels",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getProperty",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyKeys",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "decodeValueFromBytes",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "decodeValueFromString",
          "parameters" : [ "byte", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "encodeValueToBytes",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "getColumnKeysFromFamiliy",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result", "byte[]" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "getType",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "readLabels",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "readProperties",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeLabels",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.MultiLabeled" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperties",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Attributed" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperty",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.String", "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgeIdentifier",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgePropertiesString",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "getRowKey",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readEdge",
          "parameters" : [ "byte[]", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result", "byte[]" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readGraphs",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readIncomingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readOutgoingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdge",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeGraphs",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.GraphElement" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeIncomingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeOutgoingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.apache.hadoop.hbase.client.HTable", "org.apache.hadoop.hbase.client.HTable", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createTablesIfNotExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteTablesIfExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        } ]
      },
      "gradoop-coreÂ§org.gradoop.io.reader.BulkLoadTest#bulkLoadTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createTestReader",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "getCallingMethod",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "getTempFile",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "getTempFile",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.HBaseClusterTest",
          "module" : "gradoop-core",
          "method" : "createEmptyGraphStore",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.BulkLoadTest",
          "module" : "gradoop-core",
          "method" : "bulkLoadTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.apache.hadoop.hbase.client.HTable", "org.apache.hadoop.hbase.client.HTable", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createTablesIfNotExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteTablesIfExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        } ]
      },
      "gradoop-coreÂ§org.gradoop.io.reader.EPGVertexReaderTest#readExtendedGraphTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "testEdge",
          "parameters" : [ "java.util.List", "java.lang.Long", "java.lang.String", "java.lang.Long", "int" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "testProperties",
          "parameters" : [ "org.gradoop.model.Attributed", "int" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "validateExtendedGraphVertices",
          "parameters" : [ "java.util.List" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "decodeValue",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "getLineTokens",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readEdges",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readGraphs",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readLabels",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readProperties",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertexID",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReaderTest",
          "module" : "gradoop-core",
          "method" : "readExtendedGraphTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "equals",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabels",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getProperty",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyKeys",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        } ]
      },
      "gradoop-coreÂ§org.gradoop.io.reader.JsonReaderTest#testReader" : {
        "entities" : [ {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "testEdge",
          "parameters" : [ "java.util.List", "java.lang.Long", "java.lang.String", "java.lang.Long", "int" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "testProperties",
          "parameters" : [ "org.gradoop.model.Attributed", "int" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "validateExtendedGraphVertices",
          "parameters" : [ "java.util.List" ]
        }, {
          "clazz" : "org.gradoop.io.reader.JsonReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.JsonReader",
          "module" : "gradoop-core",
          "method" : "readEdges",
          "parameters" : [ "org.codehaus.jettison.json.JSONArray" ]
        }, {
          "clazz" : "org.gradoop.io.reader.JsonReader",
          "module" : "gradoop-core",
          "method" : "readGraphs",
          "parameters" : [ "org.codehaus.jettison.json.JSONArray" ]
        }, {
          "clazz" : "org.gradoop.io.reader.JsonReader",
          "module" : "gradoop-core",
          "method" : "readLabels",
          "parameters" : [ "org.codehaus.jettison.json.JSONArray" ]
        }, {
          "clazz" : "org.gradoop.io.reader.JsonReader",
          "module" : "gradoop-core",
          "method" : "readProperties",
          "parameters" : [ "org.codehaus.jettison.json.JSONObject" ]
        }, {
          "clazz" : "org.gradoop.io.reader.JsonReader",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.JsonReader",
          "module" : "gradoop-core",
          "method" : "readVertexID",
          "parameters" : [ "org.codehaus.jettison.json.JSONObject" ]
        }, {
          "clazz" : "org.gradoop.io.reader.JsonReaderTest",
          "module" : "gradoop-core",
          "method" : "testReader",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.SingleVertexReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "equals",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabels",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getProperty",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyKeys",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        } ]
      },
      "gradoop-coreÂ§org.gradoop.io.reader.SimpleVertexReaderTest#readBasicGraphTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "validateBasicGraphEdges",
          "parameters" : [ "java.lang.Iterable", "int", "long" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "validateBasicGraphVertices",
          "parameters" : [ "java.util.List" ]
        }, {
          "clazz" : "org.gradoop.io.reader.SimpleVertexReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.SimpleVertexReader",
          "module" : "gradoop-core",
          "method" : "getTokens",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.SimpleVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.SimpleVertexReaderTest",
          "module" : "gradoop-core",
          "method" : "readBasicGraphTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.SingleVertexReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getIndex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getOtherID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexWithEdges",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexWithOutgoingEdges",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable" ]
        } ]
      },
      "gradoop-coreÂ§org.gradoop.io.writer.BulkWriteTest#bulkWriteSimpleGraphTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createBasicGraphVertices",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createVertices",
          "parameters" : [ "java.lang.String[]", "org.gradoop.io.reader.VertexLineReader" ]
        }, {
          "clazz" : "org.gradoop.HBaseClusterTest",
          "module" : "gradoop-core",
          "method" : "createEmptyGraphStore",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.HBaseClusterTest",
          "module" : "gradoop-core",
          "method" : "readGraphFromFile",
          "parameters" : [ "org.apache.hadoop.fs.Path", "int" ]
        }, {
          "clazz" : "org.gradoop.io.reader.SimpleVertexReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.SimpleVertexReader",
          "module" : "gradoop-core",
          "method" : "getTokens",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.SimpleVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.SingleVertexReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.writer.BulkWriteTest",
          "module" : "gradoop-core",
          "method" : "bulkWriteSimpleGraphTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getIndex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getOtherID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabelCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabels",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyKeys",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexWithEdges",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexWithOutgoingEdges",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeLabels",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.MultiLabeled" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperties",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Attributed" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgeIdentifier",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgePropertiesString",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "getRowKey",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdge",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeGraphs",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.GraphElement" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeIncomingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeOutgoingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.apache.hadoop.hbase.client.HTable", "org.apache.hadoop.hbase.client.HTable", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createTablesIfNotExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteTablesIfExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        } ]
      },
      "gradoop-coreÂ§org.gradoop.io.writer.JsonWriterTest#writerTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createExtendedGraphVertices",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createVertices",
          "parameters" : [ "java.lang.String[]", "org.gradoop.io.reader.VertexLineReader" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "decodeValue",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "getLineTokens",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readEdges",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readGraphs",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readLabels",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readProperties",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertexID",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.writer.JsonWriter",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.writer.JsonWriter",
          "module" : "gradoop-core",
          "method" : "writeEdges",
          "parameters" : [ "org.codehaus.jettison.json.JSONObject", "java.lang.String", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.io.writer.JsonWriter",
          "module" : "gradoop-core",
          "method" : "writeGraphs",
          "parameters" : [ "org.codehaus.jettison.json.JSONObject", "org.gradoop.model.GraphElement" ]
        }, {
          "clazz" : "org.gradoop.io.writer.JsonWriter",
          "module" : "gradoop-core",
          "method" : "writeLabels",
          "parameters" : [ "org.codehaus.jettison.json.JSONObject", "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.io.writer.JsonWriter",
          "module" : "gradoop-core",
          "method" : "writeProperties",
          "parameters" : [ "org.codehaus.jettison.json.JSONObject", "org.gradoop.model.Attributed" ]
        }, {
          "clazz" : "org.gradoop.io.writer.JsonWriter",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.io.writer.JsonWriterTest",
          "module" : "gradoop-core",
          "method" : "writerTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getOtherID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabelCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabels",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getProperty",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyKeys",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        } ]
      },
      "gradoop-coreÂ§org.gradoop.model.impl.DefaultEdgeTest#createWithMissingIndexTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultEdgeTest",
          "module" : "gradoop-core",
          "method" : "createWithMissingIndexTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        } ]
      },
      "gradoop-coreÂ§org.gradoop.model.impl.DefaultEdgeTest#createWithMissingLabelTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultEdgeTest",
          "module" : "gradoop-core",
          "method" : "createWithMissingLabelTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        } ]
      },
      "gradoop-coreÂ§org.gradoop.model.impl.DefaultEdgeTest#createWithMissingOtherIDTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultEdgeTest",
          "module" : "gradoop-core",
          "method" : "createWithMissingOtherIDTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        } ]
      },
      "gradoop-coreÂ§org.gradoop.model.impl.DefaultEdgeTest#createWithOtherIDIndexTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getIndex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getOtherID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdgeTest",
          "module" : "gradoop-core",
          "method" : "createWithOtherIDIndexTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        } ]
      },
      "gradoop-coreÂ§org.gradoop.model.impl.DefaultEdgeTest#createWithOtherIDLabelIndexPropertiesTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getIndex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getOtherID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdgeTest",
          "module" : "gradoop-core",
          "method" : "createWithOtherIDLabelIndexPropertiesTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getProperty",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        } ]
      },
      "gradoop-coreÂ§org.gradoop.model.impl.DefaultEdgeTest#createWithOtherIDLabelIndexTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getIndex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getOtherID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdgeTest",
          "module" : "gradoop-core",
          "method" : "createWithOtherIDLabelIndexTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        } ]
      },
      "gradoop-coreÂ§org.gradoop.model.impl.DefaultEdgeTest#testCompareTo" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getIndex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getOtherID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdgeTest",
          "module" : "gradoop-core",
          "method" : "testCompareTo",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeComparator",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeComparator",
          "module" : "gradoop-core",
          "method" : "compare",
          "parameters" : [ "org.gradoop.model.Edge", "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        } ]
      },
      "gradoop-coreÂ§org.gradoop.model.impl.DefaultEdgeTest#testEquals" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "equals",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdgeTest",
          "module" : "gradoop-core",
          "method" : "testEquals",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        } ]
      },
      "gradoop-coreÂ§org.gradoop.model.impl.DefaultGraphTest#createDefaultGraphTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultGraph",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultGraph",
          "module" : "gradoop-core",
          "method" : "getVertexCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultGraph",
          "module" : "gradoop-core",
          "method" : "getVertices",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultGraphTest",
          "module" : "gradoop-core",
          "method" : "createDefaultGraphTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.GraphFactory",
          "module" : "gradoop-core",
          "method" : "checkGraphID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.GraphFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultGraph",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabelCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabels",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getProperty",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        } ]
      },
      "gradoop-coreÂ§org.gradoop.model.impl.DefaultGraphTest#createWithIDTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultGraph",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultGraphTest",
          "module" : "gradoop-core",
          "method" : "createWithIDTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.GraphFactory",
          "module" : "gradoop-core",
          "method" : "checkGraphID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.GraphFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultGraph",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.GraphFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultGraphWithID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        } ]
      },
      "gradoop-coreÂ§org.gradoop.model.impl.DefaultGraphTest#createWithMissingIDTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultGraphTest",
          "module" : "gradoop-core",
          "method" : "createWithMissingIDTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.GraphFactory",
          "module" : "gradoop-core",
          "method" : "checkGraphID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.GraphFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultGraph",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.GraphFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultGraphWithID",
          "parameters" : [ "java.lang.Long" ]
        } ]
      },
      "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest#createDefaultVertexTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "equals",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertexTest",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabelCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabels",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getProperty",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        } ]
      },
      "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest#createWithIDEdgesTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "equals",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getDegree",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingDegree",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingDegree",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertexTest",
          "module" : "gradoop-core",
          "method" : "createWithIDEdgesTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexWithEdges",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.lang.Iterable" ]
        } ]
      },
      "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest#createWithIDLabelsEdgesTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "equals",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getDegree",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingDegree",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingDegree",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertexTest",
          "module" : "gradoop-core",
          "method" : "createWithIDLabelsEdgesTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabelCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabels",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexWithLabels",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.lang.Iterable" ]
        } ]
      },
      "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest#createWithIDOutgoingEdgesTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "equals",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getDegree",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingDegree",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingDegree",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertexTest",
          "module" : "gradoop-core",
          "method" : "createWithIDOutgoingEdgesTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexWithEdges",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexWithOutgoingEdges",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable" ]
        } ]
      },
      "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest#createWithIDTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getDegree",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingDegree",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingDegree",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertexTest",
          "module" : "gradoop-core",
          "method" : "createWithIDTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabelCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexWithID",
          "parameters" : [ "java.lang.Long" ]
        } ]
      },
      "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest#createWithMissingIDTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.model.impl.DefaultVertexTest",
          "module" : "gradoop-core",
          "method" : "createWithMissingIDTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertexWithID",
          "parameters" : [ "java.lang.Long" ]
        } ]
      },
      "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest#propertyTypeTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.HBaseClusterTest",
          "module" : "gradoop-core",
          "method" : "createEmptyGraphStore",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.HBaseClusterTest",
          "module" : "gradoop-core",
          "method" : "openGraphStore",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabelCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabels",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getProperty",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyKeys",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "decodeValueFromBytes",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "encodeValueToBytes",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "getColumnKeysFromFamiliy",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result", "byte[]" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "readLabels",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "readProperties",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeLabels",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.MultiLabeled" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperties",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Attributed" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperty",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.String", "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "getRowKey",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result", "byte[]" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readGraphs",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readIncomingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readOutgoingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeGraphs",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.GraphElement" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeIncomingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeOutgoingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.apache.hadoop.hbase.client.HTable", "org.apache.hadoop.hbase.client.HTable", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createTablesIfNotExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteTablesIfExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreTest",
          "module" : "gradoop-core",
          "method" : "propertyTypeTest",
          "parameters" : [ ]
        } ]
      },
      "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest#writeCloseOpenReadTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createExtendedGraphVertices",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createVertices",
          "parameters" : [ "java.lang.String[]", "org.gradoop.io.reader.VertexLineReader" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "testEdge",
          "parameters" : [ "java.util.List", "java.lang.Long", "java.lang.String", "java.lang.Long", "int" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "testProperties",
          "parameters" : [ "org.gradoop.model.Attributed", "int" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "validateExtendedGraphVertices",
          "parameters" : [ "java.util.List" ]
        }, {
          "clazz" : "org.gradoop.HBaseClusterTest",
          "module" : "gradoop-core",
          "method" : "createEmptyGraphStore",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.HBaseClusterTest",
          "module" : "gradoop-core",
          "method" : "openGraphStore",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "decodeValue",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "getLineTokens",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readEdges",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readGraphs",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readLabels",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readProperties",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertexID",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "equals",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getIndex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getOtherID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultGraph",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultGraph",
          "module" : "gradoop-core",
          "method" : "getVertices",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultGraph",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.GraphFactory",
          "module" : "gradoop-core",
          "method" : "checkGraphID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.GraphFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultGraph",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabelCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabels",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getProperty",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyKeys",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "decodeValueFromBytes",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "decodeValueFromString",
          "parameters" : [ "byte", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "encodeValueToBytes",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "getColumnKeysFromFamiliy",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result", "byte[]" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "getType",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "readLabels",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "readProperties",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeLabels",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.MultiLabeled" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperties",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Attributed" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperty",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.String", "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "getRowKey",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "readGraph",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "readVertices",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "writeGraph",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Graph" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "writeVertices",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Graph" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgeIdentifier",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgePropertiesString",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "getRowKey",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readEdge",
          "parameters" : [ "byte[]", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result", "byte[]" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readGraphs",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readIncomingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readOutgoingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdge",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeGraphs",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.GraphElement" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeIncomingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeOutgoingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.apache.hadoop.hbase.client.HTable", "org.apache.hadoop.hbase.client.HTable", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "readGraph",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "writeGraph",
          "parameters" : [ "org.gradoop.model.Graph" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createTablesIfNotExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteTablesIfExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreTest",
          "module" : "gradoop-core",
          "method" : "createGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreTest",
          "module" : "gradoop-core",
          "method" : "validateGraphs",
          "parameters" : [ "org.gradoop.storage.GraphStore" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreTest",
          "module" : "gradoop-core",
          "method" : "validateVertices",
          "parameters" : [ "org.gradoop.storage.GraphStore" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreTest",
          "module" : "gradoop-core",
          "method" : "writeCloseOpenReadTest",
          "parameters" : [ ]
        } ]
      },
      "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest#writeFlushReadTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createExtendedGraphVertices",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createVertices",
          "parameters" : [ "java.lang.String[]", "org.gradoop.io.reader.VertexLineReader" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "testEdge",
          "parameters" : [ "java.util.List", "java.lang.Long", "java.lang.String", "java.lang.Long", "int" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "testProperties",
          "parameters" : [ "org.gradoop.model.Attributed", "int" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "validateExtendedGraphVertices",
          "parameters" : [ "java.util.List" ]
        }, {
          "clazz" : "org.gradoop.HBaseClusterTest",
          "module" : "gradoop-core",
          "method" : "createEmptyGraphStore",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "decodeValue",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "getLineTokens",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readEdges",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readGraphs",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readLabels",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readProperties",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertexID",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "equals",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getIndex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getOtherID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultGraph",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultGraph",
          "module" : "gradoop-core",
          "method" : "getVertices",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultGraph",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdgeWithLabel",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.GraphFactory",
          "module" : "gradoop-core",
          "method" : "checkGraphID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.GraphFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultGraph",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabelCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabels",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getProperty",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyKeys",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "decodeValueFromBytes",
          "parameters" : [ "byte[]" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "decodeValueFromString",
          "parameters" : [ "byte", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "encodeValueToBytes",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "getColumnKeysFromFamiliy",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result", "byte[]" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "getType",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "readLabels",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "readProperties",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeLabels",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.MultiLabeled" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperties",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Attributed" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperty",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.String", "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "getRowKey",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "readGraph",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "readVertices",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "writeGraph",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Graph" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "writeVertices",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Graph" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgeIdentifier",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgePropertiesString",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "getRowKey",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readEdge",
          "parameters" : [ "byte[]", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result", "byte[]" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readGraphs",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readIncomingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readOutgoingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "org.apache.hadoop.hbase.client.Result" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdge",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeGraphs",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.GraphElement" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeIncomingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeOutgoingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.apache.hadoop.hbase.client.HTable", "org.apache.hadoop.hbase.client.HTable", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "close",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "flush",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "readGraph",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "setAutoFlush",
          "parameters" : [ "boolean" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "writeGraph",
          "parameters" : [ "org.gradoop.model.Graph" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createTablesIfNotExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteTablesIfExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreTest",
          "module" : "gradoop-core",
          "method" : "createGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreTest",
          "module" : "gradoop-core",
          "method" : "validateGraphs",
          "parameters" : [ "org.gradoop.storage.GraphStore" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreTest",
          "module" : "gradoop-core",
          "method" : "validateVertices",
          "parameters" : [ "org.gradoop.storage.GraphStore" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreTest",
          "module" : "gradoop-core",
          "method" : "writeFlushReadTest",
          "parameters" : [ ]
        } ]
      },
      "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest#wrongPropertyTypeTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.HBaseClusterTest",
          "module" : "gradoop-core",
          "method" : "createEmptyGraphStore",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabelCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabels",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getProperty",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyKeys",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.exceptions.UnsupportedTypeException",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "encodeValueToBytes",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeLabels",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.MultiLabeled" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperties",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Attributed" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperty",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.String", "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "getRowKey",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.apache.hadoop.hbase.client.HTable", "org.apache.hadoop.hbase.client.HTable", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createTablesIfNotExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteTablesIfExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreTest",
          "module" : "gradoop-core",
          "method" : "wrongPropertyTypeTest",
          "parameters" : [ ]
        } ]
      },
      "gradoop-giraphÂ§org.gradoop.algorithms.LabelPropagationComputationTest#testBiPartitGraph" : {
        "entities" : [ {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputation",
          "module" : "gradoop-giraph",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputation",
          "module" : "gradoop-giraph",
          "method" : "compute",
          "parameters" : [ "org.apache.giraph.graph.Vertex", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputation",
          "module" : "gradoop-giraph",
          "method" : "getNewValue",
          "parameters" : [ "org.apache.giraph.graph.Vertex", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputationTest",
          "module" : "gradoop-giraph",
          "method" : "computeResults",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputationTest",
          "module" : "gradoop-giraph",
          "method" : "getBiPartiteGraph",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputationTest",
          "module" : "gradoop-giraph",
          "method" : "getConfiguration",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputationTest",
          "module" : "gradoop-giraph",
          "method" : "parseResults",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputationTest",
          "module" : "gradoop-giraph",
          "method" : "testBiPartitGraph",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputationTest",
          "module" : "gradoop-giraph",
          "method" : "validateBipartitGraphResult",
          "parameters" : [ "java.util.Map" ]
        } ]
      },
      "gradoop-giraphÂ§org.gradoop.algorithms.LabelPropagationComputationTest#testCompleteBiPartiteGraph" : {
        "entities" : [ {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputation",
          "module" : "gradoop-giraph",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputation",
          "module" : "gradoop-giraph",
          "method" : "compute",
          "parameters" : [ "org.apache.giraph.graph.Vertex", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputation",
          "module" : "gradoop-giraph",
          "method" : "getMostFrequent",
          "parameters" : [ "org.apache.giraph.graph.Vertex", "java.util.List" ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputation",
          "module" : "gradoop-giraph",
          "method" : "getNewValue",
          "parameters" : [ "org.apache.giraph.graph.Vertex", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputationTest",
          "module" : "gradoop-giraph",
          "method" : "computeResults",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputationTest",
          "module" : "gradoop-giraph",
          "method" : "getCompleteBiPartiteGraph",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputationTest",
          "module" : "gradoop-giraph",
          "method" : "getConfiguration",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputationTest",
          "module" : "gradoop-giraph",
          "method" : "parseResults",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputationTest",
          "module" : "gradoop-giraph",
          "method" : "testCompleteBiPartiteGraph",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputationTest",
          "module" : "gradoop-giraph",
          "method" : "validateCompleteBipartiteGraphResult",
          "parameters" : [ "java.util.Map" ]
        } ]
      },
      "gradoop-giraphÂ§org.gradoop.algorithms.LabelPropagationComputationTest#testConnectedGraph" : {
        "entities" : [ {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputation",
          "module" : "gradoop-giraph",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputation",
          "module" : "gradoop-giraph",
          "method" : "compute",
          "parameters" : [ "org.apache.giraph.graph.Vertex", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputation",
          "module" : "gradoop-giraph",
          "method" : "getMostFrequent",
          "parameters" : [ "org.apache.giraph.graph.Vertex", "java.util.List" ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputation",
          "module" : "gradoop-giraph",
          "method" : "getNewValue",
          "parameters" : [ "org.apache.giraph.graph.Vertex", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputationTest",
          "module" : "gradoop-giraph",
          "method" : "computeResults",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputationTest",
          "module" : "gradoop-giraph",
          "method" : "getConfiguration",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputationTest",
          "module" : "gradoop-giraph",
          "method" : "getConnectedGraph",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputationTest",
          "module" : "gradoop-giraph",
          "method" : "parseResults",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputationTest",
          "module" : "gradoop-giraph",
          "method" : "testConnectedGraph",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputationTest",
          "module" : "gradoop-giraph",
          "method" : "validateConnectedGraphResult",
          "parameters" : [ "java.util.Map" ]
        } ]
      },
      "gradoop-giraphÂ§org.gradoop.algorithms.LabelPropagationComputationTest#testDisconnectedGraph" : {
        "entities" : [ {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputation",
          "module" : "gradoop-giraph",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputation",
          "module" : "gradoop-giraph",
          "method" : "compute",
          "parameters" : [ "org.apache.giraph.graph.Vertex", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputation",
          "module" : "gradoop-giraph",
          "method" : "getMostFrequent",
          "parameters" : [ "org.apache.giraph.graph.Vertex", "java.util.List" ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputation",
          "module" : "gradoop-giraph",
          "method" : "getNewValue",
          "parameters" : [ "org.apache.giraph.graph.Vertex", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputationTest",
          "module" : "gradoop-giraph",
          "method" : "computeResults",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputationTest",
          "module" : "gradoop-giraph",
          "method" : "getConfiguration",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputationTest",
          "module" : "gradoop-giraph",
          "method" : "getDisconnectedGraph",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputationTest",
          "module" : "gradoop-giraph",
          "method" : "parseResults",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputationTest",
          "module" : "gradoop-giraph",
          "method" : "testDisconnectedGraph",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputationTest",
          "module" : "gradoop-giraph",
          "method" : "validateDisconnectedGraphResult",
          "parameters" : [ "java.util.Map" ]
        } ]
      },
      "gradoop-giraphÂ§org.gradoop.algorithms.LabelPropagationComputationTest#testLoopGraph" : {
        "entities" : [ {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputation",
          "module" : "gradoop-giraph",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputation",
          "module" : "gradoop-giraph",
          "method" : "compute",
          "parameters" : [ "org.apache.giraph.graph.Vertex", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputation",
          "module" : "gradoop-giraph",
          "method" : "getMostFrequent",
          "parameters" : [ "org.apache.giraph.graph.Vertex", "java.util.List" ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputation",
          "module" : "gradoop-giraph",
          "method" : "getNewValue",
          "parameters" : [ "org.apache.giraph.graph.Vertex", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputationTest",
          "module" : "gradoop-giraph",
          "method" : "computeResults",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputationTest",
          "module" : "gradoop-giraph",
          "method" : "getConfiguration",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputationTest",
          "module" : "gradoop-giraph",
          "method" : "getLoopGraph",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputationTest",
          "module" : "gradoop-giraph",
          "method" : "parseResults",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputationTest",
          "module" : "gradoop-giraph",
          "method" : "testLoopGraph",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.algorithms.LabelPropagationComputationTest",
          "module" : "gradoop-giraph",
          "method" : "validateLoopGraphResult",
          "parameters" : [ "java.util.Map" ]
        } ]
      },
      "gradoop-giraphÂ§org.gradoop.io.formats.EPGHBaseVertexFormatTest#vertexInputOutputTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createTestReader",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "getCallingMethod",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "getTempFile",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "getTempFile",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.HBaseClusterTest",
          "module" : "gradoop-core",
          "method" : "createEmptyGraphStore",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.AdjacencyListReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.gradoop.storage.GraphStore", "org.gradoop.io.reader.VertexLineReader" ]
        }, {
          "clazz" : "org.gradoop.io.reader.AdjacencyListReader",
          "module" : "gradoop-core",
          "method" : "read",
          "parameters" : [ "java.io.BufferedReader" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "decodeValue",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "getLineTokens",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readEdges",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readGraphs",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readLabels",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readProperties",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertexID",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "supportsVertexLists",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getIndex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getOtherID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabelCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabels",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getProperty",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyKeys",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "encodeValueToBytes",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "getType",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeLabels",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.MultiLabeled" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperties",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Attributed" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperty",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.String", "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgeIdentifier",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgePropertiesString",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "getRowKey",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdge",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeGraphs",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.GraphElement" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeIncomingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeOutgoingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.apache.hadoop.hbase.client.HTable", "org.apache.hadoop.hbase.client.HTable", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createTablesIfNotExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteTablesIfExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.GiraphClusterTest",
          "module" : "gradoop-giraph",
          "method" : "setupConfiguration",
          "parameters" : [ "org.apache.giraph.job.GiraphJob" ]
        }, {
          "clazz" : "org.gradoop.io.formats.EPGHBaseVertexFormatTest",
          "module" : "gradoop-giraph",
          "method" : "vertexInputOutputTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.formats.EPGHBaseVertexOutputFormat",
          "module" : "gradoop-giraph",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.formats.HBaseVertexOutputFormat",
          "module" : "gradoop-giraph",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.formats.HBaseVertexOutputFormat",
          "module" : "gradoop-giraph",
          "method" : "checkOutputSpecs",
          "parameters" : [ "org.apache.hadoop.mapreduce.JobContext" ]
        } ]
      },
      "gradoop-giraphÂ§org.gradoop.io.formats.SimpleHBaseVertexFormatTest#vertexInputOutputTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.GiraphClusterTest",
          "module" : "gradoop-giraph",
          "method" : "setupConfiguration",
          "parameters" : [ "org.apache.giraph.job.GiraphJob" ]
        }, {
          "clazz" : "org.gradoop.io.formats.HBaseVertexOutputFormat",
          "module" : "gradoop-giraph",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.formats.HBaseVertexOutputFormat",
          "module" : "gradoop-giraph",
          "method" : "checkOutputSpecs",
          "parameters" : [ "org.apache.hadoop.mapreduce.JobContext" ]
        }, {
          "clazz" : "org.gradoop.io.formats.SimpleHBaseVertexFormatTest",
          "module" : "gradoop-giraph",
          "method" : "createHBaseTestTable",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.formats.SimpleHBaseVertexFormatTest",
          "module" : "gradoop-giraph",
          "method" : "createTestData",
          "parameters" : [ "org.apache.hadoop.hbase.client.HTable" ]
        }, {
          "clazz" : "org.gradoop.io.formats.SimpleHBaseVertexFormatTest",
          "module" : "gradoop-giraph",
          "method" : "createTestVertex",
          "parameters" : [ "long", "long" ]
        }, {
          "clazz" : "org.gradoop.io.formats.SimpleHBaseVertexFormatTest",
          "module" : "gradoop-giraph",
          "method" : "vertexInputOutputTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.formats.SimpleHBaseVertexOutputFormat",
          "module" : "gradoop-giraph",
          "method" : "<init>",
          "parameters" : [ ]
        } ]
      },
      "gradoop-mapreduceÂ§org.gradoop.algorithms.AggregationTest#aggregateTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createTestReader",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "getCallingMethod",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "getTempFile",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "getTempFile",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.HBaseClusterTest",
          "module" : "gradoop-core",
          "method" : "createEmptyGraphStore",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.AdjacencyListReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.gradoop.storage.GraphStore", "org.gradoop.io.reader.VertexLineReader" ]
        }, {
          "clazz" : "org.gradoop.io.reader.AdjacencyListReader",
          "module" : "gradoop-core",
          "method" : "read",
          "parameters" : [ "java.io.BufferedReader" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "decodeValue",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "getLineTokens",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readEdges",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readGraphs",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readLabels",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readProperties",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertexID",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "supportsVertexLists",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getIndex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getOtherID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabelCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabels",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getProperty",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyKeys",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "encodeValueToBytes",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "getType",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeLabels",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.MultiLabeled" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperties",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Attributed" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperty",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.String", "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "getRowKey",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgeIdentifier",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgePropertiesString",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "getRowKey",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdge",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeGraphs",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.GraphElement" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeIncomingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeOutgoingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.apache.hadoop.hbase.client.HTable", "org.apache.hadoop.hbase.client.HTable", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "readGraph",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createTablesIfNotExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteTablesIfExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.algorithms.AggregationTest",
          "module" : "gradoop-mapreduce",
          "method" : "aggregateTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.algorithms.AggregationTest",
          "module" : "gradoop-mapreduce",
          "method" : "validateGraph",
          "parameters" : [ "org.gradoop.model.Graph", "int", "int" ]
        }, {
          "clazz" : "org.gradoop.algorithms.AggregationTest",
          "module" : "gradoop-mapreduce",
          "method" : "validateGraphs",
          "parameters" : [ "org.gradoop.storage.GraphStore" ]
        } ]
      },
      "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectAndAggregateTest#selectAndAggregateTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createTestReader",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "getCallingMethod",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "getTempFile",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "getTempFile",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.HBaseClusterTest",
          "module" : "gradoop-core",
          "method" : "createEmptyGraphStore",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.AdjacencyListReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.gradoop.storage.GraphStore", "org.gradoop.io.reader.VertexLineReader" ]
        }, {
          "clazz" : "org.gradoop.io.reader.AdjacencyListReader",
          "module" : "gradoop-core",
          "method" : "read",
          "parameters" : [ "java.io.BufferedReader" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "decodeValue",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "getLineTokens",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readEdges",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readGraphs",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readLabels",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readProperties",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertexID",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "supportsVertexLists",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabelCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabels",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getProperty",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyKeys",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "encodeValueToBytes",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeLabels",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.MultiLabeled" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperties",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Attributed" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperty",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.String", "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "getRowKey",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "getRowKey",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeGraphs",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.GraphElement" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeIncomingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeOutgoingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.apache.hadoop.hbase.client.HTable", "org.apache.hadoop.hbase.client.HTable", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "readGraph",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createTablesIfNotExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteTablesIfExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.algorithms.SelectAndAggregateTest",
          "module" : "gradoop-mapreduce",
          "method" : "selectAndAggregateTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.algorithms.SelectAndAggregateTest",
          "module" : "gradoop-mapreduce",
          "method" : "validateGraph",
          "parameters" : [ "org.gradoop.model.Graph", "double" ]
        }, {
          "clazz" : "org.gradoop.algorithms.SelectAndAggregateTest",
          "module" : "gradoop-mapreduce",
          "method" : "validateGraphs",
          "parameters" : [ "org.gradoop.storage.GraphStore" ]
        } ]
      },
      "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectionTest#selectionTest" : {
        "entities" : [ {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "createTestReader",
          "parameters" : [ "java.lang.String[]" ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "getCallingMethod",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "getTempFile",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.GradoopTest",
          "module" : "gradoop-core",
          "method" : "getTempFile",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.HBaseClusterTest",
          "module" : "gradoop-core",
          "method" : "createEmptyGraphStore",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.AdjacencyListReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.gradoop.storage.GraphStore", "org.gradoop.io.reader.VertexLineReader" ]
        }, {
          "clazz" : "org.gradoop.io.reader.AdjacencyListReader",
          "module" : "gradoop-core",
          "method" : "read",
          "parameters" : [ "java.io.BufferedReader" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "decodeValue",
          "parameters" : [ "java.lang.String", "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "getLineTokens",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readEdges",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readGraphs",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readLabels",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readProperties",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertex",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "readVertexID",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.io.reader.EPGVertexReader",
          "module" : "gradoop-core",
          "method" : "supportsVertexLists",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getIndex",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "getOtherID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultEdge",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getGraphs",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getIncomingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "getOutgoingEdges",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "initGraphs",
          "parameters" : [ "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.model.impl.DefaultVertex",
          "module" : "gradoop-core",
          "method" : "toString",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkIndex",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "checkLabel",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.EdgeFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultEdge",
          "parameters" : [ "java.lang.Long", "java.lang.String", "java.lang.Long", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getID",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabelCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.MultiLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabels",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getProperty",
          "parameters" : [ "java.lang.String" ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyCount",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.PropertyContainer",
          "module" : "gradoop-core",
          "method" : "getPropertyKeys",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "java.lang.String", "java.util.Map" ]
        }, {
          "clazz" : "org.gradoop.model.impl.SingleLabeledPropertyContainer",
          "module" : "gradoop-core",
          "method" : "getLabel",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "checkVertexID",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.model.impl.VertexFactory",
          "module" : "gradoop-core",
          "method" : "createDefaultVertex",
          "parameters" : [ "java.lang.Long", "java.lang.Iterable", "java.util.Map", "java.lang.Iterable", "java.lang.Iterable", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "encodeValueToBytes",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "getType",
          "parameters" : [ "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeLabels",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.MultiLabeled" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperties",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Attributed" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.BasicHandler",
          "module" : "gradoop-core",
          "method" : "writeProperty",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.String", "java.lang.Object" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGGraphHandler",
          "module" : "gradoop-core",
          "method" : "getRowKey",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgeIdentifier",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createEdgePropertiesString",
          "parameters" : [ "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "createTable",
          "parameters" : [ "org.apache.hadoop.hbase.client.HBaseAdmin", "org.apache.hadoop.hbase.HTableDescriptor" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "getRowKey",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdge",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "org.gradoop.model.Edge" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "byte[]", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeGraphs",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.GraphElement" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeIncomingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeOutgoingEdges",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "java.lang.Iterable" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.EPGVertexHandler",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.apache.hadoop.hbase.client.Put", "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "<init>",
          "parameters" : [ "org.apache.hadoop.hbase.client.HTable", "org.apache.hadoop.hbase.client.HTable", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "readGraph",
          "parameters" : [ "java.lang.Long" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStore",
          "module" : "gradoop-core",
          "method" : "writeVertex",
          "parameters" : [ "org.gradoop.model.Vertex" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "createTablesIfNotExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration", "org.gradoop.storage.hbase.VertexHandler", "org.gradoop.storage.hbase.GraphHandler" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteGraphStore",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.storage.hbase.HBaseGraphStoreFactory",
          "module" : "gradoop-core",
          "method" : "deleteTablesIfExists",
          "parameters" : [ "org.apache.hadoop.conf.Configuration" ]
        }, {
          "clazz" : "org.gradoop.algorithms.SelectionTest",
          "module" : "gradoop-mapreduce",
          "method" : "selectionTest",
          "parameters" : [ ]
        }, {
          "clazz" : "org.gradoop.algorithms.SelectionTest",
          "module" : "gradoop-mapreduce",
          "method" : "validateGraph",
          "parameters" : [ "org.gradoop.model.Graph", "boolean" ]
        }, {
          "clazz" : "org.gradoop.algorithms.SelectionTest",
          "module" : "gradoop-mapreduce",
          "method" : "validateGraphs",
          "parameters" : [ "org.gradoop.storage.GraphStore" ]
        } ]
      }
    }
  },
  "commits" : {
    "bde56c2abc9485c8deec1a06d840ea4e14249a90" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "553458a9a08bb522283b19464f76ca91713bc19b",
      "changedClazzes" : {
        "gradoop-coreÂ§org.gradoop.GradoopTest" : {
          "testcases" : {
            "gradoop-biiigÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest" : [ "testBulkWriteDriver" ],
            "gradoop-coreÂ§org.gradoop.io.reader.AdjacencyListReaderTest" : [ "writeReadExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.BulkLoadTest" : [ "bulkLoadTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.EPGVertexReaderTest" : [ "readExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.JsonReaderTest" : [ "testReader" ],
            "gradoop-coreÂ§org.gradoop.io.reader.SimpleVertexReaderTest" : [ "readBasicGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.BulkWriteTest" : [ "bulkWriteSimpleGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.JsonWriterTest" : [ "writerTest" ],
            "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : [ "writeCloseOpenReadTest", "writeFlushReadTest" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.EPGHBaseVertexFormatTest" : [ "vertexInputOutputTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.AggregationTest" : [ "aggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectAndAggregateTest" : [ "selectAndAggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectionTest" : [ "selectionTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.SimpleVertexReader#readVertex(java.lang.String)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest" : [ "testBulkWriteDriver" ],
            "gradoop-coreÂ§org.gradoop.io.reader.SimpleVertexReaderTest" : [ "readBasicGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.BulkWriteTest" : [ "bulkWriteSimpleGraphTest" ]
          }
        }
      }
    },
    "1decbef07273217fdf80d332b7dee87504a119fc" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "bde56c2abc9485c8deec1a06d840ea4e14249a90",
      "changedClazzes" : {
        "gradoop-coreÂ§org.gradoop.GradoopTest" : {
          "testcases" : {
            "gradoop-biiigÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest" : [ "testBulkWriteDriver" ],
            "gradoop-coreÂ§org.gradoop.io.reader.AdjacencyListReaderTest" : [ "writeReadExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.BulkLoadTest" : [ "bulkLoadTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.EPGVertexReaderTest" : [ "readExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.JsonReaderTest" : [ "testReader" ],
            "gradoop-coreÂ§org.gradoop.io.reader.SimpleVertexReaderTest" : [ "readBasicGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.BulkWriteTest" : [ "bulkWriteSimpleGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.JsonWriterTest" : [ "writerTest" ],
            "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : [ "writeCloseOpenReadTest", "writeFlushReadTest" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.EPGHBaseVertexFormatTest" : [ "vertexInputOutputTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.AggregationTest" : [ "aggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectAndAggregateTest" : [ "selectAndAggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectionTest" : [ "selectionTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.SimpleVertexReaderTest" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.SimpleVertexReaderTest" : [ "readBasicGraphTest" ]
          }
        }
      }
    },
    "5fe25a1326e0e36e7069c5d8c6bf3500f6bcc4d0" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "1decbef07273217fdf80d332b7dee87504a119fc",
      "changedClazzes" : {
        "gradoop-biiigÂ§org.gradoop.biiig.examples.BTGAnalysisDriverTest" : {
          "testcases" : {
            "gradoop-biiigÂ§org.gradoop.biiig.examples.BTGAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-biiigÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : {
          "testcases" : {
            "gradoop-biiigÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest", "readFromJsonTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.GradoopClusterTest" : { },
        "gradoop-coreÂ§org.gradoop.MapReduceClusterTest" : { },
        "gradoop-coreÂ§org.gradoop.drivers.BulkLoadDriverTest" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkLoadDriverTest" : [ "testBulkLoadDriver" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest" : [ "testBulkWriteDriver" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.AdjacencyListReaderTest" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.AdjacencyListReaderTest" : [ "writeReadExtendedGraphTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.BulkLoadTest" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.BulkLoadTest" : [ "bulkLoadTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.writer.BulkWriteTest" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.writer.BulkWriteTest" : [ "bulkWriteSimpleGraphTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : [ "propertyTypeTest", "writeCloseOpenReadTest", "writeFlushReadTest", "wrongPropertyTypeTest" ]
          }
        },
        "gradoop-mapreduceÂ§org.gradoop.algorithms.AggregationTest" : {
          "testcases" : {
            "gradoop-mapreduceÂ§org.gradoop.algorithms.AggregationTest" : [ "aggregateTest" ]
          }
        },
        "gradoop-mapreduceÂ§org.gradoop.algorithms.AggregationTest$AggregateTableMapper" : { },
        "gradoop-mapreduceÂ§org.gradoop.algorithms.AggregationTest$AggregateTableReducer" : { },
        "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectAndAggregateTest" : {
          "testcases" : {
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectAndAggregateTest" : [ "selectAndAggregateTest" ]
          }
        },
        "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectAndAggregateTest$TestPairAggregator" : { },
        "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectAndAggregateTest$TestPredicate" : { },
        "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectAndAggregateTest$TestVertexAggregate" : { },
        "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectionTest" : {
          "testcases" : {
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectionTest" : [ "selectionTest" ]
          }
        },
        "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectionTest$SelectionTableMapper" : { },
        "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectionTest$SelectionTableReducer" : { }
      }
    },
    "ec3c117a7fbef0ca5b14e499a4b9b46323eccda1" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5fe25a1326e0e36e7069c5d8c6bf3500f6bcc4d0",
      "changedClazzes" : { }
    },
    "95e5d6cae2c3051b7327dd3b1e0869d9f063b730" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ec3c117a7fbef0ca5b14e499a4b9b46323eccda1",
      "changedClazzes" : { }
    },
    "6510ae0618c3136d5aef5643459b74903ecdc4a5" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "95e5d6cae2c3051b7327dd3b1e0869d9f063b730",
      "changedClazzes" : {
        "gradoop-biiigÂ§org.gradoop.biiig.examples.BTGAnalysisDriver#run(org.gradoop.biiig.examples.String[])" : { },
        "gradoop-coreÂ§org.gradoop.GradoopClusterTest#createEmptyGraphStore" : {
          "testcases" : {
            "gradoop-biiigÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ],
            "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest" : [ "testBulkWriteDriver" ],
            "gradoop-coreÂ§org.gradoop.io.reader.AdjacencyListReaderTest" : [ "writeReadExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.BulkLoadTest" : [ "bulkLoadTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.BulkWriteTest" : [ "bulkWriteSimpleGraphTest" ],
            "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : [ "propertyTypeTest", "writeCloseOpenReadTest", "writeFlushReadTest", "wrongPropertyTypeTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.AggregationTest" : [ "aggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectAndAggregateTest" : [ "selectAndAggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectionTest" : [ "selectionTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.GradoopClusterTest#openGraphStore" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : [ "propertyTypeTest", "writeCloseOpenReadTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.drivers.BulkLoadDriver#createGraphStore(org.apache.hadoop.conf.Configuration,boolean)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkLoadDriverTest" : [ "testBulkLoadDriver" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreFactory" : {
          "testcases" : {
            "gradoop-biiigÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-biiigÂ§org.gradoop.biiig.examples.BTGAnalysisDriverTest" : [ "driverTest" ],
            "gradoop-biiigÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ],
            "gradoop-coreÂ§org.gradoop.drivers.BulkLoadDriverTest" : [ "testBulkLoadDriver" ],
            "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest" : [ "testBulkWriteDriver" ],
            "gradoop-coreÂ§org.gradoop.io.reader.AdjacencyListReaderTest" : [ "writeReadExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.BulkLoadTest" : [ "bulkLoadTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.BulkWriteTest" : [ "bulkWriteSimpleGraphTest" ],
            "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : [ "propertyTypeTest", "writeCloseOpenReadTest", "writeFlushReadTest", "wrongPropertyTypeTest" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.EPGHBaseVertexFormatTest" : [ "vertexInputOutputTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.AggregationTest" : [ "aggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectAndAggregateTest" : [ "selectAndAggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectionTest" : [ "selectionTest" ]
          }
        }
      }
    },
    "3579f2037fbfbb91ce94bb36f49738356f10df60" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6510ae0618c3136d5aef5643459b74903ecdc4a5",
      "changedClazzes" : {
        "gradoop-coreÂ§org.gradoop.GradoopClusterTest#createEmptyGraphStore" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.GradoopTest#createTestReader(java.lang.String[])" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.GradoopTest#getCallingMethod" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.GradoopTest#getTempFile" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.GradoopTest#getTempFile(java.lang.String)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.AdjacencyListReader#<init>(org.gradoop.storage.GraphStore,org.gradoop.io.reader.VertexLineReader)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.AdjacencyListReader#read(java.io.BufferedReader)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.SingleVertexReader#<init>" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.SingleVertexReader#supportsVertexLists" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultEdge#<init>(java.lang.Long,java.lang.String,java.lang.Long,java.util.Map)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultEdge#getIndex" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultEdge#getOtherID" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultEdge#toString" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#<init>(java.lang.Long,java.lang.Iterable,java.util.Map,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#getGraphs" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#getIncomingEdges" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#getOutgoingEdges" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#initGraphs(java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#toString" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.EdgeFactory#checkID(java.lang.Long)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.EdgeFactory#checkIndex(java.lang.Long)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.EdgeFactory#checkLabel(java.lang.String)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.EdgeFactory#createDefaultEdge(java.lang.Long,java.lang.Long)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.EdgeFactory#createDefaultEdge(java.lang.Long,java.lang.String,java.lang.Long,java.util.Map)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.EdgeFactory#createDefaultEdgeWithLabel(java.lang.Long,java.lang.String,java.lang.Long)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.MultiLabeledPropertyContainer#<init>(java.lang.Long,java.lang.Iterable,java.util.Map)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.MultiLabeledPropertyContainer#getID" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.MultiLabeledPropertyContainer#getLabelCount" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.MultiLabeledPropertyContainer#getLabels" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.PropertyContainer#<init>(java.util.Map)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.PropertyContainer#getProperty(java.lang.String)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.PropertyContainer#getPropertyCount" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.PropertyContainer#getPropertyKeys" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.SingleLabeledPropertyContainer#<init>(java.lang.String,java.util.Map)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.SingleLabeledPropertyContainer#getLabel" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.VertexFactory#checkVertexID(java.lang.Long)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.VertexFactory#createDefaultVertex(java.lang.Long,java.lang.Iterable,java.util.Map,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.VertexFactory#createDefaultVertexWithProperties(java.lang.Long,java.util.Map,java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.BasicHandler#<init>" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.BasicHandler#encodeValueToBytes(java.lang.Object)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.BasicHandler#writeLabels(org.apache.hadoop.hbase.client.Put,org.gradoop.model.MultiLabeled)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.BasicHandler#writeProperties(org.apache.hadoop.hbase.client.Put,org.gradoop.model.Attributed)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.BasicHandler#writeProperty(org.apache.hadoop.hbase.client.Put,java.lang.String,java.lang.Object)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGGraphHandler#<init>" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGGraphHandler#createTable(org.apache.hadoop.hbase.client.HBaseAdmin,org.apache.hadoop.hbase.HTableDescriptor)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#<init>" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#createEdgeIdentifier(org.gradoop.model.Edge)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#createEdgePropertiesString(org.gradoop.model.Edge)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#createTable(org.apache.hadoop.hbase.client.HBaseAdmin,org.apache.hadoop.hbase.HTableDescriptor)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#getRowKey(java.lang.Long)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#writeEdge(org.apache.hadoop.hbase.client.Put,byte[],org.gradoop.model.Edge)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#writeEdges(org.apache.hadoop.hbase.client.Put,byte[],java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#writeGraphs(org.apache.hadoop.hbase.client.Put,org.gradoop.model.GraphElement)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#writeIncomingEdges(org.apache.hadoop.hbase.client.Put,java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#writeOutgoingEdges(org.apache.hadoop.hbase.client.Put,java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#writeVertex(org.apache.hadoop.hbase.client.Put,org.gradoop.model.Vertex)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStore#<init>(org.apache.hadoop.hbase.client.HTable,org.apache.hadoop.hbase.client.HTable,org.gradoop.storage.hbase.VertexHandler,org.gradoop.storage.hbase.GraphHandler)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStore#writeVertex(org.gradoop.model.Vertex)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreFactory#createOrOpenGraphStore(org.apache.hadoop.conf.Configuration,org.gradoop.storage.hbase.VertexHandler,org.gradoop.storage.hbase.GraphHandler)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreFactory#createOrOpenGraphStore(org.apache.hadoop.conf.Configuration,org.gradoop.storage.hbase.VertexHandler,org.gradoop.storage.hbase.GraphHandler,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreFactory#createTablesIfNotExists(org.apache.hadoop.conf.Configuration,org.gradoop.storage.hbase.VertexHandler,org.gradoop.storage.hbase.GraphHandler,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreFactory#deleteGraphStore(org.apache.hadoop.conf.Configuration)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreFactory#deleteGraphStore(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreFactory#deleteTablesIfExists(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.GiraphClusterTest#setupConfiguration(org.apache.giraph.job.GiraphJob)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputation" : { },
        "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputation#<init>" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputation#compute(org.apache.giraph.graph.Vertex,java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputation#doMigrate(int)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputation#getDesiredPartition(org.apache.giraph.graph.Vertex,java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputation#getPartitionDemand(int)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputation#getPartitionFrequencies(java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputation#getPartitionLoad(int)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputation#getPartitionWeights(int[],int)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputation#getTotalCapacity" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputation#initialize(org.apache.giraph.graph.GraphState,org.apache.giraph.comm.WorkerClientRequestProcessor,org.apache.giraph.graph.GraphTaskManager,org.apache.giraph.worker.WorkerGlobalCommUsage,org.apache.giraph.worker.WorkerContext)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputation#migrateVertex(org.apache.giraph.graph.Vertex,int)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputation#notifyAggregator(java.lang.String,org.apache.hadoop.io.IntWritable)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputation#setVertexStartValue(org.apache.giraph.graph.Vertex)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest#computeResults(java.lang.String[],int,int,float,int)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest#getConfiguration" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest#parseResults(java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest#testSmallConnectedGraph" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest#validateSmallConnectedGraphResult(java.util.Map)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningMasterComputation" : { },
        "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningMasterComputation#<init>" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningMasterComputation#compute" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningMasterComputation#initialize" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest#compute" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest#testBiPartiteGraph" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest#testConnectedGraph" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest$PartitioningLineReader#<init>" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest$PartitioningLineReader#readVertex(java.lang.String)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.LabelPropagationComputation" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.LabelPropagationComputationTest" : [ "testBiPartitGraph", "testCompleteBiPartiteGraph", "testConnectedGraph", "testDisconnectedGraph", "testLoopGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.LabelPropagationComputationTest" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.LabelPropagationComputationTest" : [ "testBiPartitGraph", "testCompleteBiPartiteGraph", "testConnectedGraph", "testDisconnectedGraph", "testLoopGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.PartitioningComputationTestHelper" : { },
        "gradoop-giraphÂ§org.gradoop.algorithms.PartitioningComputationTestHelper#getBiPartiteGraph" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.PartitioningComputationTestHelper#getConnectedGraph" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.PartitioningComputationTestHelper#getKwaySmallConnectedGraph" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.PartitioningVertex" : { },
        "gradoop-giraphÂ§org.gradoop.io.PartitioningVertex#<init>" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.PartitioningVertex#addToPartitionHistory(int)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.PartitioningVertex#getCurrentPartition" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.PartitioningVertex#getDesiredPartition" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.PartitioningVertex#getPartitionHistoryCount" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.PartitioningVertex#initList" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.PartitioningVertex#readFields(java.io.DataInput)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.PartitioningVertex#setCurrentPartition(org.apache.hadoop.io.IntWritable)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.PartitioningVertex#setDesiredPartition(org.apache.hadoop.io.IntWritable)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.PartitioningVertex#write(java.io.DataOutput)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.formats.AdaptiveRepartitioningInputFormat" : { },
        "gradoop-giraphÂ§org.gradoop.io.formats.AdaptiveRepartitioningInputFormat#<init>" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.formats.AdaptiveRepartitioningInputFormat#createVertexReader(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.formats.AdaptiveRepartitioningInputFormat$TwoValueVertexReader#<init>(org.gradoop.io.formats.AdaptiveRepartitioningInputFormat)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.formats.AdaptiveRepartitioningInputFormat$TwoValueVertexReader#getEdges(java.lang.String[])" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.formats.AdaptiveRepartitioningInputFormat$TwoValueVertexReader#getId(java.lang.String[])" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.formats.AdaptiveRepartitioningInputFormat$TwoValueVertexReader#getValue(java.lang.String[])" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.formats.AdaptiveRepartitioningInputFormat$TwoValueVertexReader#initialize(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.formats.AdaptiveRepartitioningInputFormat$TwoValueVertexReader#preprocessLine(org.apache.hadoop.io.Text)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.formats.AdaptiveRepartitioningOutputFormat" : { },
        "gradoop-giraphÂ§org.gradoop.io.formats.AdaptiveRepartitioningOutputFormat#<init>" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.formats.AdaptiveRepartitioningOutputFormat#createVertexWriter(org.apache.hadoop.mapreduce.TaskAttemptContext)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.formats.AdaptiveRepartitioningOutputFormat$AdaptiveRepartitioningTextVertexLineWriter#<init>(org.gradoop.io.formats.AdaptiveRepartitioningOutputFormat)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.formats.AdaptiveRepartitioningOutputFormat$AdaptiveRepartitioningTextVertexLineWriter#convertVertexToLine(org.apache.giraph.graph.Vertex)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.formats.EPGIdWithValueVertexOutputFormat" : { },
        "gradoop-giraphÂ§org.gradoop.io.formats.EPGIdWithValueVertexOutputFormat#<init>" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.formats.EPGLongLongNullVertexInputFormat" : { },
        "gradoop-giraphÂ§org.gradoop.io.formats.HBaseVertexOutputFormat#<init>" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.formats.HBaseVertexOutputFormat#checkOutputSpecs(org.apache.hadoop.mapreduce.JobContext)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest#computeResults(java.lang.String[])" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest#getConfiguration" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest#getSmallConnectedGraph" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest#parseResults(java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest#testSmallConnectedGraph" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest$GetLastValueComputation#<init>" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest$GetLastValueComputation#compute(org.apache.giraph.graph.Vertex,java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.package-info" : { }
      }
    },
    "1b588140947f8956889353729ab732e00424bd43" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3579f2037fbfbb91ce94bb36f49738356f10df60",
      "changedClazzes" : {
        "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputation" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.PartitioningVertex" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.formats.AdaptiveRepartitioningOutputFormat" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.formats.AdaptiveRepartitioningOutputFormat$AdaptiveRepartitioningTextVertexLineWriter" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest" : [ "testSmallConnectedGraph" ]
          }
        }
      }
    },
    "f3ebe3b0cd79fe24abefcce117dca224ba594df8" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "1b588140947f8956889353729ab732e00424bd43",
      "changedClazzes" : {
        "gradoop-giraphÂ§org.gradoop.io.formats.AdaptiveRepartitioningOutputFormat#createVertexWriter(org.apache.hadoop.mapreduce.TaskAttemptContext)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.PartitioningVertexTest" : [ "testSmallConnectedGraph" ]
          }
        }
      }
    },
    "4e88f35deb8a47f4ca8c4b42c527481ed5524c6e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f3ebe3b0cd79fe24abefcce117dca224ba594df8",
      "changedClazzes" : {
        "gradoop-coreÂ§org.gradoop.GradoopClusterTest#copyFromLocal(java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.rdf.examples.RDFAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.GradoopClusterTest#createEmptyGraphStore" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.GradoopTest#createTestReader(java.lang.String[])" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.GradoopTest#getCallingMethod" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.GradoopTest#getTempFile" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.GradoopTest#getTempFile(java.lang.String)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.formats.EPGVertexValueWritable" : { },
        "gradoop-coreÂ§org.gradoop.io.reader.AdjacencyListReader#<init>(org.gradoop.storage.GraphStore,org.gradoop.io.reader.VertexLineReader)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.AdjacencyListReader#read(java.io.BufferedReader)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.EPGVertexReader#<init>" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.EPGVertexReader#decodeValue(java.lang.String,java.lang.String)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.EPGVertexReader#getLineTokens(java.lang.String)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.EPGVertexReader#readEdges(java.lang.String)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.EPGVertexReader#readGraphs(java.lang.String)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.EPGVertexReader#readLabels(java.lang.String)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.EPGVertexReader#readProperties(java.lang.String)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.EPGVertexReader#readVertex(java.lang.String)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.EPGVertexReader#readVertexID(java.lang.String)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.EPGVertexReader#supportsVertexLists" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.RDFReader" : { },
        "gradoop-coreÂ§org.gradoop.io.reader.RDFReader#<init>" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.RDFReader#getDatatype(java.lang.String)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.RDFReader#getLiteralValue(java.lang.String)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.RDFReader#getPlainResource(java.lang.String)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.RDFReader#getTokens(java.lang.String)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.RDFReader#isNTResource(java.lang.String)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.RDFReader#readVertexList(java.lang.String)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.RDFReader#simpleValidate(java.lang.String)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "countRDFNTriplesTest", "loadRDFToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest#checkLabel(org.gradoop.model.Vertex,java.lang.String)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest#checkSimpleRDFNTripleInputTest" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest#countGeneratedVertices" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "countGeneratedVertices" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest#countRDFNTriplesTest" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "countRDFNTriplesTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest#createVerticesFromRDF" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest#loadRDFToHBaseTest" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest#validateRDFGraph(org.gradoop.storage.GraphStore)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest#validateVertex(org.gradoop.model.Vertex,int,int,int,int)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.GraphElement" : { },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultEdge#<init>(java.lang.Long,java.lang.String,java.lang.Long,java.util.Map)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultEdge#getIndex" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultEdge#getOtherID" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultEdge#toString" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest" : [ "testBulkWriteDriver" ],
            "gradoop-coreÂ§org.gradoop.io.reader.AdjacencyListReaderTest" : [ "writeReadExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.EPGVertexReaderTest" : [ "readExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.JsonReaderTest" : [ "testReader" ],
            "gradoop-coreÂ§org.gradoop.io.reader.SimpleVertexReaderTest" : [ "readBasicGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.BulkWriteTest" : [ "bulkWriteSimpleGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.JsonWriterTest" : [ "writerTest" ],
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest" : [ "createDefaultVertexTest", "createWithIDEdgesTest", "createWithIDLabelsEdgesTest", "createWithIDOutgoingEdgesTest", "createWithIDTest" ],
            "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : [ "propertyTypeTest", "writeCloseOpenReadTest", "writeFlushReadTest", "wrongPropertyTypeTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testBiPartiteGraph", "testConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.EPGHBaseVertexFormatTest" : [ "vertexInputOutputTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.AggregationTest" : [ "aggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectAndAggregateTest" : [ "selectAndAggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectionTest" : [ "selectionTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#<init>(java.lang.Long,java.lang.Iterable,java.util.Map,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#getGraphs" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#getIncomingEdges" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#getOutgoingDegree" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#getOutgoingEdges" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#initGraphs(java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#toString" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest" : [ "createDefaultVertexTest", "createWithIDEdgesTest", "createWithIDLabelsEdgesTest", "createWithIDOutgoingEdgesTest", "createWithIDTest", "createWithMissingIDTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.EdgeFactory#checkID(java.lang.Long)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.EdgeFactory#checkIndex(java.lang.Long)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.EdgeFactory#checkLabel(java.lang.String)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.EdgeFactory#createDefaultEdge(java.lang.Long,java.lang.String,java.lang.Long,java.util.Map)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.EdgeFactory#createDefaultEdgeWithLabel(java.lang.Long,java.lang.String,java.lang.Long)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.MultiLabeledPropertyContainer#<init>(java.lang.Long,java.lang.Iterable,java.util.Map)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.MultiLabeledPropertyContainer#addLabel(java.lang.String)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.MultiLabeledPropertyContainer#getID" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.MultiLabeledPropertyContainer#getLabelCount" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.MultiLabeledPropertyContainer#getLabels" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.PropertyContainer#<init>(java.util.Map)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.PropertyContainer#addProperty(java.lang.String,java.lang.Object)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.PropertyContainer#getProperty(java.lang.String)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.PropertyContainer#getPropertyCount" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.PropertyContainer#getPropertyKeys" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.SingleLabeledPropertyContainer#<init>(java.lang.String,java.util.Map)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.SingleLabeledPropertyContainer#getLabel" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.VertexFactory#checkVertexID(java.lang.Long)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.VertexFactory#createDefaultVertex(java.lang.Long,java.lang.Iterable,java.util.Map,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.VertexFactory#createDefaultVertexWithEdges(java.lang.Long,java.lang.Iterable,java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.VertexFactory#createDefaultVertexWithLabels(java.lang.Long,java.lang.Iterable,java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.BasicHandler#<init>" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-examplesÂ§org.gradoop.rdf.examples.RDFAnalysisDriverTest" : [ "driverTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.BasicHandler#decodeValueFromBytes(byte[])" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.BasicHandler#decodeValueFromString(byte,java.lang.String)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.BasicHandler#encodeValueToBytes(java.lang.Object)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.BasicHandler#getColumnKeysFromFamiliy(org.apache.hadoop.hbase.client.Result,byte[])" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.BasicHandler#getType(java.lang.Object)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.BasicHandler#readLabels(org.apache.hadoop.hbase.client.Result)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.BasicHandler#readProperties(org.apache.hadoop.hbase.client.Result)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.BasicHandler#writeLabels(org.apache.hadoop.hbase.client.Put,org.gradoop.model.MultiLabeled)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.BasicHandler#writeProperties(org.apache.hadoop.hbase.client.Put,org.gradoop.model.Attributed)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.BasicHandler#writeProperty(org.apache.hadoop.hbase.client.Put,java.lang.String,java.lang.Object)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGGraphHandler#<init>" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-examplesÂ§org.gradoop.rdf.examples.RDFAnalysisDriverTest" : [ "driverTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGGraphHandler#createTable(org.apache.hadoop.hbase.client.HBaseAdmin,org.apache.hadoop.hbase.HTableDescriptor)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-examplesÂ§org.gradoop.rdf.examples.RDFAnalysisDriverTest" : [ "driverTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#<init>" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-examplesÂ§org.gradoop.rdf.examples.RDFAnalysisDriverTest" : [ "driverTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#createEdgeIdentifier(org.gradoop.model.Edge)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#createEdgePropertiesString(org.gradoop.model.Edge)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#createTable(org.apache.hadoop.hbase.client.HBaseAdmin,org.apache.hadoop.hbase.HTableDescriptor)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-examplesÂ§org.gradoop.rdf.examples.RDFAnalysisDriverTest" : [ "driverTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#getRowKey(java.lang.Long)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#readEdge(byte[],java.util.Map)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#readEdges(org.apache.hadoop.hbase.client.Result,byte[])" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#readGraphs(org.apache.hadoop.hbase.client.Result)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#readIncomingEdges(org.apache.hadoop.hbase.client.Result)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#readOutgoingEdges(org.apache.hadoop.hbase.client.Result)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#readVertex(org.apache.hadoop.hbase.client.Result)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#writeEdge(org.apache.hadoop.hbase.client.Put,byte[],org.gradoop.model.Edge)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#writeEdges(org.apache.hadoop.hbase.client.Put,byte[],java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#writeGraphs(org.apache.hadoop.hbase.client.Put,org.gradoop.model.GraphElement)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#writeIncomingEdges(org.apache.hadoop.hbase.client.Put,java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#writeOutgoingEdges(org.apache.hadoop.hbase.client.Put,java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#writeVertex(org.apache.hadoop.hbase.client.Put,org.gradoop.model.Vertex)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStore#<init>(org.apache.hadoop.hbase.client.HTable,org.apache.hadoop.hbase.client.HTable,org.gradoop.storage.hbase.VertexHandler,org.gradoop.storage.hbase.GraphHandler)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-examplesÂ§org.gradoop.rdf.examples.RDFAnalysisDriverTest" : [ "driverTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStore#close" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStore#readVertex(java.lang.Long)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStore#writeVertex(org.gradoop.model.Vertex)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreFactory#createOrOpenGraphStore(org.apache.hadoop.conf.Configuration,org.gradoop.storage.hbase.VertexHandler,org.gradoop.storage.hbase.GraphHandler)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-examplesÂ§org.gradoop.rdf.examples.RDFAnalysisDriverTest" : [ "driverTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreFactory#createOrOpenGraphStore(org.apache.hadoop.conf.Configuration,org.gradoop.storage.hbase.VertexHandler,org.gradoop.storage.hbase.GraphHandler,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-examplesÂ§org.gradoop.rdf.examples.RDFAnalysisDriverTest" : [ "driverTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreFactory#createTablesIfNotExists(org.apache.hadoop.conf.Configuration,org.gradoop.storage.hbase.VertexHandler,org.gradoop.storage.hbase.GraphHandler,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-examplesÂ§org.gradoop.rdf.examples.RDFAnalysisDriverTest" : [ "driverTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreFactory#deleteGraphStore(org.apache.hadoop.conf.Configuration)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-examplesÂ§org.gradoop.rdf.examples.RDFAnalysisDriverTest" : [ "driverTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreFactory#deleteGraphStore(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-examplesÂ§org.gradoop.rdf.examples.RDFAnalysisDriverTest" : [ "driverTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreFactory#deleteTablesIfExists(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-examplesÂ§org.gradoop.rdf.examples.RDFAnalysisDriverTest" : [ "driverTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.BIIIGConstants" : { },
        "gradoop-examplesÂ§org.gradoop.biiig.algorithms.AggregateComputation" : { },
        "gradoop-examplesÂ§org.gradoop.biiig.algorithms.AggregateMasterCompute" : { },
        "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGComputation" : { },
        "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGComputationTestHelper" : { },
        "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : { },
        "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGTextComputationTest" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGTextComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG", "testSingleMasterVertex", "testSingleMasterVertexWithBTG", "testSingleTransactionalVertex", "testSingleTransactionalVertexWithBTG" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.algorithms.package-info" : { },
        "gradoop-examplesÂ§org.gradoop.biiig.examples.BTGAnalysisDriver" : { },
        "gradoop-examplesÂ§org.gradoop.biiig.examples.BTGAnalysisDriverTest" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.examples.BTGAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.examples.package-info" : { },
        "gradoop-examplesÂ§org.gradoop.biiig.io.formats.BTGHBaseVertexInputFormat" : { },
        "gradoop-examplesÂ§org.gradoop.biiig.io.formats.BTGHBaseVertexOutputFormat" : { },
        "gradoop-examplesÂ§org.gradoop.biiig.io.formats.BTGMessage" : { },
        "gradoop-examplesÂ§org.gradoop.biiig.io.formats.BTGTextVertexInputFormat" : { },
        "gradoop-examplesÂ§org.gradoop.biiig.io.formats.BTGTextVertexOutputFormat" : { },
        "gradoop-examplesÂ§org.gradoop.biiig.io.formats.BTGVertexType" : { },
        "gradoop-examplesÂ§org.gradoop.biiig.io.formats.BTGVertexValue" : { },
        "gradoop-examplesÂ§org.gradoop.biiig.io.formats.package-info" : { },
        "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReader" : { },
        "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : { },
        "gradoop-examplesÂ§org.gradoop.biiig.io.reader.package-info" : { },
        "gradoop-examplesÂ§org.gradoop.biiig.package-info" : { },
        "gradoop-examplesÂ§org.gradoop.rdf.examples.RDFAnalysisDriver" : { },
        "gradoop-examplesÂ§org.gradoop.rdf.examples.RDFAnalysisDriver#<init>" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.rdf.examples.RDFAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.rdf.examples.RDFAnalysisDriver#run(java.lang.String[])" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.rdf.examples.RDFAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.rdf.examples.RDFAnalysisDriver#runBulkLoad(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String,boolean)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.rdf.examples.RDFAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.rdf.examples.RDFAnalysisDriverTest" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.rdf.examples.RDFAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.rdf.examples.RDFAnalysisDriverTest#driverTest" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.rdf.examples.RDFAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.rdf.examples.package-info" : { },
        "gradoop-examplesÂ§org.gradoop.utils.ConfigurationUtils" : { },
        "gradoop-examplesÂ§org.gradoop.utils.ConfigurationUtils#parseArgs(java.lang.String[])" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.rdf.examples.RDFAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.utils.ConfigurationUtils#performSanityCheck(org.apache.commons.cli.CommandLine)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.rdf.examples.RDFAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.utils.package-info" : { },
        "gradoop-giraphÂ§org.gradoop.GiraphClusterTest#setupConfiguration(org.apache.giraph.job.GiraphJob)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputation" : { },
        "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest#extendedGraphVertexIOTest" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest#vertexInputOutputTest(java.lang.String[],org.gradoop.io.reader.VertexLineReader)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.formats.EPGHBaseVertexFormatTest$TestComputation#compute(org.apache.giraph.graph.Vertex,java.lang.Iterable)" : { },
        "gradoop-giraphÂ§org.gradoop.io.formats.EPGHBaseVertexInputFormat" : { },
        "gradoop-giraphÂ§org.gradoop.io.formats.HBaseVertexOutputFormat#<init>" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.formats.HBaseVertexOutputFormat#checkOutputSpecs(org.apache.hadoop.mapreduce.JobContext)" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.formats.SubgraphExtractionVertexOutputFormat" : { },
        "gradoop-giraphÂ§org.gradoop.io.formats.SubgraphExtractionVertexOutputFormat#<init>" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ]
          }
        }
      }
    },
    "01bccaf449a91fc2d3ebae6ebadb69b8e98656f9" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4e88f35deb8a47f4ca8c4b42c527481ed5524c6e",
      "changedClazzes" : {
        "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputation" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningMasterComputation" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest#testConnectedGraph" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testConnectedGraph" ]
          }
        }
      }
    },
    "c3e2f8486386ba021e8af5f950be26587a691456" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "01bccaf449a91fc2d3ebae6ebadb69b8e98656f9",
      "changedClazzes" : {
        "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest#testSmallConnectedGraph" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.GiraphTestHelper" : { },
        "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest#testBiPartiteGraph" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest#testBipartiteGraph" : { },
        "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest#testConnectedGraph" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.LabelPropagationComputationTest#testBiPartitGraph" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.LabelPropagationComputationTest" : [ ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.LabelPropagationComputationTest#testBipartiteGraph" : { },
        "gradoop-giraphÂ§org.gradoop.algorithms.LabelPropagationComputationTest#testCompleteBiPartiteGraph" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.LabelPropagationComputationTest" : [ ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.LabelPropagationComputationTest#testCompleteBipartiteGraph" : { },
        "gradoop-giraphÂ§org.gradoop.algorithms.LabelPropagationComputationTest#testConnectedGraph" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.LabelPropagationComputationTest" : [ "testConnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.LabelPropagationComputationTest#testDisconnectedGraph" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.LabelPropagationComputationTest" : [ "testDisconnectedGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.LabelPropagationComputationTest#testLoopGraph" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.LabelPropagationComputationTest" : [ "testLoopGraph" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.algorithms.PartitioningComputationTestHelper" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.algorithms.AdaptiveRepartitioningComputationTest" : [ "testSmallConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.LabelPropagationComputationTest" : [ "testConnectedGraph", "testDisconnectedGraph", "testLoopGraph" ]
          }
        }
      }
    },
    "af2d96e24beca7d9a90c7abdaa0135102807d255" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c3e2f8486386ba021e8af5f950be26587a691456",
      "changedClazzes" : {
        "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest#vertexInputOutputTest(org.gradoop.algorithms.String[],org.gradoop.io.reader.VertexLineReader)" : { }
      }
    },
    "dec9eeb752bd70db7d02b6e7f3196ad323777f43" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "af2d96e24beca7d9a90c7abdaa0135102807d255",
      "changedClazzes" : {
        "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkSimpleCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§csv.io.reader.CSVReaderTest#checkSimpleCSVInputTest" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkSimpleCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§csv.io.reader.CSVReaderTest#createVerticesFromCSV" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkSimpleCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.csv.io.reader.CSVReader" : { },
        "gradoop-examplesÂ§org.gradoop.csv.io.reader.CSVReader#<init>(java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkSimpleCSVInputTest" ]
          }
        }
      }
    },
    "c7acefa3e04da53a49aaf644eb241bd1b01f4f65" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "dec9eeb752bd70db7d02b6e7f3196ad323777f43",
      "changedClazzes" : {
        "gradoop-coreÂ§org.gradoop.io.reader.BulkLoadEPG#setup(org.gradoop.io.reader.Context)" : { },
        "gradoop-coreÂ§org.gradoop.io.reader.ConfigurableVertexLineReader" : { }
      }
    },
    "d7f5ad1e253cecb9643136079899ea2652802c89" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c7acefa3e04da53a49aaf644eb241bd1b01f4f65",
      "changedClazzes" : {
        "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkSimpleCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.csv.io.reader.CSVReader" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkSimpleCSVInputTest" ]
          }
        }
      }
    },
    "a270239794b7b89fff43f04ff300171a425f9a5d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d7f5ad1e253cecb9643136079899ea2652802c89",
      "changedClazzes" : {
        "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkSimpleCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.csv.io.reader.CSVReader" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkSimpleCSVInputTest" ]
          }
        }
      }
    },
    "fe8fa7eccd87e604ab93bf1bada16a320ebda29c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a270239794b7b89fff43f04ff300171a425f9a5d",
      "changedClazzes" : {
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#<init>(java.lang.Long,java.lang.Iterable,java.util.Map,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#getIncomingDegree" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#getOutgoingDegree" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#initGraphs(java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.MultiLabeledPropertyContainer#<init>(java.lang.Long,java.lang.Iterable,java.util.Map)" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.MultiLabeledPropertyContainer#getID" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.MultiLabeledPropertyContainer#getLabels" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.PropertyContainer#<init>(java.util.Map)" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.PropertyContainer#addProperty(java.lang.String,java.lang.Object)" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.PropertyContainer#getProperty(java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.PropertyContainer#getPropertyKeys" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.VertexFactory#checkVertexID(java.lang.Long)" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.VertexFactory#createDefaultVertex(java.lang.Long,java.lang.Iterable,java.util.Map,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.VertexFactory#createDefaultVertexWithLabels(java.lang.Long,java.lang.Iterable,java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§csv.io.reader.CSVReaderTest#checkEdgeCSVInputTest" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§csv.io.reader.CSVReaderTest#checkLabel(org.gradoop.model.Vertex,java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§csv.io.reader.CSVReaderTest#checkNodeCSVInputTest" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§csv.io.reader.CSVReaderTest#createEdgesFromCSV" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§csv.io.reader.CSVReaderTest#createVerticesFromCSV" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.csv.io.reader.CSVReader#<init>" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.csv.io.reader.CSVReader#checkType" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.csv.io.reader.CSVReader#getTokens(java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.csv.io.reader.CSVReader#initializeAndReadFirstLine(java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.csv.io.reader.CSVReader#readRemainingLines(java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.csv.io.reader.CSVReader#readVertexList(java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.csv.io.reader.CSVReader#setConf(org.apache.hadoop.conf.Configuration)" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        }
      }
    },
    "1d0ec13a4f6cd5db01007b656c36378913edd21c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "fe8fa7eccd87e604ab93bf1bada16a320ebda29c",
      "changedClazzes" : {
        "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.csv.io.reader.CSVReader" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.csv.io.reader.package-info" : { }
      }
    },
    "fa45b31b24106d642bbbbe031b3a9bad2ce59326" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "1d0ec13a4f6cd5db01007b656c36378913edd21c",
      "changedClazzes" : {
        "gradoop-coreÂ§org.gradoop.drivers.BulkDriver" : { },
        "gradoop-coreÂ§org.gradoop.drivers.BulkLoadDriver" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkLoadDriverTest" : [ "testBulkLoadDriver" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.drivers.BulkLoadDriver$ConfUtils" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkLoadDriverTest" : [ "testBulkLoadDriver" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.drivers.BulkLoadDriverTest#testBulkLoadDriver" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkLoadDriverTest" : [ "testBulkLoadDriver" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriver" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest" : [ "testBulkWriteDriver" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriver$ConfUtils" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest" : [ "testBulkWriteDriver" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest#testBulkWriteDriver" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest" : [ "testBulkWriteDriver" ]
          }
        },
        "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        }
      }
    },
    "c19474960ad3fe63005f3e981cd4bb289aef0217" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "fa45b31b24106d642bbbbe031b3a9bad2ce59326",
      "changedClazzes" : {
        "gradoop-coreÂ§org.gradoop.drivers.BulkDriver" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkLoadDriverTest" : [ "testBulkLoadDriver" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.drivers.BulkLoadDriver" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkLoadDriverTest" : [ "testBulkLoadDriver" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriver" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest" : [ "testBulkWriteDriver" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriver$ConfUtils" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest" : [ "testBulkWriteDriver" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest#testBulkWriteDriver" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest" : [ "testBulkWriteDriver" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.csv.io.reader.CSVReader" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        }
      }
    },
    "7bff26f3cbb07a4da2cbfe66713be568f3547622" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c19474960ad3fe63005f3e981cd4bb289aef0217",
      "changedClazzes" : {
        "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.csv.io.reader.CSVReader" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        }
      }
    },
    "fbb52bd3de3e440ed908116f7fd706e26263b1f3" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "7bff26f3cbb07a4da2cbfe66713be568f3547622",
      "changedClazzes" : {
        "gradoop-coreÂ§org.gradoop.drivers.BulkLoadDriver#run(org.gradoop.drivers.String[])" : { },
        "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriver#run(org.gradoop.drivers.String[])" : { },
        "gradoop-examplesÂ§csv.examples.SNBAnalysisDriverTest" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.examples.SNBAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§csv.examples.SNBAnalysisDriverTest#driverTest" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.examples.SNBAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.csv.examples.SNBAnalysisDriver" : { },
        "gradoop-examplesÂ§org.gradoop.csv.examples.package-info" : { }
      }
    },
    "c66b853cfe3a800eee62b4105415f0bc73244ac0" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "fbb52bd3de3e440ed908116f7fd706e26263b1f3",
      "changedClazzes" : {
        "gradoop-examplesÂ§csv.examples.SNBAnalysisDriverTest" : { },
        "gradoop-examplesÂ§org.gradoop.csv.examples.SNBAnalysisDriver" : { },
        "gradoop-examplesÂ§org.gradoop.csv.examples.package-info" : { }
      }
    },
    "52f991af9540c403e9ae4ae90db519a58320eaf7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c66b853cfe3a800eee62b4105415f0bc73244ac0",
      "changedClazzes" : { }
    },
    "84ed2d41cd4327f7c8ab7fc7084f8f265f83a5c7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "52f991af9540c403e9ae4ae90db519a58320eaf7",
      "changedClazzes" : {
        "gradoop-coreÂ§org.gradoop.GradoopClusterTest#copyFromLocal(java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.drivers.BulkLoadDriver" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkLoadDriverTest" : [ "testBulkLoadDriver" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.drivers.BulkLoadDriver$LoadConfUtils" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkLoadDriverTest" : [ "testBulkLoadDriver" ]
          }
        },
        "gradoop-examplesÂ§csv.examples.SNAAnalysisDriverTest" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§csv.examples.SNAAnalysisDriverTest#driverTest" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.csv.examples.SNAAnalysisDriver" : { },
        "gradoop-examplesÂ§org.gradoop.csv.examples.package-info" : { }
      }
    },
    "647243f6f3abbc5091f28953ad6a1c570864be03" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "84ed2d41cd4327f7c8ab7fc7084f8f265f83a5c7",
      "changedClazzes" : {
        "gradoop-coreÂ§org.gradoop.drivers.BulkDriver#parseArgs(org.gradoop.drivers.String[])" : { },
        "gradoop-coreÂ§org.gradoop.drivers.BulkDriver$ConfUtils#parseArgs(org.gradoop.drivers.String[])" : { },
        "gradoop-examplesÂ§csv.examples.SNAAnalysisDriverTest" : {
          "testcases" : {
            "gradoop-examplesÂ§csv.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.csv.examples.SNAAnalysisDriver" : { },
        "gradoop-examplesÂ§org.gradoop.csv.examples.SNAAnalysisDriver$LoadConfUtils" : { },
        "gradoop-giraphÂ§org.gradoop.io.formats.EPGLabelPropagationInputFormat" : { },
        "gradoop-giraphÂ§org.gradoop.io.formats.EPGLabelPropagationOutputFormat" : { }
      }
    },
    "af2429ff0a0bf1a42822c7cff440a88ed87fe65c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "647243f6f3abbc5091f28953ad6a1c570864be03",
      "changedClazzes" : {
        "gradoop-coreÂ§org.gradoop.GradoopClusterTest#copyFromLocal(java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.drivers.BulkDriver#<init>" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.drivers.BulkDriver#getHadoopConf" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.drivers.BulkDriver#parseArgs(java.lang.String[])" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.drivers.BulkDriver$ConfUtils#<init>" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.drivers.BulkDriver$ConfUtils#parseArgs(java.lang.String[])" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.drivers.BulkLoadDriverTest#testBulkLoadDriver" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkLoadDriverTest" : [ "testBulkLoadDriver" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest#testBulkWriteDriver" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest" : [ "testBulkWriteDriver" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultEdge#<init>(java.lang.Long,java.lang.String,java.lang.Long,java.util.Map)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#<init>(java.lang.Long,java.lang.Iterable,java.util.Map,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#getIncomingDegree" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#getIncomingEdges" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#getOutgoingDegree" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#getOutgoingEdges" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#initGraphs(java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.EdgeFactory#checkID(java.lang.Long)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.EdgeFactory#checkIndex(java.lang.Long)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.EdgeFactory#checkLabel(java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.EdgeFactory#createDefaultEdge(java.lang.Long,java.lang.String,java.lang.Long,java.util.Map)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.EdgeFactory#createDefaultEdgeWithLabel(java.lang.Long,java.lang.String,java.lang.Long)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.MultiLabeledPropertyContainer#<init>(java.lang.Long,java.lang.Iterable,java.util.Map)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.MultiLabeledPropertyContainer#getID" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.MultiLabeledPropertyContainer#getLabels" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.PropertyContainer#<init>(java.util.Map)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.PropertyContainer#addProperty(java.lang.String,java.lang.Object)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.PropertyContainer#getProperty(java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.PropertyContainer#getPropertyKeys" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.SingleLabeledPropertyContainer#<init>(java.lang.String,java.util.Map)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.SingleLabeledPropertyContainer#getLabel" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.VertexFactory#checkVertexID(java.lang.Long)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.VertexFactory#createDefaultVertex(java.lang.Long,java.lang.Iterable,java.util.Map,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.VertexFactory#createDefaultVertexWithLabels(java.lang.Long,java.lang.Iterable,java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.BasicHandler#<init>" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGGraphHandler#<init>" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGGraphHandler#createTable(org.apache.hadoop.hbase.client.HBaseAdmin,org.apache.hadoop.hbase.HTableDescriptor)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#<init>" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#createTable(org.apache.hadoop.hbase.client.HBaseAdmin,org.apache.hadoop.hbase.HTableDescriptor)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStore#<init>(org.apache.hadoop.hbase.client.HTable,org.apache.hadoop.hbase.client.HTable,org.gradoop.storage.hbase.VertexHandler,org.gradoop.storage.hbase.GraphHandler)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreFactory#createOrOpenGraphStore(org.apache.hadoop.conf.Configuration,org.gradoop.storage.hbase.VertexHandler,org.gradoop.storage.hbase.GraphHandler)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreFactory#createOrOpenGraphStore(org.apache.hadoop.conf.Configuration,org.gradoop.storage.hbase.VertexHandler,org.gradoop.storage.hbase.GraphHandler,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreFactory#createTablesIfNotExists(org.apache.hadoop.conf.Configuration,org.gradoop.storage.hbase.VertexHandler,org.gradoop.storage.hbase.GraphHandler,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreFactory#deleteGraphStore(org.apache.hadoop.conf.Configuration)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreFactory#deleteGraphStore(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreFactory#deleteTable(org.apache.hadoop.hbase.client.HBaseAdmin,org.apache.hadoop.hbase.HTableDescriptor)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreFactory#deleteTablesIfExists(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§csv.examples.SNAAnalysisDriverTest" : { },
        "gradoop-examplesÂ§org.gradoop.csv.examples.SNAAnalysisDriver" : { },
        "gradoop-examplesÂ§org.gradoop.csv.examples.package-info" : { },
        "gradoop-examplesÂ§org.gradoop.csv.io.reader.package-info" : { },
        "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriver" : { },
        "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriver#<init>" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriver#run(java.lang.String[])" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriver#runSummarize(org.apache.hadoop.conf.Configuration,int,int,boolean,java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriver$LoadConfUtils#<init>" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.examples.package-info" : { },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReader" : { },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReader#<init>" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReader#getTokens(java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReader#initialStep(java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReader#isNodeCSV" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReader#readEdges(java.util.List,java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReader#readVertex(java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReader#readVertexList(java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReader#setConf(org.apache.hadoop.conf.Configuration)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReader#setVList" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.package-info" : { },
        "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest#driverTest" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§sna.io.reader.CSVReaderTest#checkEdgeCSVInputTest" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§sna.io.reader.CSVReaderTest#checkIncomingEdge(java.util.List)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§sna.io.reader.CSVReaderTest#checkLabel(org.gradoop.model.Vertex,java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§sna.io.reader.CSVReaderTest#checkNodeCSVInputTest" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§sna.io.reader.CSVReaderTest#checkOutgoingEdge(java.util.List)" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§sna.io.reader.CSVReaderTest#createEdgesFromCSV" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§sna.io.reader.CSVReaderTest#createVerticesFromCSV" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.io.reader.CSVReaderTest" : [ "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.formats.EPGLabelPropagationInputFormat$EPGLongLongNullVertexReader" : { },
        "gradoop-giraphÂ§org.gradoop.io.formats.EPGLabelPropagationOutputFormat" : { },
        "gradoop-giraphÂ§org.gradoop.io.formats.EPGLabelPropagationOutputFormat$LabelPropagationTextVertexLineWriter" : { },
        "gradoop-giraphÂ§org.gradoop.io.formats.TextLabelPropagationOutputFormat" : { },
        "gradoop-mapreduceÂ§org.gradoop.algorithms.Summarize" : { },
        "gradoop-mapreduceÂ§org.gradoop.io.formats.SummarizeWritable" : { }
      }
    },
    "940a387924e1e0c684bea9c38f39d262fd2b97e5" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "af2429ff0a0bf1a42822c7cff440a88ed87fe65c",
      "changedClazzes" : { }
    },
    "92ac78e399b76fccfe14a5085a702f4f79e3d5f2" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "940a387924e1e0c684bea9c38f39d262fd2b97e5",
      "changedClazzes" : {
        "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriver" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriver$LoadConfUtils" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-mapreduceÂ§org.gradoop.algorithms.Summarize$TextReducer#writeCommunities(java.lang.Long,int,java.util.Map)" : { }
      }
    },
    "d1f78b92d33bc436214ab6e3782d1e609686e777" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "92ac78e399b76fccfe14a5085a702f4f79e3d5f2",
      "changedClazzes" : {
        "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriver" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriver$LoadConfUtils" : {
          "testcases" : {
            "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        }
      }
    },
    "10a7622464ac6ab3380f3935b430090303d383dd" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d1f78b92d33bc436214ab6e3782d1e609686e777",
      "changedClazzes" : {
        "gradoop-examplesÂ§org.gradoop.biiig.examples.BTGAnalysisDriver" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.examples.BTGAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.examples.BTGAnalysisDriver$ProfitVertexAggregate" : { },
        "gradoop-examplesÂ§org.gradoop.biiig.examples.BTGAnalysisDriver$SalesOrderPredicate" : { },
        "gradoop-examplesÂ§org.gradoop.biiig.examples.BTGAnalysisDriver$SumAggregator" : { },
        "gradoop-examplesÂ§org.gradoop.biiig.examples.BTGAnalysisDriverTest" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.examples.BTGAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriver#runSummarize(org.apache.hadoop.conf.Configuration,int,int,boolean,java.lang.String)" : { },
        "gradoop-mapreduceÂ§org.gradoop.algorithms.Sort" : { },
        "gradoop-mapreduceÂ§org.gradoop.algorithms.Summarize" : { },
        "gradoop-mapreduceÂ§org.gradoop.algorithms.Summarize$SelectMapper" : { },
        "gradoop-mapreduceÂ§org.gradoop.algorithms.Summarize$TextReducer" : { },
        "gradoop-mapreduceÂ§org.gradoop.io.formats.SummarizeWritable#<init>(java.lang.Long,java.util.List)" : { }
      }
    },
    "567d8c65e80aaf0cc12599f0d023f8d542807f01" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "10a7622464ac6ab3380f3935b430090303d383dd",
      "changedClazzes" : {
        "gradoop-coreÂ§org.gradoop.model.Graph" : { },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultGraph" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultGraphTest" : [ "createDefaultGraphTest", "createWithIDTest" ],
            "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : [ "writeCloseOpenReadTest", "writeFlushReadTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.examples.BTGAnalysisDriverTest" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.examples.BTGAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.io.formats.BTGHBaseVertexOutputFormat" : { },
        "gradoop-examplesÂ§org.gradoop.biiig.io.formats.BTGHBaseVertexOutputFormat$BTGHBaseVertexWriter" : { }
      }
    },
    "17db7d62b5b1340365bee7d1659563d8c28676d6" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "567d8c65e80aaf0cc12599f0d023f8d542807f01",
      "changedClazzes" : {
        "gradoop-coreÂ§org.gradoop.GradoopClusterTest" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkLoadDriverTest" : [ "testBulkLoadDriver" ],
            "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest" : [ "testBulkWriteDriver" ],
            "gradoop-coreÂ§org.gradoop.io.reader.AdjacencyListReaderTest" : [ "writeReadExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.BulkLoadTest" : [ "bulkLoadTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.BulkWriteTest" : [ "bulkWriteSimpleGraphTest" ],
            "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : [ "propertyTypeTest", "writeCloseOpenReadTest", "writeFlushReadTest", "wrongPropertyTypeTest" ],
            "gradoop-examplesÂ§org.gradoop.biiig.examples.BTGAnalysisDriverTest" : [ "driverTest" ],
            "gradoop-examplesÂ§org.gradoop.rdf.examples.RDFAnalysisDriverTest" : [ "driverTest" ],
            "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.EPGHBaseVertexFormatTest" : [ "vertexInputOutputTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.AggregationTest" : [ "aggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectAndAggregateTest" : [ "selectAndAggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectionTest" : [ "selectionTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.GraphStore" : { },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStore" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkLoadDriverTest" : [ "testBulkLoadDriver" ],
            "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest" : [ "testBulkWriteDriver" ],
            "gradoop-coreÂ§org.gradoop.io.reader.AdjacencyListReaderTest" : [ "writeReadExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.BulkLoadTest" : [ "bulkLoadTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.BulkWriteTest" : [ "bulkWriteSimpleGraphTest" ],
            "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : [ "propertyTypeTest", "writeCloseOpenReadTest", "writeFlushReadTest", "wrongPropertyTypeTest" ],
            "gradoop-examplesÂ§org.gradoop.biiig.examples.BTGAnalysisDriverTest" : [ "driverTest" ],
            "gradoop-examplesÂ§org.gradoop.rdf.examples.RDFAnalysisDriverTest" : [ "driverTest" ],
            "gradoop-examplesÂ§sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.EPGHBaseVertexFormatTest" : [ "vertexInputOutputTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.AggregationTest" : [ "aggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectAndAggregateTest" : [ "selectAndAggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectionTest" : [ "selectionTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.examples.BTGAnalysisDriver" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.examples.BTGAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.examples.BTGAnalysisDriver$ProfitVertexAggregate" : { },
        "gradoop-examplesÂ§org.gradoop.biiig.examples.BTGAnalysisDriver$SalesOrderPredicate" : { },
        "gradoop-examplesÂ§org.gradoop.biiig.examples.BTGAnalysisDriver$SumAggregator" : { },
        "gradoop-examplesÂ§org.gradoop.biiig.examples.BTGAnalysisDriverTest" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.examples.BTGAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.utils.ConfigurationUtils" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.examples.BTGAnalysisDriverTest" : [ "driverTest" ],
            "gradoop-examplesÂ§org.gradoop.rdf.examples.RDFAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-mapreduceÂ§org.gradoop.algorithms.Sort" : { },
        "gradoop-mapreduceÂ§org.gradoop.algorithms.Sort$SortMapper" : { }
      }
    },
    "22c07f9202369601ab0ff06bb3d2eb002ebf40ea" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "17db7d62b5b1340365bee7d1659563d8c28676d6",
      "changedClazzes" : {
        "gradoop-coreÂ§org.gradoop.GradoopClusterTest#copyFromLocal(java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.drivers.BulkDriver#<init>" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.drivers.BulkDriver#getHadoopConf" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.drivers.BulkDriver#parseArgs(java.lang.String[])" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.drivers.BulkDriver$ConfUtils#<init>" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.drivers.BulkDriver$ConfUtils#parseArgs(java.lang.String[])" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultEdge#<init>(java.lang.Long,java.lang.String,java.lang.Long,java.util.Map)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#<init>(java.lang.Long,java.lang.Iterable,java.util.Map,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#getIncomingDegree" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#getIncomingEdges" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#getOutgoingDegree" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#getOutgoingEdges" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#initGraphs(java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.EdgeFactory#checkID(java.lang.Long)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.EdgeFactory#checkIndex(java.lang.Long)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.EdgeFactory#checkLabel(java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.EdgeFactory#createDefaultEdge(java.lang.Long,java.lang.String,java.lang.Long,java.util.Map)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.EdgeFactory#createDefaultEdgeWithLabel(java.lang.Long,java.lang.String,java.lang.Long)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.MultiLabeledPropertyContainer#<init>(java.lang.Long,java.lang.Iterable,java.util.Map)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.MultiLabeledPropertyContainer#getID" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.MultiLabeledPropertyContainer#getLabels" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.PropertyContainer#<init>(java.util.Map)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.PropertyContainer#addProperty(java.lang.String,java.lang.Object)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.PropertyContainer#getProperty(java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.PropertyContainer#getPropertyKeys" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.SingleLabeledPropertyContainer#<init>(java.lang.String,java.util.Map)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.SingleLabeledPropertyContainer#getLabel" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.VertexFactory#checkVertexID(java.lang.Long)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.VertexFactory#createDefaultVertex(java.lang.Long,java.lang.Iterable,java.util.Map,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.VertexFactory#createDefaultVertexWithLabels(java.lang.Long,java.lang.Iterable,java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.BasicHandler#<init>" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGGraphHandler#<init>" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGGraphHandler#createTable(org.apache.hadoop.hbase.client.HBaseAdmin,org.apache.hadoop.hbase.HTableDescriptor)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#<init>" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#createTable(org.apache.hadoop.hbase.client.HBaseAdmin,org.apache.hadoop.hbase.HTableDescriptor)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStore#<init>(org.apache.hadoop.hbase.client.HTable,org.apache.hadoop.hbase.client.HTable,org.gradoop.storage.hbase.VertexHandler,org.gradoop.storage.hbase.GraphHandler)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreFactory#createOrOpenGraphStore(org.apache.hadoop.conf.Configuration,org.gradoop.storage.hbase.VertexHandler,org.gradoop.storage.hbase.GraphHandler)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreFactory#createOrOpenGraphStore(org.apache.hadoop.conf.Configuration,org.gradoop.storage.hbase.VertexHandler,org.gradoop.storage.hbase.GraphHandler,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreFactory#createTablesIfNotExists(org.apache.hadoop.conf.Configuration,org.gradoop.storage.hbase.VertexHandler,org.gradoop.storage.hbase.GraphHandler,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreFactory#deleteGraphStore(org.apache.hadoop.conf.Configuration)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreFactory#deleteGraphStore(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreFactory#deleteTable(org.apache.hadoop.hbase.client.HBaseAdmin,org.apache.hadoop.hbase.HTableDescriptor)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreFactory#deleteTablesIfExists(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.examples.BTGAnalysisDriver" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.examples.BTGAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.examples.BTGAnalysisDriver$ProfitVertexAggregate" : { },
        "gradoop-examplesÂ§org.gradoop.biiig.examples.BTGAnalysisDriver$SalesOrderPredicate" : { },
        "gradoop-examplesÂ§org.gradoop.biiig.examples.BTGAnalysisDriver$SumAggregator" : { },
        "gradoop-examplesÂ§org.gradoop.biiig.io.formats.BTGHBaseVertexOutputFormat$BTGHBaseVertexWriter#writeVertex(org.apache.giraph.graph.Vertex)" : { },
        "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriver#<init>" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriver#run(java.lang.String[])" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriver#runBulkLoad(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String,boolean)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriver$LoadConfUtils#<init>" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriverTest" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriverTest#driverTest" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReader#<init>" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReader#getTokens(java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReader#initialStep(java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReader#isNodeCSV" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReader#readEdges(java.util.List,java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReader#readVertex(java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReader#readVertexList(java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReader#setConf(org.apache.hadoop.conf.Configuration)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReader#setVList" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest#checkEdgeCSVInputTest" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest#checkIncomingEdge(java.util.List)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest#checkLabel(org.gradoop.model.Vertex,java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest#checkNodeCSVInputTest" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest#checkOutgoingEdge(java.util.List)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest#createEdgesFromCSV" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest#createVerticesFromCSV" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.utils.ConfigurationUtils#performSanityCheck(org.apache.commons.cli.CommandLine)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.examples.BTGAnalysisDriverTest" : [ "driverTest" ],
            "gradoop-examplesÂ§org.gradoop.rdf.examples.RDFAnalysisDriverTest" : [ "driverTest" ]
          }
        },
        "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectAndAggregate" : { },
        "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectAndAggregate$AggregateReducer" : { },
        "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectAndAggregate$SelectMapper" : { },
        "gradoop-mapreduceÂ§org.gradoop.algorithms.Sort$SortMapper#encodeDouble(java.lang.Double,org.apache.hadoop.hbase.util.Order)" : { },
        "gradoop-mapreduceÂ§org.gradoop.io.formats.GenericPairWritable" : { },
        "gradoop-mapreduceÂ§org.gradoop.io.formats.ValueWritable" : { }
      }
    },
    "d916ecc90a9a75ba35470bd137a48b944570ba8b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "22c07f9202369601ab0ff06bb3d2eb002ebf40ea",
      "changedClazzes" : { }
    },
    "937394435a5e1430d025a1d7cc9f47224ea805b0" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d916ecc90a9a75ba35470bd137a48b944570ba8b",
      "changedClazzes" : {
        "gradoop-coreÂ§org.gradoop.GConstants" : { },
        "gradoop-coreÂ§org.gradoop.GradoopClusterTest#createEmptyGraphStore" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.GradoopTest#createTestReader(java.lang.String[])" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.GradoopTest#getCallingMethod" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.GradoopTest#getTempFile" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.GradoopTest#getTempFile(java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.GradoopTest#validateExtendedGraphVertices(java.util.List)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.AdjacencyListReaderTest" : [ "writeReadExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.EPGVertexReaderTest" : [ "readExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.JsonReaderTest" : [ "testReader" ],
            "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : [ "writeCloseOpenReadTest", "writeFlushReadTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.formats.EPGLabeledAttributedWritable" : { },
        "gradoop-coreÂ§org.gradoop.io.formats.EPGMultiLabeledAttributedWritable" : { },
        "gradoop-coreÂ§org.gradoop.io.formats.EPGVertexValueWritable" : { },
        "gradoop-coreÂ§org.gradoop.io.reader.AdjacencyListReader#<init>(org.gradoop.storage.GraphStore,org.gradoop.io.reader.VertexLineReader)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.AdjacencyListReader#read(java.io.BufferedReader)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.EPGVertexReader" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.AdjacencyListReaderTest" : [ "writeReadExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.EPGVertexReaderTest" : [ "readExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.JsonWriterTest" : [ "writerTest" ],
            "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : [ "writeCloseOpenReadTest", "writeFlushReadTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.EPGHBaseVertexFormatTest" : [ "vertexInputOutputTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.AggregationTest" : [ "aggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectAndAggregateTest" : [ "selectAndAggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectionTest" : [ "selectionTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.JsonReader" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.JsonReaderTest" : [ "testReader" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.RDFReader#readVertexList(java.lang.String)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "countRDFNTriplesTest", "loadRDFToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.SingleVertexReader#<init>" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.SingleVertexReader#supportsVertexLists" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.writer.JsonWriter" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.writer.JsonWriterTest" : [ "writerTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.Labeled" : { },
        "gradoop-coreÂ§org.gradoop.model.MultiLabeled" : { },
        "gradoop-coreÂ§org.gradoop.model.SingleLabeled" : { },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultEdge" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest" : [ "testBulkWriteDriver" ],
            "gradoop-coreÂ§org.gradoop.io.reader.AdjacencyListReaderTest" : [ "writeReadExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.EPGVertexReaderTest" : [ "readExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.JsonReaderTest" : [ "testReader" ],
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.SimpleVertexReaderTest" : [ "readBasicGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.BulkWriteTest" : [ "bulkWriteSimpleGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.JsonWriterTest" : [ "writerTest" ],
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultEdgeTest" : [ "createWithOtherIDIndexTest", "createWithOtherIDLabelIndexPropertiesTest", "createWithOtherIDLabelIndexTest", "testCompareTo", "testEquals" ],
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest" : [ "createDefaultVertexTest", "createWithIDEdgesTest", "createWithIDLabelsEdgesTest", "createWithIDOutgoingEdgesTest" ],
            "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : [ "writeCloseOpenReadTest", "writeFlushReadTest" ],
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.EPGHBaseVertexFormatTest" : [ "vertexInputOutputTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.AggregationTest" : [ "aggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectionTest" : [ "selectionTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultEdge#<init>(java.lang.Long,java.lang.String,java.lang.Long,java.util.Map)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest", "readFromJsonTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultEdge#getIndex" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultEdge#getOtherID" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultEdge#toString" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultGraph" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultGraphTest" : [ "createDefaultGraphTest", "createWithIDTest" ],
            "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : [ "writeCloseOpenReadTest", "writeFlushReadTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultGraphTest" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultGraphTest" : [ "createDefaultGraphTest", "createWithIDTest", "createWithMissingIDTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest" : [ "testBulkWriteDriver" ],
            "gradoop-coreÂ§org.gradoop.io.reader.AdjacencyListReaderTest" : [ "writeReadExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.EPGVertexReaderTest" : [ "readExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.JsonReaderTest" : [ "testReader" ],
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.SimpleVertexReaderTest" : [ "readBasicGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.BulkWriteTest" : [ "bulkWriteSimpleGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.JsonWriterTest" : [ "writerTest" ],
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest" : [ "createDefaultVertexTest", "createWithIDEdgesTest", "createWithIDLabelsEdgesTest", "createWithIDOutgoingEdgesTest", "createWithIDTest" ],
            "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : [ "propertyTypeTest", "writeCloseOpenReadTest", "writeFlushReadTest", "wrongPropertyTypeTest" ],
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.EPGHBaseVertexFormatTest" : [ "vertexInputOutputTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.AggregationTest" : [ "aggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectAndAggregateTest" : [ "selectAndAggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectionTest" : [ "selectionTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#<init>(java.lang.Long,java.lang.String,java.util.Map,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest", "readFromJsonTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#getGraphs" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#getIncomingEdges" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#getOutgoingEdges" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#initGraphs(java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest", "readFromJsonTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#toString" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest#createDefaultVertexTest" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest" : [ "createDefaultVertexTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest#createWithIDLabelsEdgesTest" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest" : [ "createWithIDLabelsEdgesTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest#createWithIDTest" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest" : [ "createWithIDTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.EdgeFactory#checkID(java.lang.Long)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest", "readFromJsonTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.EdgeFactory#checkIndex(java.lang.Long)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest", "readFromJsonTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.EdgeFactory#checkLabel(java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest", "readFromJsonTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.EdgeFactory#createDefaultEdge(java.lang.Long,java.lang.Long)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.EdgeFactory#createDefaultEdge(java.lang.Long,java.lang.String,java.lang.Long,java.util.Map)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest", "readFromJsonTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.EdgeFactory#createDefaultEdgeWithLabel(java.lang.Long,java.lang.String,java.lang.Long)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest", "readFromJsonTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.GraphFactory" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultGraphTest" : [ "createDefaultGraphTest", "createWithIDTest", "createWithMissingIDTest" ],
            "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : [ "writeCloseOpenReadTest", "writeFlushReadTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.LabeledPropertyContainer" : { },
        "gradoop-coreÂ§org.gradoop.model.impl.LabeledPropertyContainer#<init>(java.lang.Long,java.lang.String,java.util.Map)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest", "readFromJsonTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.LabeledPropertyContainer#getID" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.LabeledPropertyContainer#getLabel" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.LabeledPropertyContainer#setLabel(java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest", "readFromJsonTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.LabeledPropertyContainer#validateLabel(java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest", "readFromJsonTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.MultiLabeledPropertyContainer" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest" : [ "testBulkWriteDriver" ],
            "gradoop-coreÂ§org.gradoop.io.reader.AdjacencyListReaderTest" : [ "writeReadExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.EPGVertexReaderTest" : [ "readExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.JsonReaderTest" : [ "testReader" ],
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.SimpleVertexReaderTest" : [ "readBasicGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.BulkWriteTest" : [ "bulkWriteSimpleGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.JsonWriterTest" : [ "writerTest" ],
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultGraphTest" : [ "createDefaultGraphTest", "createWithIDTest" ],
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest" : [ "createDefaultVertexTest", "createWithIDEdgesTest", "createWithIDLabelsEdgesTest", "createWithIDOutgoingEdgesTest", "createWithIDTest" ],
            "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : [ "propertyTypeTest", "writeCloseOpenReadTest", "writeFlushReadTest", "wrongPropertyTypeTest" ],
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.EPGHBaseVertexFormatTest" : [ "vertexInputOutputTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.AggregationTest" : [ "aggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectAndAggregateTest" : [ "selectAndAggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectionTest" : [ "selectionTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.PropertyContainer#<init>(java.util.Map)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest", "readFromJsonTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.PropertyContainer#addProperty(java.lang.String,java.lang.Object)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest", "readFromJsonTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.PropertyContainer#getProperty(java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.PropertyContainer#getPropertyCount" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.PropertyContainer#getPropertyKeys" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.SingleLabeledPropertyContainer" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest" : [ "testBulkWriteDriver" ],
            "gradoop-coreÂ§org.gradoop.io.reader.AdjacencyListReaderTest" : [ "writeReadExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.EPGVertexReaderTest" : [ "readExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.JsonReaderTest" : [ "testReader" ],
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.SimpleVertexReaderTest" : [ "readBasicGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.BulkWriteTest" : [ "bulkWriteSimpleGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.JsonWriterTest" : [ "writerTest" ],
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultEdgeTest" : [ "createWithOtherIDIndexTest", "createWithOtherIDLabelIndexPropertiesTest", "createWithOtherIDLabelIndexTest", "testCompareTo", "testEquals" ],
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest" : [ "createDefaultVertexTest", "createWithIDEdgesTest", "createWithIDLabelsEdgesTest", "createWithIDOutgoingEdgesTest" ],
            "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : [ "writeCloseOpenReadTest", "writeFlushReadTest" ],
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.EPGHBaseVertexFormatTest" : [ "vertexInputOutputTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.AggregationTest" : [ "aggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectionTest" : [ "selectionTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.VertexFactory" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest" : [ "testBulkWriteDriver" ],
            "gradoop-coreÂ§org.gradoop.io.reader.AdjacencyListReaderTest" : [ "writeReadExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.EPGVertexReaderTest" : [ "readExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.JsonReaderTest" : [ "testReader" ],
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.SimpleVertexReaderTest" : [ "readBasicGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.BulkWriteTest" : [ "bulkWriteSimpleGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.JsonWriterTest" : [ "writerTest" ],
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest" : [ "createDefaultVertexTest", "createWithIDEdgesTest", "createWithIDLabelsEdgesTest", "createWithIDOutgoingEdgesTest", "createWithIDTest", "createWithMissingIDTest" ],
            "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : [ "propertyTypeTest", "writeCloseOpenReadTest", "writeFlushReadTest", "wrongPropertyTypeTest" ],
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.EPGHBaseVertexFormatTest" : [ "vertexInputOutputTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.AggregationTest" : [ "aggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectAndAggregateTest" : [ "selectAndAggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectionTest" : [ "selectionTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.VertexFactory#checkVertexID(java.lang.Long)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest", "readFromJsonTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.VertexFactory#createDefaultVertex(java.lang.Long,java.lang.String,java.util.Map,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest", "readFromJsonTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.VertexFactory#createDefaultVertexWithEdges(java.lang.Long,java.lang.Iterable,java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest", "readFromJsonTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.VertexFactory#createDefaultVertexWithID(java.lang.Long)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest", "readFromJsonTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.VertexFactory#createDefaultVertexWithLabel(java.lang.Long,java.lang.String,java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.BasicHandler" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkLoadDriverTest" : [ "testBulkLoadDriver" ],
            "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest" : [ "testBulkWriteDriver" ],
            "gradoop-coreÂ§org.gradoop.io.reader.AdjacencyListReaderTest" : [ "writeReadExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.BulkLoadTest" : [ "bulkLoadTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.BulkWriteTest" : [ "bulkWriteSimpleGraphTest" ],
            "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : [ "propertyTypeTest", "writeCloseOpenReadTest", "writeFlushReadTest", "wrongPropertyTypeTest" ],
            "gradoop-examplesÂ§org.gradoop.biiig.examples.BTGAnalysisDriverTest" : [ "driverTest" ],
            "gradoop-examplesÂ§org.gradoop.rdf.examples.RDFAnalysisDriverTest" : [ "driverTest" ],
            "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriverTest" : [ "driverTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.EPGHBaseVertexFormatTest" : [ "vertexInputOutputTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.AggregationTest" : [ "aggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectAndAggregateTest" : [ "selectAndAggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectionTest" : [ "selectionTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.BasicHandler#<init>" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.BasicHandler#decodeValueFromBytes(byte[])" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.BasicHandler#decodeValueFromString(byte,java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.BasicHandler#encodeValueToBytes(java.lang.Object)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.BasicHandler#getColumnKeysFromFamiliy(org.apache.hadoop.hbase.client.Result,byte[])" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.BasicHandler#getType(java.lang.Object)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.BasicHandler#readLabel(org.apache.hadoop.hbase.client.Result)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.BasicHandler#readProperties(org.apache.hadoop.hbase.client.Result)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.BasicHandler#writeLabel(org.apache.hadoop.hbase.client.Put,org.gradoop.model.Labeled)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.BasicHandler#writeProperties(org.apache.hadoop.hbase.client.Put,org.gradoop.model.Attributed)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.BasicHandler#writeProperty(org.apache.hadoop.hbase.client.Put,java.lang.String,java.lang.Object)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGGraphHandler#<init>" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGGraphHandler#createTable(org.apache.hadoop.hbase.client.HBaseAdmin,org.apache.hadoop.hbase.HTableDescriptor)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGGraphHandler#readGraph(org.apache.hadoop.hbase.client.Result)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : [ "writeCloseOpenReadTest", "writeFlushReadTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGGraphHandler#writeGraph(org.apache.hadoop.hbase.client.Put,org.gradoop.model.Graph)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : [ "writeCloseOpenReadTest", "writeFlushReadTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#<init>" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#createEdgeIdentifier(org.gradoop.model.Edge)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#createEdgePropertiesString(org.gradoop.model.Edge)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#createTable(org.apache.hadoop.hbase.client.HBaseAdmin,org.apache.hadoop.hbase.HTableDescriptor)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#getRowKey(java.lang.Long)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#readEdge(byte[],java.util.Map)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#readEdges(org.apache.hadoop.hbase.client.Result,byte[])" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#readGraphs(org.apache.hadoop.hbase.client.Result)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#readIncomingEdges(org.apache.hadoop.hbase.client.Result)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#readOutgoingEdges(org.apache.hadoop.hbase.client.Result)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#readVertex(org.apache.hadoop.hbase.client.Result)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#writeEdge(org.apache.hadoop.hbase.client.Put,byte[],org.gradoop.model.Edge)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#writeEdges(org.apache.hadoop.hbase.client.Put,byte[],java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#writeGraphs(org.apache.hadoop.hbase.client.Put,org.gradoop.model.GraphElement)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#writeIncomingEdges(org.apache.hadoop.hbase.client.Put,java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#writeOutgoingEdges(org.apache.hadoop.hbase.client.Put,java.lang.Iterable)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EPGVertexHandler#writeVertex(org.apache.hadoop.hbase.client.Put,org.gradoop.model.Vertex)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.EntityHandler" : { },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStore#<init>(org.apache.hadoop.hbase.client.HTable,org.apache.hadoop.hbase.client.HTable,org.gradoop.storage.hbase.VertexHandler,org.gradoop.storage.hbase.GraphHandler)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStore#close" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStore#readVertex(java.lang.Long)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStore#writeVertex(org.gradoop.model.Vertex)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreFactory#createOrOpenGraphStore(org.apache.hadoop.conf.Configuration,org.gradoop.storage.hbase.VertexHandler,org.gradoop.storage.hbase.GraphHandler)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreFactory#createOrOpenGraphStore(org.apache.hadoop.conf.Configuration,org.gradoop.storage.hbase.VertexHandler,org.gradoop.storage.hbase.GraphHandler,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreFactory#createTablesIfNotExists(org.apache.hadoop.conf.Configuration,org.gradoop.storage.hbase.VertexHandler,org.gradoop.storage.hbase.GraphHandler,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreFactory#deleteGraphStore(org.apache.hadoop.conf.Configuration)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreFactory#deleteGraphStore(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreFactory#deleteTablesIfExists(org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : [ "propertyTypeTest", "writeCloseOpenReadTest", "writeFlushReadTest", "wrongPropertyTypeTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGComputationTestHelper#getConnectedIIG" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGComputationTestHelper#getDisconnectedIIG" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testDisconnectedIIG" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest#compute" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest#testConnectedIIG" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest#testDisconnectedIIG" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testDisconnectedIIG" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest$BTGLineReader#<init>" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest$BTGLineReader#readVertex(java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.examples.BTGAnalysisDriver#runBTGComputation(org.apache.hadoop.conf.Configuration,int,boolean)" : { },
        "gradoop-examplesÂ§org.gradoop.biiig.io.formats.BTGHBaseVertexInputFormat$BTGHBaseVertexReader#getCurrentVertex" : { },
        "gradoop-examplesÂ§org.gradoop.biiig.io.formats.BTGHBaseVertexOutputFormat#<init>" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.io.formats.BTGVertexType#<init>" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest", "readFromJsonTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReader#<init>" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest", "readFromJsonTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReader#addProperties(org.gradoop.model.Attributed,org.codehaus.jettison.json.JSONObject)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest", "readFromJsonTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReader#addProperties(org.gradoop.model.Attributed,org.codehaus.jettison.json.JSONObject,java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest", "readFromJsonTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReader#createFromEdgeLine(org.codehaus.jettison.json.JSONObject)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest", "readFromJsonTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReader#createFromVertexLine(org.codehaus.jettison.json.JSONObject)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest", "readFromJsonTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReader#getKind(org.codehaus.jettison.json.JSONObject)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest", "readFromJsonTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReader#getType(org.codehaus.jettison.json.JSONObject)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest", "readFromJsonTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReader#readVertexList(java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest", "readFromJsonTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest", "readFromJsonTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest#loadJsonToHBaseTest" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest#readFromJsonTest" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "readFromJsonTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest#validateFoodbrokerGraph(org.gradoop.storage.GraphStore)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest#validateVertex(org.gradoop.model.Vertex,int,int,int)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.rdf.examples.RDFAnalysisDriver#runRDFComputation(org.apache.hadoop.conf.Configuration,int,boolean)" : { },
        "gradoop-examplesÂ§org.gradoop.sna.examples.SNAAnalysisDriver#runLabelPropagationComputation(org.apache.hadoop.conf.Configuration,int,boolean)" : { },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReader" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest#checkLabel(org.gradoop.model.Vertex,java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.GiraphClusterTest#setupConfiguration(org.apache.giraph.job.GiraphJob)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.formats.EPGHBaseVertexFormatTest#vertexInputOutputTest" : {
          "testcases" : {
            "gradoop-giraphÂ§org.gradoop.io.formats.EPGHBaseVertexFormatTest" : [ "vertexInputOutputTest" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.formats.EPGHBaseVertexFormatTest$TestComputation#compute(org.apache.giraph.graph.Vertex,java.lang.Iterable)" : { },
        "gradoop-giraphÂ§org.gradoop.io.formats.EPGHBaseVertexInputFormat$EPGHBaseVertexReader#getCurrentVertex" : { },
        "gradoop-giraphÂ§org.gradoop.io.formats.EPGHBaseVertexOutputFormat$EPGHBaseVertexWriter#writeVertex(org.apache.giraph.graph.Vertex)" : { },
        "gradoop-giraphÂ§org.gradoop.io.formats.HBaseVertexOutputFormat#<init>" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ]
          }
        },
        "gradoop-giraphÂ§org.gradoop.io.formats.HBaseVertexOutputFormat#checkOutputSpecs(org.apache.hadoop.mapreduce.JobContext)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ]
          }
        }
      }
    },
    "4d36f223c19cf6f6c805f2277216d6b7f8b6b755" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "937394435a5e1430d025a1d7cc9f47224ea805b0",
      "changedClazzes" : {
        "gradoop-coreÂ§org.gradoop.model.impl.LabeledPropertyContainer" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest" : [ "testBulkWriteDriver" ],
            "gradoop-coreÂ§org.gradoop.io.reader.AdjacencyListReaderTest" : [ "writeReadExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.EPGVertexReaderTest" : [ "readExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.JsonReaderTest" : [ "testReader" ],
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.SimpleVertexReaderTest" : [ "readBasicGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.BulkWriteTest" : [ "bulkWriteSimpleGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.JsonWriterTest" : [ "writerTest" ],
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultEdgeTest" : [ "createWithOtherIDIndexTest", "createWithOtherIDLabelIndexPropertiesTest", "createWithOtherIDLabelIndexTest", "testCompareTo", "testEquals" ],
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultGraphTest" : [ "createDefaultGraphTest", "createWithIDTest" ],
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest" : [ "createDefaultVertexTest", "createWithIDEdgesTest", "createWithIDLabelsEdgesTest", "createWithIDOutgoingEdgesTest", "createWithIDTest" ],
            "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : [ "propertyTypeTest", "writeCloseOpenReadTest", "writeFlushReadTest", "wrongPropertyTypeTest" ],
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest", "readFromJsonTest" ],
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.EPGHBaseVertexFormatTest" : [ "vertexInputOutputTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.AggregationTest" : [ "aggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectAndAggregateTest" : [ "selectAndAggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectionTest" : [ "selectionTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.VertexFactory" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest" : [ "testBulkWriteDriver" ],
            "gradoop-coreÂ§org.gradoop.io.reader.AdjacencyListReaderTest" : [ "writeReadExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.EPGVertexReaderTest" : [ "readExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.JsonReaderTest" : [ "testReader" ],
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.SimpleVertexReaderTest" : [ "readBasicGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.BulkWriteTest" : [ "bulkWriteSimpleGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.JsonWriterTest" : [ "writerTest" ],
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest" : [ "createDefaultVertexTest", "createWithIDEdgesTest", "createWithIDLabelsEdgesTest", "createWithIDOutgoingEdgesTest", "createWithIDTest", "createWithMissingIDTest" ],
            "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : [ "propertyTypeTest", "writeCloseOpenReadTest", "writeFlushReadTest", "wrongPropertyTypeTest" ],
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest", "readFromJsonTest" ],
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.EPGHBaseVertexFormatTest" : [ "vertexInputOutputTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.AggregationTest" : [ "aggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectAndAggregateTest" : [ "selectAndAggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectionTest" : [ "selectionTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.BasicHandler#writeLabel(org.apache.hadoop.hbase.client.Put,org.gradoop.model.Labeled)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest" : [ "testBulkWriteDriver" ],
            "gradoop-coreÂ§org.gradoop.io.reader.AdjacencyListReaderTest" : [ "writeReadExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.BulkWriteTest" : [ "bulkWriteSimpleGraphTest" ],
            "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : [ "propertyTypeTest", "writeCloseOpenReadTest", "writeFlushReadTest", "wrongPropertyTypeTest" ],
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.EPGHBaseVertexFormatTest" : [ "vertexInputOutputTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.AggregationTest" : [ "aggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectAndAggregateTest" : [ "selectAndAggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectionTest" : [ "selectionTest" ]
          }
        }
      }
    },
    "067f7fccfb75ba7106cf722823b36b566f74b37e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4d36f223c19cf6f6c805f2277216d6b7f8b6b755",
      "changedClazzes" : { }
    },
    "a99a31fa12a581ae834079e904627a5bd695581c" : {
      "running" : false,
      "jdk" : 8,
      "changedClazzes" : { }
    },
    "40e3504eb2ab28d4b579eb552d460f5def360a52" : {
      "running" : false,
      "jdk" : 8,
      "changedClazzes" : { }
    },
    "790567d09f1b98a693fbfcaab289c3d013cfd6fb" : {
      "running" : false,
      "jdk" : 8,
      "changedClazzes" : { }
    },
    "cf077b5e0bebc04af3fce4444ba8dd6aba9409f5" : {
      "running" : false,
      "jdk" : 8,
      "changedClazzes" : { }
    },
    "fbb894941d7da6431d1a7d8622295ec9766bafca" : {
      "running" : false,
      "jdk" : 8,
      "changedClazzes" : { }
    },
    "ae1ffb51a2621e06e856b7130c142cb6097ed8a7" : {
      "running" : false,
      "jdk" : 8,
      "changedClazzes" : { }
    },
    "1923ba1fbc35f6ab3ae38ee8494358abccd463e8" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "067f7fccfb75ba7106cf722823b36b566f74b37e",
      "changedClazzes" : {
        "gradoop-coreÂ§org.gradoop.GradoopTest#validateBasicGraphVertices(java.util.List)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.SimpleVertexReaderTest" : [ "readBasicGraphTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.GradoopTest#validateExtendedGraphVertices(java.util.List)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.AdjacencyListReaderTest" : [ "writeReadExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.EPGVertexReaderTest" : [ "readExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.JsonReaderTest" : [ "testReader" ],
            "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : [ "writeCloseOpenReadTest", "writeFlushReadTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.formats.EPGAttributedWritable" : { },
        "gradoop-coreÂ§org.gradoop.io.formats.EPGEdgeValueWritable#<init>(org.gradoop.model.Edge)" : { },
        "gradoop-coreÂ§org.gradoop.io.formats.EPGVertexIdentifierWritable" : { },
        "gradoop-coreÂ§org.gradoop.io.reader.BulkLoadEPG#addVertexToContext(org.gradoop.io.reader.Context,org.gradoop.model.Vertex)" : { },
        "gradoop-coreÂ§org.gradoop.io.reader.RDFReader#readVertexList(java.lang.String)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest#checkSimpleRDFNTripleInputTest" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.writer.JsonWriter#writeVertex(org.gradoop.model.Vertex)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.io.writer.JsonWriterTest" : [ "writerTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.io.writer.SimpleVertexWriter#writeVertex(org.gradoop.model.Vertex)" : { },
        "gradoop-coreÂ§org.gradoop.model.Attributed" : { },
        "gradoop-coreÂ§org.gradoop.model.Identifiable" : { },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultGraph#toString" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : [ "writeCloseOpenReadTest", "writeFlushReadTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultGraphTest#createDefaultGraphTest" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultGraphTest" : [ "createDefaultGraphTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultGraphTest#createWithIDTest" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultGraphTest" : [ "createWithIDTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertex#toString" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest" : [ "testBulkWriteDriver" ],
            "gradoop-coreÂ§org.gradoop.io.reader.AdjacencyListReaderTest" : [ "writeReadExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.EPGVertexReaderTest" : [ "readExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.JsonReaderTest" : [ "testReader" ],
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.BulkWriteTest" : [ "bulkWriteSimpleGraphTest" ],
            "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : [ "propertyTypeTest", "writeCloseOpenReadTest", "writeFlushReadTest", "wrongPropertyTypeTest" ],
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.EPGHBaseVertexFormatTest" : [ "vertexInputOutputTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.AggregationTest" : [ "aggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectAndAggregateTest" : [ "selectAndAggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectionTest" : [ "selectionTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest#createDefaultVertexTest" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest" : [ "createDefaultVertexTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest#createWithIDEdgesTest" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest" : [ "createWithIDEdgesTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest#createWithIDLabelsEdgesTest" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest" : [ "createWithIDLabelsEdgesTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest#createWithIDOutgoingEdgesTest" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest" : [ "createWithIDOutgoingEdgesTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest#createWithIDTest" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest" : [ "createWithIDTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.LabeledPropertyContainer" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest" : [ "testBulkWriteDriver" ],
            "gradoop-coreÂ§org.gradoop.io.reader.AdjacencyListReaderTest" : [ "writeReadExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.EPGVertexReaderTest" : [ "readExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.JsonReaderTest" : [ "testReader" ],
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.SimpleVertexReaderTest" : [ "readBasicGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.BulkWriteTest" : [ "bulkWriteSimpleGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.JsonWriterTest" : [ "writerTest" ],
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultEdgeTest" : [ "createWithOtherIDIndexTest", "createWithOtherIDLabelIndexPropertiesTest", "createWithOtherIDLabelIndexTest", "testCompareTo", "testEquals" ],
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultGraphTest" : [ "createDefaultGraphTest", "createWithIDTest" ],
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest" : [ "createDefaultVertexTest", "createWithIDEdgesTest", "createWithIDLabelsEdgesTest", "createWithIDOutgoingEdgesTest", "createWithIDTest" ],
            "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : [ "propertyTypeTest", "writeCloseOpenReadTest", "writeFlushReadTest", "wrongPropertyTypeTest" ],
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest", "readFromJsonTest" ],
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.EPGHBaseVertexFormatTest" : [ "vertexInputOutputTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.AggregationTest" : [ "aggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectAndAggregateTest" : [ "selectAndAggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectionTest" : [ "selectionTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.model.impl.PropertyContainer" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest" : [ "testBulkWriteDriver" ],
            "gradoop-coreÂ§org.gradoop.io.reader.AdjacencyListReaderTest" : [ "writeReadExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.EPGVertexReaderTest" : [ "readExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.JsonReaderTest" : [ "testReader" ],
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "checkSimpleRDFNTripleInputTest", "countGeneratedVertices", "loadRDFToHBaseTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.SimpleVertexReaderTest" : [ "readBasicGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.BulkWriteTest" : [ "bulkWriteSimpleGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.JsonWriterTest" : [ "writerTest" ],
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultEdgeTest" : [ "createWithOtherIDIndexTest", "createWithOtherIDLabelIndexPropertiesTest", "createWithOtherIDLabelIndexTest", "testCompareTo", "testEquals" ],
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultGraphTest" : [ "createDefaultGraphTest", "createWithIDTest" ],
            "gradoop-coreÂ§org.gradoop.model.impl.DefaultVertexTest" : [ "createDefaultVertexTest", "createWithIDEdgesTest", "createWithIDLabelsEdgesTest", "createWithIDOutgoingEdgesTest", "createWithIDTest" ],
            "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : [ "propertyTypeTest", "writeCloseOpenReadTest", "writeFlushReadTest", "wrongPropertyTypeTest" ],
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest", "readFromJsonTest" ],
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest", "checkNodeCSVInputTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.EPGHBaseVertexFormatTest" : [ "vertexInputOutputTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.AggregationTest" : [ "aggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectAndAggregateTest" : [ "selectAndAggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectionTest" : [ "selectionTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStore#writeGraph(org.gradoop.model.Graph)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : [ "writeCloseOpenReadTest", "writeFlushReadTest" ]
          }
        },
        "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStore#writeVertex(org.gradoop.model.Vertex)" : {
          "testcases" : {
            "gradoop-coreÂ§org.gradoop.drivers.BulkWriteDriverTest" : [ "testBulkWriteDriver" ],
            "gradoop-coreÂ§org.gradoop.io.reader.AdjacencyListReaderTest" : [ "writeReadExtendedGraphTest" ],
            "gradoop-coreÂ§org.gradoop.io.reader.RDFReaderTest" : [ "loadRDFToHBaseTest" ],
            "gradoop-coreÂ§org.gradoop.io.writer.BulkWriteTest" : [ "bulkWriteSimpleGraphTest" ],
            "gradoop-coreÂ§org.gradoop.storage.hbase.HBaseGraphStoreTest" : [ "propertyTypeTest", "writeCloseOpenReadTest", "writeFlushReadTest", "wrongPropertyTypeTest" ],
            "gradoop-examplesÂ§org.gradoop.biiig.algorithms.BTGHBaseComputationTest" : [ "testConnectedIIG", "testDisconnectedIIG" ],
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputationTest" : [ "extendedGraphVertexIOTest" ],
            "gradoop-giraphÂ§org.gradoop.algorithms.HBaseLabelPropagationComputationTest" : [ "testConnectedGraph" ],
            "gradoop-giraphÂ§org.gradoop.io.formats.EPGHBaseVertexFormatTest" : [ "vertexInputOutputTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.AggregationTest" : [ "aggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectAndAggregateTest" : [ "selectAndAggregateTest" ],
            "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectionTest" : [ "selectionTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReader#addProperties(org.gradoop.model.Attributed,org.codehaus.jettison.json.JSONObject,java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.biiig.io.reader.FoodBrokerReaderTest" : [ "loadJsonToHBaseTest", "readFromJsonTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReader#readEdges(java.util.List,java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReader#readVertex(java.lang.String)" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest#checkEdgeCSVInputTest" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkEdgeCSVInputTest" ]
          }
        },
        "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest#checkNodeCSVInputTest" : {
          "testcases" : {
            "gradoop-examplesÂ§org.gradoop.sna.io.reader.CSVReaderTest" : [ "checkNodeCSVInputTest" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.EPEdgeData" : { },
        "gradoop-flinkÂ§org.gradoop.model.EPFlinkTest" : { },
        "gradoop-flinkÂ§org.gradoop.model.EPFlinkTest#createSocialGraph" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testGetEdges", "testGetVertices", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.EPGraphData" : { },
        "gradoop-flinkÂ§org.gradoop.model.EPPatternGraph" : { },
        "gradoop-flinkÂ§org.gradoop.model.EPVertexData" : { },
        "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest#testGetDatabaseGraph" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.WorkflowTest" : { },
        "gradoop-flinkÂ§org.gradoop.model.helper.Aggregate" : { },
        "gradoop-flinkÂ§org.gradoop.model.helper.Algorithm" : { },
        "gradoop-flinkÂ§org.gradoop.model.helper.BinaryFunction" : { },
        "gradoop-flinkÂ§org.gradoop.model.helper.FlinkConstants" : { },
        "gradoop-flinkÂ§org.gradoop.model.helper.Order" : { },
        "gradoop-flinkÂ§org.gradoop.model.helper.Predicate" : { },
        "gradoop-flinkÂ§org.gradoop.model.helper.SystemProperties" : { },
        "gradoop-flinkÂ§org.gradoop.model.helper.UnaryFunction" : { },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPEdgeCollection" : { },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPEdgeCollection#<init>(org.apache.flink.api.java.DataSet)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testGetEdges", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPEdgeCollection#collect" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPEdgeCollection#size" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testGetEdges" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEdgeData" : { },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEdgeData#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testGetEdges", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEdgeData#<init>(java.lang.Long,java.lang.String,java.lang.Long,java.lang.Long)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testGetEdges", "testGetVertices", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEdgeData#<init>(java.lang.Long,java.lang.String,java.lang.Long,java.lang.Long,java.util.Map)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testGetEdges", "testGetVertices", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEdgeData#getSourceVertex" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testGetEdges", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEdgeData#getTargetVertex" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testGetEdges", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEdgeData#toString" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testGetEdges", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEntity" : { },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEntity#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testGetEdges", "testGetVertices", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEntity#<init>(java.lang.Long,java.lang.String,java.util.Map)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testGetEdges", "testGetVertices", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEntity#equals(java.lang.Object)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEntity#getId" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testGetEdges", "testGetVertices", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEntity#getLabel" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEntity#toString" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testGetEdges", "testGetVertices", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkGraphData" : { },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkGraphData#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkGraphData#<init>(java.lang.Long,java.lang.String)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkGraphData#<init>(java.lang.Long,java.lang.String,java.util.Map)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testGetEdges", "testGetVertices", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkVertexData" : { },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkVertexData#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testGetVertices", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkVertexData#<init>(java.lang.Long,java.lang.String,java.util.Map)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testGetEdges", "testGetVertices", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkVertexData#<init>(java.lang.Long,java.lang.String,java.util.Map,java.util.Set)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testGetEdges", "testGetVertices", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkVertexData#addGraph(java.lang.Long)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkVertexData#getGraphs" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkVertexData#toString" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testGetVertices", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph" : { },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph#<init>(org.apache.flink.graph.Graph,org.gradoop.model.impl.EPFlinkGraphData,org.apache.flink.api.java.ExecutionEnvironment)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testGetEdges", "testGetVertices", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph#combine(org.gradoop.model.impl.EPGraph)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph#fromGraph(org.apache.flink.graph.Graph,org.gradoop.model.impl.EPFlinkGraphData,org.apache.flink.api.java.ExecutionEnvironment)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testGetEdges", "testGetVertices", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph#getEdgeCount" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph#getEdges" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testGetEdges", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph#getId" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph#getIncomingEdges(java.lang.Long)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testGetEdges" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph#getLabel" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph#getOutgoingEdges(java.lang.Long)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testGetEdges" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph#getVertexCount" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph#getVertices" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testGetVertices", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph#overlap(org.gradoop.model.impl.EPGraph)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$EdgeDuplicationCheck#<init>(long)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$EdgeDuplicationCheck#reduce(java.lang.Iterable,org.apache.flink.util.Collector)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$EdgeKeySelector#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$EdgeKeySelector#getKey(org.apache.flink.graph.Edge)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$VertexDuplicationCheck#<init>(long)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$VertexDuplicationCheck#reduce(java.lang.Iterable,org.apache.flink.util.Collector)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$VertexKeySelector#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$VertexKeySelector#getKey(org.apache.flink.graph.Vertex)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$VertexToGraphUpdater#<init>(long)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$VertexToGraphUpdater#map(org.apache.flink.graph.Vertex)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollection" : { },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollection#<init>(org.apache.flink.graph.Graph,org.apache.flink.api.java.DataSet,org.apache.flink.api.java.ExecutionEnvironment)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testGetEdges", "testGetVertices", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollection#getGraph" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testGetEdges", "testGetVertices" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollection#getGraph(java.lang.Long)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest#testGetGraph" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testGetEdges", "testGetVertices", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest#testCombine" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest#testGetEdges" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testGetEdges" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest#testGetVertices" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testGetVertices" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest#testOverlap" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPVertexCollection" : { },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPVertexCollection#<init>(org.apache.flink.api.java.DataSet)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testGetVertices", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPVertexCollection#collect" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPVertexCollection#size" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testGetVertices" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore" : { },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore#<init>(org.apache.flink.api.java.DataSet,org.apache.flink.api.java.DataSet,org.apache.flink.api.java.DataSet,org.apache.flink.api.java.ExecutionEnvironment)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testGetEdges", "testGetVertices", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore#fromCollection(java.util.Collection,java.util.Collection,java.util.Collection,org.apache.flink.api.java.ExecutionEnvironment)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testGetEdges", "testGetVertices", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore#getCollection" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore#getDatabaseGraph" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testGetEdges", "testGetVertices" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore#getGraph(java.lang.Long)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore$EdgesConverter#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testGetEdges", "testGetVertices", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore$EdgesConverter#map(org.gradoop.model.impl.EPFlinkEdgeData)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testGetEdges", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore$GraphsConverter#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testGetEdges", "testGetVertices", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore$GraphsConverter#map(org.gradoop.model.impl.EPFlinkGraphData)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore$VerticesConverter#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testGetEdges", "testGetVertices", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore$VerticesConverter#map(org.gradoop.model.impl.EPFlinkVertexData)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testGetVertices", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.Subgraph" : { },
        "gradoop-flinkÂ§org.gradoop.model.impl.Subgraph#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.Subgraph#<init>(org.gradoop.model.impl.K,org.gradoop.model.impl.V)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.Subgraph#getId" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.Subgraph#getValue" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombine", "testOverlap" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.operators.EPCollectionOperators" : { },
        "gradoop-flinkÂ§org.gradoop.model.operators.EPEdgeCollectionOperators" : { },
        "gradoop-flinkÂ§org.gradoop.model.operators.EPGraphCollectionOperators" : { },
        "gradoop-flinkÂ§org.gradoop.model.operators.EPGraphOperators" : { },
        "gradoop-flinkÂ§org.gradoop.model.operators.EPVertexCollectionOperators" : { },
        "gradoop-flinkÂ§org.gradoop.model.store.EPGraphStore" : { },
        "gradoop-giraphÂ§org.gradoop.algorithms.ConnectedComponentsComputation#compute(org.apache.giraph.graph.Vertex,java.lang.Iterable)" : { },
        "gradoop-giraphÂ§org.gradoop.io.formats.EPGHBaseVertexFormatTest$TestComputation#compute(org.apache.giraph.graph.Vertex,java.lang.Iterable)" : { },
        "gradoop-giraphÂ§org.gradoop.io.formats.EPGHBaseVertexOutputFormat$EPGHBaseVertexWriter#writeVertex(org.apache.giraph.graph.Vertex)" : { },
        "gradoop-giraphÂ§org.gradoop.io.formats.SubgraphExtractionVertexOutputFormat$SubgraphExtractionVertexWriter#writeVertex(org.apache.giraph.graph.Vertex)" : { },
        "gradoop-mapreduceÂ§org.gradoop.algorithms.AggregationTest$AggregateTableReducer#reduce(org.apache.hadoop.io.LongWritable,java.lang.Iterable,org.gradoop.algorithms.Context)" : { },
        "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectAndAggregate$AggregateReducer#reduce(org.apache.hadoop.io.LongWritable,java.lang.Iterable,org.gradoop.algorithms.Context)" : { },
        "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectAndAggregate$SelectMapper#map(org.apache.hadoop.hbase.io.ImmutableBytesWritable,org.apache.hadoop.hbase.client.Result,org.gradoop.algorithms.Context)" : { },
        "gradoop-mapreduceÂ§org.gradoop.algorithms.SelectionTest$SelectionTableReducer#reduce(org.apache.hadoop.io.LongWritable,java.lang.Iterable,org.gradoop.algorithms.Context)" : { },
        "gradoop-mapreduceÂ§org.gradoop.algorithms.Sort$SortMapper#map(org.apache.hadoop.hbase.io.ImmutableBytesWritable,org.apache.hadoop.hbase.client.Result,org.gradoop.algorithms.Context)" : { },
        "gradoop-mapreduceÂ§org.gradoop.algorithms.Summarize$SummarizeMapper#map(org.apache.hadoop.hbase.io.ImmutableBytesWritable,org.apache.hadoop.hbase.client.Result,org.gradoop.algorithms.Context)" : { }
      }
    },
    "1b4a6fd4b841afc9ca6448bbf4cdc5502ee47295" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "1923ba1fbc35f6ab3ae38ee8494358abccd463e8",
      "changedClazzes" : {
        "gradoop-flinkÂ§org.gradoop.model.EPFlinkTest#createSocialGraph" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.helper.FlinkConstants" : { },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPEdgeCollection#<init>(org.apache.flink.api.java.DataSet)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPEdgeCollection#collect" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPEdgeCollection#print" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEdgeData#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEdgeData#<init>(java.lang.Long,java.lang.String,java.lang.Long,java.lang.Long)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEdgeData#<init>(java.lang.Long,java.lang.String,java.lang.Long,java.lang.Long,java.util.Map)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEdgeData#getSourceVertex" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEdgeData#getTargetVertex" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEdgeData#toString" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEntity#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEntity#<init>(java.lang.Long,java.lang.String,java.util.Map)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEntity#equals(java.lang.Object)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEntity#getId" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEntity#toString" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkGraphData#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkGraphData#<init>(java.lang.Long,java.lang.String)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkGraphData#<init>(java.lang.Long,java.lang.String,java.util.Map)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkVertexData#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkVertexData#<init>(java.lang.Long,java.lang.String,java.util.Map)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkVertexData#<init>(java.lang.Long,java.lang.String,java.util.Map,java.util.Set)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkVertexData#addGraph(java.lang.Long)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkVertexData#getGraphs" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkVertexData#toString" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testGetEdges", "testGetVertices" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph#<init>(org.apache.flink.graph.Graph,org.gradoop.model.impl.EPFlinkGraphData,org.apache.flink.api.java.ExecutionEnvironment)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph#combine(org.gradoop.model.impl.EPGraph)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph#exclude(org.gradoop.model.impl.EPGraph)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph#fromGraph(org.apache.flink.graph.Graph,org.gradoop.model.impl.EPFlinkGraphData,org.apache.flink.api.java.ExecutionEnvironment)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph#getEdgeCount" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph#getEdges" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph#getId" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph#getVertexCount" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph#getVertices" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph#overlap(org.gradoop.model.impl.EPGraph)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$EdgeDuplicationCheck" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$EdgeGroupReducer#<init>(long)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$EdgeGroupReducer#reduce(java.lang.Iterable,org.apache.flink.util.Collector)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$EdgeKeySelector" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$EdgeKeySelector#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$EdgeKeySelector#getKey(org.apache.flink.graph.Edge)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$EdgeSourceVertexKeySelector#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$EdgeSourceVertexKeySelector#getKey(org.apache.flink.graph.Edge)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$EdgeTargetVertexKeySelector#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$EdgeTargetVertexKeySelector#getKey(org.apache.flink.graph.Edge)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$VertexDuplicationCheck" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$VertexGroupReducer#<init>(long)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$VertexGroupReducer#<init>(long,java.lang.Long,java.lang.Long)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$VertexGroupReducer#reduce(java.lang.Iterable,org.apache.flink.util.Collector)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$VertexKeySelector" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$VertexKeySelector#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$VertexKeySelector#getKey(org.apache.flink.graph.Vertex)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$VertexToGraphUpdater" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$VertexToGraphUpdater#<init>(long)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$VertexToGraphUpdater#map(org.apache.flink.graph.Vertex)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollection#<init>(org.apache.flink.graph.Graph,org.apache.flink.api.java.DataSet,org.apache.flink.api.java.ExecutionEnvironment)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollection#getGraph(java.lang.Long)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testGetEdges", "testGetVertices", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest#testCombineWithNonOverlappingGraphs" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest#testCombineWithOverlappingGraphs" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithOverlappingGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest#testCombineWithSameGraphs" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest#testExcludeWithNonOverlappingGraphs" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testExcludeWithNonOverlappingGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest#testExcludeWithOverlappingGraphs" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testExcludeWithOverlappingGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest#testExcludeWithSameGraphs" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testExcludeWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest#testOverlapWithNonOverlappingGraphs" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testOverlapWithNonOverlappingGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest#testOverlapWithOverlappingGraphs" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testOverlapWithOverlappingGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest#testOverlapWithSameGraphs" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPVertexCollection#<init>(org.apache.flink.api.java.DataSet)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPVertexCollection#collect" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPVertexCollection#print" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testExcludeWithNonOverlappingGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore#<init>(org.apache.flink.api.java.DataSet,org.apache.flink.api.java.DataSet,org.apache.flink.api.java.DataSet,org.apache.flink.api.java.ExecutionEnvironment)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore#fromCollection(java.util.Collection,java.util.Collection,java.util.Collection,org.apache.flink.api.java.ExecutionEnvironment)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore#getGraph(java.lang.Long)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore$EdgesConverter#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore$EdgesConverter#map(org.gradoop.model.impl.EPFlinkEdgeData)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore$GraphsConverter#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore$GraphsConverter#map(org.gradoop.model.impl.EPFlinkGraphData)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore$VerticesConverter#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore$VerticesConverter#map(org.gradoop.model.impl.EPFlinkVertexData)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.Subgraph#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.Subgraph#<init>(org.gradoop.model.impl.K,org.gradoop.model.impl.V)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.Subgraph#getId" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.Subgraph#getValue" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        }
      }
    },
    "a9b7276c031622a1967a41f19c6ca9127fdc8093" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "1b4a6fd4b841afc9ca6448bbf4cdc5502ee47295",
      "changedClazzes" : { }
    },
    "9df2c3f4b24a546b9a532421faaa27927a98d937" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a9b7276c031622a1967a41f19c6ca9127fdc8093",
      "changedClazzes" : {
        "gradoop-flinkÂ§org.gradoop.model.EPFlinkTest#createSocialGraph" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.WorkflowTest#clusterCharacteristicPatterns" : { },
        "gradoop-flinkÂ§org.gradoop.model.WorkflowTest#topRevenueBusinessProcess" : { },
        "gradoop-flinkÂ§org.gradoop.model.helper.Aggregate" : { },
        "gradoop-flinkÂ§org.gradoop.model.helper.UnaryFunction" : { },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEdgeData" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testGetEdges", "testGetVertices", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEdgeData#<init>(java.lang.Long,java.lang.String,java.lang.Long,java.lang.Long)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEdgeData#<init>(java.lang.Long,java.lang.String,java.lang.Long,java.lang.Long,java.util.Map)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEntity" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testGetEdges", "testGetVertices", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEntity#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEntity#<init>(java.lang.Long,java.lang.String,java.util.Map)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEntity#<init>(org.gradoop.model.impl.EPFlinkEntity)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEntity#getId" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEntity#getLabel" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEntity#getProperties" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEntity#getProperty(java.lang.String)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEntity#getPropertyCount" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEntity#setProperty(java.lang.String,java.lang.Object)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEntity#toString" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkGraphData" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testGetEdges", "testGetVertices", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkGraphData#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkGraphData#<init>(java.lang.Long,java.lang.String,java.util.Map)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkGraphData#<init>(org.gradoop.model.impl.EPFlinkGraphData)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkVertexData" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testGetEdges", "testGetVertices", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkVertexData#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkVertexData#<init>(java.lang.Long,java.lang.String,java.util.Map)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkVertexData#<init>(java.lang.Long,java.lang.String,java.util.Map,java.util.Set)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkVertexData#getGraphs" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkVertexData#toString" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testGetEdges", "testGetVertices", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph#<init>(org.apache.flink.graph.Graph,org.gradoop.model.impl.EPFlinkGraphData,org.apache.flink.api.java.ExecutionEnvironment)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph#aggregate(java.lang.String,org.gradoop.model.helper.Aggregate)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph#fromGraph(org.apache.flink.graph.Graph,org.gradoop.model.impl.EPFlinkGraphData,org.apache.flink.api.java.ExecutionEnvironment)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph#getProperty(java.lang.String)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph#getPropertyCount" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph#getVertices" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$EdgeGroupReducer" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$EdgeKeySelector" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$EdgeSourceVertexKeySelector" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$EdgeTargetVertexKeySelector" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$VertexGroupReducer" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$VertexKeySelector" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$VertexToGraphUpdater" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollection#<init>(org.apache.flink.graph.Graph,org.apache.flink.api.java.DataSet,org.apache.flink.api.java.ExecutionEnvironment)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollection#getGraph(java.lang.Long)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate", "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testGetEdges", "testGetVertices", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest#testAggregate" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPVertexCollection#<init>(org.apache.flink.api.java.DataSet)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPVertexCollection#size" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore#<init>(org.apache.flink.api.java.DataSet,org.apache.flink.api.java.DataSet,org.apache.flink.api.java.DataSet,org.apache.flink.api.java.ExecutionEnvironment)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore#fromCollection(java.util.Collection,java.util.Collection,java.util.Collection,org.apache.flink.api.java.ExecutionEnvironment)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore#getGraph(java.lang.Long)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore$EdgesConverter#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore$GraphsConverter#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore$GraphsConverter#map(org.gradoop.model.impl.EPFlinkGraphData)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore$VerticesConverter#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore$VerticesConverter#map(org.gradoop.model.impl.EPFlinkVertexData)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.Subgraph#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.Subgraph#<init>(org.gradoop.model.impl.K,org.gradoop.model.impl.V)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.Subgraph#getId" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.Subgraph#getValue" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.operators.EPGraphOperators" : { }
      }
    },
    "1079c7754522f1e63a3495f6f01c115ea4b045f6" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9df2c3f4b24a546b9a532421faaa27927a98d937",
      "changedClazzes" : {
        "gradoop-flinkÂ§org.gradoop.model.EPFlinkTest#createSocialGraph" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testSummarizeWithVertexGroupingKeys" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.WorkflowTest" : { },
        "gradoop-flinkÂ§org.gradoop.model.helper.FlinkConstants" : { },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEdgeData#<init>(java.lang.Long,java.lang.String,java.lang.Long,java.lang.Long)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testSummarizeWithVertexGroupingKeys" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEdgeData#<init>(java.lang.Long,java.lang.String,java.lang.Long,java.lang.Long,java.util.Map)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testSummarizeWithVertexGroupingKeys" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEntity#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testSummarizeWithVertexGroupingKeys" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEntity#<init>(java.lang.Long,java.lang.String,java.util.Map)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testSummarizeWithVertexGroupingKeys" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEntity#getId" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testSummarizeWithVertexGroupingKeys" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkEntity#toString" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testSummarizeWithVertexGroupingKeys" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkGraphData#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testSummarizeWithVertexGroupingKeys" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkGraphData#<init>(java.lang.Long,java.lang.String,java.util.Map)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testSummarizeWithVertexGroupingKeys" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkVertexData#<init>(java.lang.Long,java.lang.String,java.util.Map)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testSummarizeWithVertexGroupingKeys" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPFlinkVertexData#<init>(java.lang.Long,java.lang.String,java.util.Map,java.util.Set)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testSummarizeWithVertexGroupingKeys" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.FlinkGraphStoreTest" : [ "testGetDatabaseGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollectionTest" : [ "testGetGraph" ],
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate", "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testGetEdges", "testGetVertices", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph#<init>(org.apache.flink.graph.Graph,org.gradoop.model.impl.EPFlinkGraphData,org.apache.flink.api.java.ExecutionEnvironment)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testSummarizeWithVertexGroupingKeys" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph#fromGraph(org.apache.flink.graph.Graph,org.gradoop.model.impl.EPFlinkGraphData,org.apache.flink.api.java.ExecutionEnvironment)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testSummarizeWithVertexGroupingKeys" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph#summarize(java.util.List,org.gradoop.model.helper.Aggregate,java.util.List,org.gradoop.model.helper.Aggregate)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testSummarizeWithVertexGroupingKeys" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$EdgeGroupReducer" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$EdgeKeySelector" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$EdgeSourceVertexKeySelector" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$EdgeTargetVertexKeySelector" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$VertexGroupReducer" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$VertexKeySelector" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraph$VertexToGraphUpdater" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollection#<init>(org.apache.flink.graph.Graph,org.apache.flink.api.java.DataSet,org.apache.flink.api.java.ExecutionEnvironment)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testSummarizeWithVertexGroupingKeys" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphCollection#getGraph(java.lang.Long)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testSummarizeWithVertexGroupingKeys" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testAggregate", "testCombineWithNonOverlappingGraphs", "testCombineWithOverlappingGraphs", "testCombineWithSameGraphs", "testExcludeWithNonOverlappingGraphs", "testExcludeWithOverlappingGraphs", "testExcludeWithSameGraphs", "testGetEdges", "testGetVertices", "testOverlapWithNonOverlappingGraphs", "testOverlapWithOverlappingGraphs", "testOverlapWithSameGraphs", "testSummarizeWithVertexGroupingKeys" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest#testSummarizeWithVertexGroupingKeys" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testSummarizeWithVertexGroupingKeys" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore#<init>(org.apache.flink.api.java.DataSet,org.apache.flink.api.java.DataSet,org.apache.flink.api.java.DataSet,org.apache.flink.api.java.ExecutionEnvironment)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testSummarizeWithVertexGroupingKeys" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore#fromCollection(java.util.Collection,java.util.Collection,java.util.Collection,org.apache.flink.api.java.ExecutionEnvironment)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testSummarizeWithVertexGroupingKeys" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore#getGraph(java.lang.Long)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testSummarizeWithVertexGroupingKeys" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore$EdgesConverter#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testSummarizeWithVertexGroupingKeys" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore$GraphsConverter#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testSummarizeWithVertexGroupingKeys" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore$GraphsConverter#map(org.gradoop.model.impl.EPFlinkGraphData)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testSummarizeWithVertexGroupingKeys" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.FlinkGraphStore$VerticesConverter#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testSummarizeWithVertexGroupingKeys" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.Subgraph#<init>" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testSummarizeWithVertexGroupingKeys" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.Subgraph#<init>(org.gradoop.model.impl.K,org.gradoop.model.impl.V)" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testSummarizeWithVertexGroupingKeys" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.Subgraph#getId" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testSummarizeWithVertexGroupingKeys" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.impl.Subgraph#getValue" : {
          "testcases" : {
            "gradoop-flinkÂ§org.gradoop.model.impl.EPGraphTest" : [ "testSummarizeWithVertexGroupingKeys" ]
          }
        },
        "gradoop-flinkÂ§org.gradoop.model.operators.EPGraphOperators" : { }
      }
    }
  },
  "android" : false
}