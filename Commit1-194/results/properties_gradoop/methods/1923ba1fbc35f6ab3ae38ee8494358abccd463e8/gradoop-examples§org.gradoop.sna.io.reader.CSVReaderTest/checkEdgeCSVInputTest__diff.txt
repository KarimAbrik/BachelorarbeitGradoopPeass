@Test                                                                                                  @Test                                                                                               
public void checkEdgeCSVInputTest() {                                                                  public void checkEdgeCSVInputTest() {                                                               
List&lt;Vertex&gt; vlist = createEdgesFromCSV();                                                       List&lt;Vertex&gt; vlist = createEdgesFromCSV();                                                    
for (Vertex v : vlist) {                                                                               for (Vertex v : vlist) {                                                                            
long id = v.getID();                                                                                 | long id = v.getId();                                                                                
assertEquals(vlist.size(), 4);                                                                         assertEquals(vlist.size(), 4);                                                                      
if (id == person2) {                                                                                   if (id == person2) {                                                                                
assertEquals(v.getOutgoingDegree(), 1);                                                                assertEquals(v.getOutgoingDegree(), 1);                                                             
assertEquals(v.getIncomingDegree(), 0);                                                                assertEquals(v.getIncomingDegree(), 0);                                                             
checkOutgoingEdge(Lists.newArrayList(v.getOutgoingEdges()));                                           checkOutgoingEdge(Lists.newArrayList(v.getOutgoingEdges()));                                        
} else if (id == person3) {                                                                            } else if (id == person3) {                                                                         
assertEquals(v.getIncomingDegree(), 1);                                                                assertEquals(v.getIncomingDegree(), 1);                                                             
assertEquals(v.getOutgoingDegree(), 0);                                                                assertEquals(v.getOutgoingDegree(), 0);                                                             
checkIncomingEdge(Lists.newArrayList(v.getIncomingEdges()));                                           checkIncomingEdge(Lists.newArrayList(v.getIncomingEdges()));                                        
} else if (id == person4) {                                                                            } else if (id == person4) {                                                                         
assertEquals(v.getIncomingDegree(), 0);                                                                assertEquals(v.getIncomingDegree(), 0);                                                             
assertEquals(v.getOutgoingDegree(), 1);                                                                assertEquals(v.getOutgoingDegree(), 1);                                                             
checkOutgoingEdge(Lists.newArrayList(v.getOutgoingEdges()));                                           checkOutgoingEdge(Lists.newArrayList(v.getOutgoingEdges()));                                        
} else if (id == person5) {                                                                            } else if (id == person5) {                                                                         
assertEquals(v.getIncomingDegree(), 1);                                                                assertEquals(v.getIncomingDegree(), 1);                                                             
assertEquals(v.getOutgoingDegree(), 0);                                                                assertEquals(v.getOutgoingDegree(), 0);                                                             
checkIncomingEdge(Lists.newArrayList(v.getIncomingEdges()));                                           checkIncomingEdge(Lists.newArrayList(v.getIncomingEdges()));                                        
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
