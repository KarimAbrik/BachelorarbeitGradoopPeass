{
  "url" : "https://github.com/dbs-leipzig/gradoop.git",
  "commits" : {
    "db83047bafb7b7996092ef440e3404e28a5d4851" : { },
    "ab8b08b9dedd67f3dec23bd6977aa254885c5827" : {
      "predecessor" : "db83047bafb7b7996092ef440e3404e28a5d4851"
    },
    "91fba6c6af463927eb523e6b39a85bed50a8d56f" : {
      "testcases" : {
        "gradoop-temporal§org.gradoop.temporal.model.impl.operators.keyedgrouping.TemporalGroupingTest" : [ "testDurationKeyFunctionOnGraph", "testTimeIntervalKeyFunctionOnGraph", "testTimeStampKeyFunctionOnGraph" ]
      },
      "predecessor" : "ab8b08b9dedd67f3dec23bd6977aa254885c5827"
    },
    "143c4aa1665245208d66ecf50929f33dbac57723" : {
      "predecessor" : "91fba6c6af463927eb523e6b39a85bed50a8d56f"
    },
    "89c0c1cb77cbb4bf83cb737362e33cbed7e94a8f" : { },
    "467955d07dd3b28360e17505752b78a4461e5afe" : {
      "testcases" : {
        "gradoop-flink§org.gradoop.flink.io.impl.csv.CSVDataSinkTest" : [ "testWrite", "testWriteExtendedProperties", "testWriteMetadataCsvDistributed", "testWriteMetadataCsvLocal", "testWriteWithDelimiterCharacters", "testWriteWithDifferentPropertyTypes", "testWriteWithSameLabel" ],
        "gradoop-flink§org.gradoop.flink.io.impl.csv.indexed.IndexedCSVDataSinkTest" : [ "testDifferentLabelsInSameFile", "testWrite", "testWriteLogicalGraph", "testWriteWithDelimiterCharacters", "testWriteWithDifferentPropertyTypes", "testWriteWithEmptyLabel", "testWriteWithSameLabel" ],
        "gradoop-temporal§org.gradoop.temporal.io.impl.csv.TemporalCSVSourceAndSinkTest" : [ "testWriteTo", "testWriteToOverwrite" ],
        "gradoop-temporal§org.gradoop.temporal.model.impl.TemporalGraphCollectionTest" : [ "testWriteTo", "testWriteToOverwrite" ]
      },
      "predecessor" : "89c0c1cb77cbb4bf83cb737362e33cbed7e94a8f"
    },
    "0a86f83544c408de02f419321e540f7e2a9c0bf8" : {
      "testcases" : {
        "gradoop-flink§org.gradoop.flink.model.impl.operators.aggregation.functions.average.AveragePropertyTest" : [ "testWithGraphGrouping" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.grouping.GroupingBuilderTest" : [ "testEdgeLabelSpecificGroup", "testGroupByEdgeLabels", "testGroupByEdgeProperty", "testGroupByVertexLabels", "testGroupByVertexProperty", "testGroupCombineStrategy", "testGroupReduceStrategy", "testNoStrategySetError", "testVertexLabelSpecificGroup" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.rollup.RollUpTest" : [ "testEdgeRollUp", "testEdgeRollUpWithSingleGroupingKey", "testVertexRollUp", "testVertexRollUpWithSingleGroupingKey" ]
      },
      "predecessor" : "467955d07dd3b28360e17505752b78a4461e5afe"
    },
    "3f52580a8600ea5362ad5297e4ebaf826446bc26" : {
      "testcases" : {
        "gradoop-flink§org.gradoop.flink.model.impl.operators.cloning.CloningTest" : [ "testCloning" ]
      },
      "predecessor" : "0a86f83544c408de02f419321e540f7e2a9c0bf8"
    },
    "9345d32fa93add98f48ef3d56977d67cc9e1150e" : { },
    "acfe988298f25ab16ca68c653027b5068c95e770" : {
      "testcases" : {
        "gradoop-temporal§org.gradoop.temporal.model.impl.operators.aggregation.functions.AverageDurationTest" : [ "testGetIncrementForTxTime", "testGetIncrementForValidTime", "testWithAggregation" ]
      },
      "predecessor" : "9345d32fa93add98f48ef3d56977d67cc9e1150e"
    },
    "12c9d93ca2c1ecaa46c1ead8d8ce1db1e815ff5c" : { },
    "b676553950694aa870b053532a6f0179d9b114b3" : { },
    "428ff8ea505dbcac2de27f6483c8148f77e651e1" : { },
    "0549fd39dbc4d8f65e0ac877e96913a3d5538cc0" : { },
    "f29caeef3d89bfe47c3174607b4241593f954995" : {
      "testcases" : {
        "gradoop-flink§org.gradoop.flink.model.impl.LogicalGraphTest" : [ "testGetEdges", "testGetVertices" ],
        "gradoop-flink§org.gradoop.flink.model.impl.id.GradoopIdSerializationTest" : [ "testGradoopIdSerializationAsValue" ],
        "gradoop-flink§org.gradoop.flink.model.impl.layouts.gve.GVELayoutTest" : [ "getEdges", "getEdgesByLabel", "getGraphHead", "getGraphHeads", "getGraphHeadsByLabel", "getVertices", "getVerticesByLabel" ],
        "gradoop-flink§org.gradoop.flink.model.impl.layouts.transactional.TxCollectionLayoutTest" : [ "getEdges", "getEdgesByLabel", "getGraphHeads", "getGraphHeadsByLabel", "getVertices", "getVerticesByLabel" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.cloning.CloningTest" : [ "testCloning" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.common.pojos.EmbeddingTest" : [ "testWriteRead" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.planning.queryplan.binary.CartesianProductNodeTest" : [ "testGetDistinctColumnsHomomorphism", "testGetDistinctColumnsIsomorphism" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.planning.queryplan.binary.ExpandEmbeddingsNodeTest" : [ "testGetDistinctColumnsHomomorphism", "testGetDistinctColumnsIsomorphism" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.planning.queryplan.binary.JoinEmbeddingsNodeTest" : [ "testGetDistinctColumnsHomomorphism", "testGetDistinctColumnsIsomorphism", "testGetJoinColumns" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.planning.queryplan.binary.ValueJoinNodeTest" : [ "testGetDistinctColumnsHomomorphism", "testGetDistinctColumnsIsomorphism", "testGetJoinProperties" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.transformation.TransformationTest" : [ "testIdEquality" ],
        "gradoop-flink§org.gradoop.flink.representation.RepresentationConverterTest" : [ "testGraphTransactionAdjacencyList" ],
        "gradoop-temporal§org.gradoop.temporal.io.impl.csv.TemporalCSVSourceAndSinkTest" : [ "testWriteTo", "testWriteToOverwrite" ],
        "gradoop-temporal§org.gradoop.temporal.model.impl.TemporalGraphCollectionTest" : [ "testFromGraphCollection", "testGetConfig", "testGetEdges", "testGetEdgesByLabel", "testGetGraphHeads", "testGetGraphHeadsByLabel", "testGetVertices", "testGetVerticesByLabel", "testIsEmpty", "testToGraphCollection", "testWriteTo", "testWriteToOverwrite" ],
        "gradoop-temporal§org.gradoop.temporal.model.impl.operators.aggregation.functions.MinMaxDurationTest" : [ "testDurationWithDefaultValues", "testGetIncrementForValidTimeMaxDuration", "testGetIncrementForValidTimeMinDuration", "testWithMaxAggregation", "testWithMinAggregation" ]
      },
      "predecessor" : "0549fd39dbc4d8f65e0ac877e96913a3d5538cc0"
    },
    "49d9a71dab946e698cdad890ff45b44eb2a73d9b" : {
      "predecessor" : "f29caeef3d89bfe47c3174607b4241593f954995"
    },
    "99a7bf68e7fbd3f86741b97dd40dbc30413d1a91" : { },
    "a409b11852fd50139d66828318c18f0056975321" : {
      "testcases" : {
        "gradoop-data-integration§org.gradoop.dataintegration.importer.impl.csv.MinimalCSVImporterTest" : [ "testEmptyLines", "testEmptyProperty", "testImportGraphCollection", "testImportLogicalGraphWithHeader", "testImportLogicalGraphWithoutHeader", "testImportVertexWithHeader", "testImportVertexWithoutHeader", "testReoccurringHeader" ],
        "gradoop-data-integration§org.gradoop.dataintegration.importer.impl.json.MinimalJSONImporterTest" : [ "testReadDir", "testReadFile" ],
        "gradoop-data-integration§org.gradoop.dataintegration.importer.impl.json.functions.MinimalJsonToVertexTest" : [ "testWithBoolean", "testWithEmptyObject", "testWithFloat", "testWithInt", "testWithInvalidJSON", "testWithListOfLists", "testWithListOfPrimitives", "testWithNestedObject", "testWithString" ],
        "gradoop-data-integration§org.gradoop.dataintegration.transformation.ConnectNeighborsTest" : [ "testIncoming", "testOutgoing", "testUndirected" ],
        "gradoop-data-integration§org.gradoop.dataintegration.transformation.EdgeToVertexTest" : [ "testWithVertexCreation", "testWithoutVertexCreation" ],
        "gradoop-data-integration§org.gradoop.dataintegration.transformation.PropagatePropertyToNeighborTest" : [ "testPropagateAlongCertainEdges", "testPropagateDirected", "testPropagateInLoops", "testPropagateToCertainVertices", "testPropagateToCertainVerticesAlongCertainEdges" ],
        "gradoop-data-integration§org.gradoop.dataintegration.transformation.VertexDeduplicationTest" : [ "testWithGraph", "testWithUnknownLabel", "testWithUnknownProperty" ],
        "gradoop-data-integration§org.gradoop.dataintegration.transformation.VertexToEdgeTest" : [ "testWithEdgeCreation" ],
        "gradoop-data-integration§org.gradoop.dataintegration.transformation.functions.AccumulatePropagatedValuesTest" : [ "testCoGroup" ],
        "gradoop-data-integration§org.gradoop.dataintegration.transformation.functions.BuildIdPropertyValuePairsTest" : [ "testFunction" ],
        "gradoop-data-integration§org.gradoop.dataintegration.transformation.functions.BuildTargetVertexIdPropertyValuePairsTest" : [ "testJoinFunction" ],
        "gradoop-data-integration§org.gradoop.dataintegration.transformation.functions.CreateCartesianNeighborhoodEdgesTest" : [ "testWithEmptyNeighborhood", "testWithNonEmptyNeighborhood" ],
        "gradoop-data-integration§org.gradoop.dataintegration.transformation.functions.CreateEdgesFromTripleTest" : [ "testFunction" ],
        "gradoop-data-integration§org.gradoop.dataintegration.transformation.functions.CreateMappingFromMarkedDuplicatesTest" : [ "testFlatMapFunction" ],
        "gradoop-data-integration§org.gradoop.dataintegration.transformation.functions.CreateVertexFromEdgesTest" : [ "testFunction" ],
        "gradoop-data-integration§org.gradoop.dataintegration.transformation.functions.MarkDuplicatesInGroupTest" : [ "testReduce" ],
        "gradoop-data-integration§org.gradoop.dataintegration.transformation.functions.NeighborhoodTest" : [ "testNeighborhood(JUNIT_PARAMETERIZED-neighborhood of center (INCOMING))", "testNeighborhood(JUNIT_PARAMETERIZED-neighborhood of center (OUTGOING))", "testNeighborhood(JUNIT_PARAMETERIZED-neighborhood of center (UNDIRECTED))", "testNeighborhood(JUNIT_PARAMETERIZED-neighborhood of center2 (INCOMING))", "testNeighborhood(JUNIT_PARAMETERIZED-neighborhood of center2 (OUTGOING))", "testNeighborhood(JUNIT_PARAMETERIZED-neighborhood of center2 (UNDIRECTED))", "testNeighborhood(JUNIT_PARAMETERIZED-neighborhood of nocenter (INCOMING))", "testNeighborhood(JUNIT_PARAMETERIZED-neighborhood of nocenter (OUTGOING))", "testNeighborhood(JUNIT_PARAMETERIZED-neighborhood of nocenter (UNDIRECTED))" ],
        "gradoop-data-integration§org.gradoop.dataintegration.transformation.impl.ExtractPropertyFromVertexTest" : [ "cityDeduplicationTest", "containGraphHeadIdTest", "edgeCreationBidirectionalTest", "edgeCreationNewToOriginTest", "edgeCreationOriginToNewTest", "listPropertyTest", "nonDeduplicationTest" ],
        "gradoop-data-integration§org.gradoop.dataintegration.transformation.impl.InvertEdgesTest" : [ "testInvert" ],
        "gradoop-data-integration§org.gradoop.dataintegration.transformation.impl.PropertyTransformationTest" : [ "testAllTransformationFunctions", "testEdgeTransformation", "testEdgeTransformationLabelSpecific", "testEdgeTransformationNewPropKey", "testEdgeTransformationWithoutHistory", "testGHTransformation", "testGHTransformationNewPropKey", "testGHTransformationWithoutHistory", "testVertexTransformation", "testVertexTransformationLabelSpecific", "testVertexTransformationNewPropKey", "testVertexTransformationWithoutHistory" ],
        "gradoop-flink§org.gradoop.flink.algorithms.btgs.BusinessTransactionGraphsTest" : [ "testExecute" ],
        "gradoop-flink§org.gradoop.flink.algorithms.gelly.connectedcomponents.WeaklyConnectedComponentsAsCollectionTest" : [ "testByElementIds" ],
        "gradoop-flink§org.gradoop.flink.algorithms.gelly.hits.HITSTest" : [ "minimalHITSTest" ],
        "gradoop-flink§org.gradoop.flink.algorithms.gelly.labelpropagation.GradoopLabelPropagationTest" : [ "testByElementData", "testByElementIds" ],
        "gradoop-flink§org.gradoop.flink.algorithms.gelly.pagerank.PageRankTest" : [ "testPageRankWithZeroDegrees", "testPageRankWithoutZeroDegrees" ],
        "gradoop-flink§org.gradoop.flink.algorithms.gelly.randomjump.KRandomJumpGellyVCITest" : [ "base3StartVerticesTest", "baseTest", "visitAll3StartVerticesTest", "visitAllJumpsOnlyTest", "visitAllTest" ],
        "gradoop-flink§org.gradoop.flink.algorithms.gelly.shortestpaths.SingleSourceShortestPathsTest" : [ "testByData" ],
        "gradoop-flink§org.gradoop.flink.algorithms.gelly.trianglecounting.GellyTriangleCountingTest" : [ "testTriangleCounting" ],
        "gradoop-flink§org.gradoop.flink.algorithms.gelly.vertexdegrees.DistinctVertexDegreesTest" : [ "testByElementData" ],
        "gradoop-flink§org.gradoop.flink.io.impl.csv.CSVDataSinkTest" : [ "testWrite", "testWriteExtendedProperties", "testWriteMetadataCsvDistributed", "testWriteMetadataCsvLocal", "testWriteWithDelimiterCharacters", "testWriteWithDifferentPropertyTypes", "testWriteWithExistingMetaData", "testWriteWithSameLabel" ],
        "gradoop-flink§org.gradoop.flink.io.impl.csv.CSVDataSourceTest" : [ "testRead", "testReadExtendedProperties" ],
        "gradoop-flink§org.gradoop.flink.io.impl.csv.indexed.IndexedCSVDataSinkTest" : [ "testDifferentLabelsInSameFile", "testWrite", "testWriteLogicalGraph", "testWriteWithDelimiterCharacters", "testWriteWithDifferentPropertyTypes", "testWriteWithEmptyLabel", "testWriteWithExistingMetaData", "testWriteWithSameLabel" ],
        "gradoop-flink§org.gradoop.flink.io.impl.csv.indexed.IndexedCSVDataSourceTest" : [ "testEmptyEdgeRead", "testRead", "testReadSingleGraph" ],
        "gradoop-flink§org.gradoop.flink.io.impl.dot.functions.DotFileFormatSimpleTest" : [ "testFormat", "testStringEscaping" ],
        "gradoop-flink§org.gradoop.flink.io.impl.edgelist.EdgeListDataSourceTest" : [ "testRead" ],
        "gradoop-flink§org.gradoop.flink.io.impl.edgelist.VertexLabeledEdgeListDataSourceTest" : [ "testRead" ],
        "gradoop-flink§org.gradoop.flink.io.impl.gdl.GDLDataSinkTest" : [ "testWrite" ],
        "gradoop-flink§org.gradoop.flink.io.impl.graph.GraphDataSourceTest" : [ "testReadStructureOnly", "testReadWithLabel", "testReadWithLabelAndProperties", "testReadWithLineage" ],
        "gradoop-flink§org.gradoop.flink.io.impl.statistics.GraphStatisticsDataSinkTest" : [ "testWriteDistinctEdgePropertyValuesByPropertyName", "testWriteDistinctPropertyValuesByEdgeLabelAndPropertyName", "testWriteDistinctPropertyValuesByVertexLabelAndPropertyName", "testWriteDistinctSourceVertexCount", "testWriteDistinctSourceVertexCountByEdgeLabel", "testWriteDistinctTargetVertexCount", "testWriteDistinctTargetVertexCountByEdgeLabel", "testWriteDistinctVertexPropertyValuesByPropertyName", "testWriteEdgeCount", "testWriteEdgeCountByLabel", "testWriteEdgeCountBySourceVertexAndEdgeLabel", "testWriteEdgeCountByTargetVertexAndEdgeLabel", "testWriteVertexCount", "testWriteVertexCountByLabel" ],
        "gradoop-flink§org.gradoop.flink.io.impl.tlf.TLFDataSinkTest" : [ "testWrite", "testWriteWithoutEdges", "testWriteWithoutEdgesWithDictionaries" ],
        "gradoop-flink§org.gradoop.flink.io.impl.tlf.TLFDataSourceTest" : [ "testRead", "testReadWithDictionary", "testReadWithoutEdges" ],
        "gradoop-flink§org.gradoop.flink.model.impl.GraphTransactionTest" : [ "testTransformation", "testTransformationWithCustomReducer", "testWithSubsetGraphContainment" ],
        "gradoop-flink§org.gradoop.flink.model.impl.LogicalGraphTest" : [ "testGetEdges", "testGetGraphHead", "testGetVertices" ],
        "gradoop-flink§org.gradoop.flink.model.impl.epgm.GraphCollectionFactoryTest" : [ "testEmptyFromGraphsMethod", "testFromGraphMethod", "testFromGraphsMethod", "testSingleFromGraphsMethod" ],
        "gradoop-flink§org.gradoop.flink.model.impl.functions.epgm.LabelIsInTest" : [ "testFilterCollection", "testFilterVarargs" ],
        "gradoop-flink§org.gradoop.flink.model.impl.functions.epgm.RemovePropertiesTest" : [ "testEdge", "testGraphHead", "testVertex" ],
        "gradoop-flink§org.gradoop.flink.model.impl.functions.epgm.RenameLabelTest" : [ "testEdge", "testGraphHead", "testVertex" ],
        "gradoop-flink§org.gradoop.flink.model.impl.functions.epgm.RenamePropertyKeysTest" : [ "testEdges", "testGraphHead", "testVertex" ],
        "gradoop-flink§org.gradoop.flink.model.impl.functions.filters.AbstractRichCombinedFilterFunctionTest" : [ "testNotNotOrAnd" ],
        "gradoop-flink§org.gradoop.flink.model.impl.functions.filters.CombinableFilterTest" : [ "testWithGraph" ],
        "gradoop-flink§org.gradoop.flink.model.impl.id.GradoopIdSerializationTest" : [ "testCopyAsNormalizedKey", "testCopyFromInputViewToOutputView", "testCopyToNewGradoopId", "testCopyToOtherGradoopId", "testGradoopIdSerializationAsValue", "testGradoopIdSerializationInDataSets", "testGradoopIdSetSerializationInDataSets", "testKeyBinaryRepresentationLength" ],
        "gradoop-flink§org.gradoop.flink.model.impl.layouts.gve.GVELayoutTest" : [ "getEdges", "getEdgesByLabel", "getGraphHead", "getGraphHeads", "getGraphHeadsByLabel", "getGraphTransactions", "getVertices", "getVerticesByLabel" ],
        "gradoop-flink§org.gradoop.flink.model.impl.layouts.transactional.TxCollectionLayoutTest" : [ "getEdges", "getEdgesByLabel", "getGraphHeads", "getGraphHeadsByLabel", "getGraphTransactions", "getVertices", "getVerticesByLabel" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.aggregation.AggregationTest" : [ "testAggregationWithPostAggregateForGraph", "testAggregationWithPostAggregateForGraphCollection", "testEdgelessGraphHasEdgeLabel", "testEmptyGraphHasElementLabel", "testEmptySingleGraphWithMultipleAggregationFunctions", "testGraphUnsupportedPropertyValueType", "testSingleGraphCount", "testSingleGraphHasEdgeLabelFalse", "testSingleGraphHasEdgeLabelTrue", "testSingleGraphHasElementLabelEmptyString", "testSingleGraphHasElementLabelFalse", "testSingleGraphHasElementLabelTrue", "testSingleGraphHasVertexLabelEmptyString", "testSingleGraphHasVertexLabelFalse", "testSingleGraphHasVertexLabelTrue", "testSingleGraphMax", "testSingleGraphMin", "testSingleGraphSum", "testSingleGraphWithMultipleDifferentAggregationFunctions", "testSingleGraphWithMultipleEdgeAggregationFunctions", "testSingleGraphWithMultipleElementAggregationFunctions", "testSingleGraphWithMultipleVertexAggregationFunctions", "testSumWithEmptyProperties" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.aggregation.functions.average.AveragePropertyTest" : [ "testWithGraphGrouping", "testWithLogicalGraph" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.cloning.CloningTest" : [ "testCloning" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.combination.CombinationTest" : [ "testDerivedNonOverlappingGraphs", "testDerivedOverlappingGraphs", "testGraphContainment", "testNonOverlappingGraphs", "testOverlappingGraphs", "testReduceCollection", "testSameGraph" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.difference.DifferenceTest" : [ "testNonOverlappingCollections", "testOverlappingCollections", "testTotalOverlappingCollections" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.distinction.DistinctByIdTest" : [ "testDistinctCollection", "testNonDistinctCollection" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.distinction.DistinctByIsomorphismTest" : [ "execute" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.distinction.GroupByIsomorphismTest" : [ "execute" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.equality.EqualityTest" : [ "testCollectionEqualityByGraphData", "testCollectionEqualityByGraphElementData", "testCollectionEqualityByGraphElementIds", "testCollectionEqualityByGraphIds", "testGraphEqualityByData", "testGraphEqualityByElementData", "testGraphEqualityByElementIds", "testUndirectedCollectionEquality", "testUndirectedGraphEquality" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.exclusion.ExclusionTest" : [ "testDerivedNonOverlappingGraphs", "testDerivedOverlappingGraphs", "testGraphContainment", "testNonOverlappingGraphs", "testOverlappingGraphs", "testReduceCollection", "testSameGraph" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.fusion.VertexFusionTest" : [ "abEdgeWithAlphaAndAbEdgeWithAlphaToFusededgeWithAlpha", "abEdgeWithAlphaAndAbedgeWithBetaToAbedgeWithBetaLoop", "abEdgeWithAlphaAndEmptyVerteToAbedgeWithAlpha", "abEdgeWithBetaAndAbedgeWithBetaToFusedEdgeWithBeta", "abEdgeWithBetaAndEmptyToAbedgeWithBeta", "abcdGraphAndAbcdGraphToAbdGraph", "abedgeWithBetaAndEmptyVertexToAbedgeWithBeta", "abedgewithalphaAndEmptyToAbedgeWithAlpha", "abedgewithalphaAndGraphwithaToAggregatedasource", "emptyAndEmptyToEmpty", "emptyAndEmptyvertexToEmpty", "emptyvertexAndEmptyToEmptyvertex", "emptyvertexAndEmptyvertexToSingleInside", "emptyvertexAndGraphwithaToEmptyvertex", "filterMultipleOverlappingPatterns", "filterMultiplePatterns", "fuseSubgraph", "graphwithaAndEmptyToGraphwitha", "graphwithaAndEmptyvertexToGraphwitha", "graphwithaAndGraphwithaToAgraphlabels", "patternAndSourceToPatternfusewithsource", "semicomplexAndLooplessPatternToFirstmatch", "sourceAndPatternToSourceFusewithPattern", "trickyLooplessAndPatternToThirdmatch" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.grouping.TupleBasedGroupingTest" : [ "testGroupVerticesWithEmptyKeyFunction" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.intersection.ReduceIntersectionTest" : [ "testNonOverlappingCollections", "testOverlappingCollections", "testTotalOverlappingCollections" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.keyedgrouping.functions.LabelSpecificAggregationTest" : [ "testGetIncrementWrapped" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.keyedgrouping.keys.LabelSpecificKeyFunctionTest" : [ "testAddKeyToElement", "testConstructorWithBothDefaultGroups", "testConstructorWithNoDefaultGroup", "testKeyFunctionForKnownLabel", "testKeyFunctionForOtherLabel", "testKeyType" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.limit.LimitTest" : [ "testDistinctGraphs", "testEmpty", "testInBound", "testNegativeLimit", "testOutOfBound", "testSameCollection" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.common.functions.AddGraphElementToNewGraphTest" : [ "testVariableMappingCreation" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.common.functions.ElementsFromEmbeddingTest" : [ "variableMappingTest" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.common.query.predicates.CNFElementTest" : [ "testEvaluation" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.common.query.predicates.CNFTest" : [ "testEvaluationForProperties", "testEvaluationWithMissingProperty", "testGraphElementEvaluationForProperties", "testGraphElementEvaluationWithMissingProperty" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.common.query.predicates.compareables.ElementSelectorComparableTest" : [ "testEvaluationReturnsPropertyValue", "testThrowErrorIfElementNotPresent" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.common.query.predicates.compareables.PropertySelectorComparableTest" : [ "testEvaluationReturnsPropertyValue", "testThrowErrorIfElementNotPresent", "testThrowErrorIfPropertyIsMissing" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.CypherGraphConstructionTest" : [ "testConstructionPatternWithNoVariables", "testEdgeConstruction", "testEdgeConstructionExtendedPattern", "testEdgeConstructionReducedPattern" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.QueryEngineITTests" : [ "testMatchEdge", "testMatchOneHop", "testMatchTwoHops", "testMatchVariableLengthPath", "testMatchVertex", "testMatchWithValueJoin" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.common.EmbeddingFactoryTest" : [ "convertEdge", "convertEdgeWithLoop", "convertVertex" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.common.functions.ReverseEdgeEmbeddingTest" : [ "testReversingAnEdgeEmbedding" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.common.pojos.EmbeddingTest" : [ "testAppendIdToExistingEmbedding", "testAppendListEntryToExistingEmbedding", "testAppendProjectionEntryToExistingEmbedding", "testAppendSingleId", "testAppendSingleIdAndProperties", "testGetIdAsListForIdEntries", "testGetIdAsListForIdListEntries", "testGetIdByColumn", "testGetIdBytesByColumn", "testGetIdBytesOfProjectionEntry", "testGetIdList", "testGetIdOfProjectionEntry", "testGetIdThrowsOutOfBoundsExceptionIfColumnDoesNotExist", "testGetIdsAsList", "testGetListEntryThrowsUnsupportedOperationExceptionForIdEntries", "testGetProperty", "testGetPropertyThrowsIndexOutOfBoundException", "testGetPropertyThrowsUnsupportedOperationExceptionForProjectionEntries", "testGetRawIdThrowsOutOfBoundsExceptionIfColumnDoesNotExist", "testGettingIdBytesForListEntryThrowsArgumentError", "testGettingIdForListEntryThrowsArgumentError", "testProject", "testReverse", "testSize", "testStoreSingleListEntry", "testToString", "testWriteRead" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.operators.expand.functions.AdoptEmptyPathsTest" : [ "testEmbeddingFormat", "testFilterEmbeddingsOnClosingColumn" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.operators.expand.functions.CreateInitialExpandEmbeddingTest" : [ "testEdgeIsomorphismWithDuplicateBaseEdge", "testEdgeIsomorphismWithDuplicateBaseVertex", "testEdgeIsomorphismWithLoop", "testEdgeIsomorphismWithoutDuplicates", "testHomomorphismWithDuplicateBaseEdge", "testHomomorphismWithDuplicateBaseVertex", "testHomomorphismWithLoop", "testVertexIsomorphismWithDuplicateBaseEdge", "testVertexIsomorphismWithDuplicateBaseVertex", "testVertexIsomorphismWithLoop", "testVertexIsomorphismWithoutDuplicates", "testWithoutDuplicates" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.operators.expand.functions.ExtractExpandColumnTest" : [ "testSelectIdOfSpecifiedEmbeddingEntry" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.operators.expand.functions.MergeExpandEmbeddingsTest" : [ "testEdgeIsomorphismWithDuplicateBaseEdge", "testEdgeIsomorphismWithDuplicateBaseVertex", "testEdgeIsomorphismWithDuplicatePathEdge", "testEdgeIsomorphismWithDuplicatePathVertex", "testEdgeIsomorphismWithLoop", "testEdgeIsomorphismWithoutDuplicates", "testHomomorphismWithDuplicateBaseEdge", "testHomomorphismWithDuplicateBaseVertex", "testHomomorphismWithDuplicatePathEdge", "testHomomorphismWithDuplicatePathVertex", "testHomomorphismWithLoop", "testVertexIsomorphismWithDuplicateBaseEdge", "testVertexIsomorphismWithDuplicateBaseVertex", "testVertexIsomorphismWithDuplicatePathEdge", "testVertexIsomorphismWithDuplicatePathVertex", "testVertexIsomorphismWithLoop", "testVertexIsomorphismWithoutDuplicates", "testWithoutDuplicates" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.operators.expand.functions.PostProcessExpandEmbeddingTest" : [ "testDoTransformationForClosedCircles", "testDoTransformationForResultsThatFitLowerBound", "testReturnNothingForFalseCircles", "testReturnNothingForShortsResults" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.operators.filter.FilterAndProjectEdgesTest" : [ "testFilterEdgesByLabel", "testFilterEdgesByProperties", "testFilterWithNoPredicates", "testProjectLoop", "testProjectionOfAvailableValues", "testProjectionOfMissingValues", "testResultingEntryList" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.operators.filter.FilterAndProjectTriplesTest" : [ "testFilterByHomomorphism", "testFilterByIsomorphism", "testFilterByLabel", "testFilterByProperties", "testFilterBySelfLoop", "testFilterWithNoPredicates", "testProjectionOfAvailableValues", "testProjectionOfMissingValues", "testResultingEntryForSelfLoops", "testResultingEntryList" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.operators.filter.FilterAndProjectVerticesTest" : [ "testFilterVerticesByLabel", "testFilterVerticesByProperties", "testFilterWithNoPredicates", "testProjectionOfAvailableValues", "testProjectionOfMissingValues" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.operators.filter.FilterEmbeddingsTest" : [ "testDontAlterEmbedding", "testFilterEmbeddings", "testKeepEmbeddings" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.operators.join.CartesianProductTest" : [ "testCross" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.operators.join.JoinEmbeddingsTest" : [ "testJoin", "testMultipleJoinPartners", "testSingleJoinPartners" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.operators.join.ValueJoinTest" : [ "testJoin", "testMultipleJoinPartners", "testSingleJoinPartners" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.operators.join.functions.ExtractJoinColumnsTest" : [ "testMultiColumn", "testMultiColumnReverse", "testSingleColumn" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.operators.join.functions.ExtractPropertyJoinColumnsTest" : [ "testMultiColumn", "testMultiColumnReverse", "testSingleColumn" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.operators.join.functions.MergeEmbeddingsTest" : [ "testAdoptDifferentColumn", "testAdoptLeft", "testAdoptSameColumn", "testEdgeJoinOnBoundaryColumns", "testEdgeJoinOnMidColumn", "testEdgeJoinOnRightmostColumn", "testPathJoinOnBoundaryColumns", "testPathJoinOnMidColumn", "testPathJoinOnMidColumns", "testVertexHomomorphismEdgeHomomorphism", "testVertexHomomorphismEdgeIsomorphism", "testVertexIsomorphismEdgeHomomorphism", "testVertexIsomorphismEdgeIsomorphism" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.operators.project.ProjectEdgesTest" : [ "returnsEmbeddingWithIdProjectionId", "testProjectLoop" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.operators.project.ProjectEmbeddingsTest" : [ "projectEmbedding" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.operators.project.ProjectVerticesTest" : [ "returnsEmbeddingWithOneProjection" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.planning.queryplan.binary.CartesianProductNodeTest" : [ "testExecute", "testGetDistinctColumnsHomomorphism", "testGetDistinctColumnsIsomorphism" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.planning.queryplan.binary.ExpandEmbeddingsNodeTest" : [ "testExecute", "testGetDistinctColumnsHomomorphism", "testGetDistinctColumnsIsomorphism" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.planning.queryplan.binary.JoinEmbeddingsNodeTest" : [ "testExecute", "testGetDistinctColumnsHomomorphism", "testGetDistinctColumnsIsomorphism", "testGetJoinColumns" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.planning.queryplan.binary.ValueJoinNodeTest" : [ "testExecute", "testGetDistinctColumnsHomomorphism", "testGetDistinctColumnsIsomorphism", "testGetJoinProperties" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.planning.queryplan.leaf.FilterAndProjectEdgesNodeTest" : [ "testExecute" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.planning.queryplan.leaf.FilterAndProjectVerticesNodeTest" : [ "testExecute" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.planning.queryplan.unary.FilterEmbeddingsNodeTest" : [ "testExecute" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.planning.queryplan.unary.ProjectEmbeddingsNodeTest" : [ "testExecute" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.transactional.TransactionalPatternMatchingTest" : [ "test" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.neighborhood.NeighborhoodTest" : [ "testReduceOnEdgesSumAggBothEdges", "testReduceOnEdgesSumAggIncEdge", "testReduceOnEdgesSumAggOutEdge", "testReduceOnNeighborsSumAggBothEdges", "testReduceOnNeighborsSumAggIncEdge", "testReduceOnNeighborsSumAggOutEdge" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.overlap.OverlapTest" : [ "testDerivedNonOverlappingGraphs", "testDerivedOverlappingGraphs", "testGraphContainment", "testNonOverlappingGraphs", "testOverlappingGraphs", "testReduceCollection", "testSameGraph", "testVertexOnlyOverlappingGraphs" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.rollup.RollUpTest" : [ "testEdgeRollUp", "testEdgeRollUpWithSingleGroupingKey", "testVertexRollUp", "testVertexRollUpWithSingleGroupingKey" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.sampling.PageRankSamplingTest" : [ "testGraphWithSameScore(JUNIT_PARAMETERIZED-0: PageRankSamplingTest with seed, sample vertices with PageRankScore greater than threshold, keep all vertices if they got same score)", "testGraphWithSameScore(JUNIT_PARAMETERIZED-1: PageRankSamplingTest without seed, sample vertices with PageRankScore greater than threshold, keep all vertices if they got same score)" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.sampling.statistics.AverageClusteringCoefficientTest" : [ "testFullyConnectedGraph", "testHalfConnectedGraph", "testNonConnectedGraph" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.sampling.statistics.AverageDegreeTest" : [ "testAverageDegree" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.sampling.statistics.AverageIncomingDegreeTest" : [ "testAverageIncomingDegree" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.sampling.statistics.AverageOutgoingDegreeTest" : [ "testAverageOutgoingDegree" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.sampling.statistics.ConnectedComponentsDistributionTest" : [ "testComponentDistribution(JUNIT_PARAMETERIZED-0: wcc with annotated edges and int.max iterations)", "testComponentDistribution(JUNIT_PARAMETERIZED-1: wcc without annotated edges and 10 iterations)" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.sampling.statistics.DegreeCentralityTest" : [ "testCommunity", "testConnectedStars", "testPath", "testStar" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.sampling.statistics.GraphDensityTest" : [ "testGraphDensity" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.sampling.statistics.ValueConnectedComponentsTest" : [ "testValueConnectedComponents" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.selection.SelectionTest" : [ "testSelectionWithEmptyResult", "testSelectionWithResult" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.split.SplitTest" : [ "testSplit", "testSplit2", "testSplitWithMultipleKeys", "testSplitWithSingleResultGraph" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.statistics.StatisticsTest" : [ "testDistinctEdgePropertyValuesByLabelAndPropertyName", "testDistinctEdgePropertyValuesByPropertyName", "testDistinctSourceIds", "testDistinctSourceIdsByEdgeLabel", "testDistinctTargetIds", "testDistinctTargetIdsByEdgeLabel", "testDistinctVertexPropertyValuesByLabelAndPropertyName", "testDistinctVertexPropertyValuesByPropertyName", "testEdgeCount", "testEdgeLabelDistribution", "testIncomingVertexDegreeDistribution", "testIncomingVertexDegrees", "testOutgoingVertexDegreeDistribution", "testOutgoingVertexDegrees", "testSourceLabelAndEdgeLabelDistribution", "testTargetLabelAndEdgeLabelDistribution", "testVertexCount", "testVertexDegreeDistribution", "testVertexDegrees", "testVertexLabelDistribution" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.subgraph.SubgraphTest" : [ "testCollectionEdgeInducedSubgraph", "testCollectionEdgeInducedSubgraphProjectFirst", "testCollectionSubgraph", "testCollectionVertexInducedSubgraph", "testEdgeInducedSubgraph", "testEdgeInducedSubgraphProjectFirst", "testEmptySubgraph", "testExistingSubgraph", "testExistingSubgraphWithVerification", "testKeepOnlyRelevantVertices", "testPartialSubgraph", "testVertexInducedSubgraph" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.tostring.CanonicalAdjacencyMatrixBuilderTest" : [ "testDirected", "testUndirected" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.transformation.TransformationTest" : [ "testDataEquality", "testEdgeOnlyTransformation", "testGraphHeadOnlyTransformation", "testIdEquality", "testVertexOnlyTransformation" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.union.UnionTest" : [ "testNonOverlappingCollections", "testOverlappingCollections", "testTotalOverlappingCollections" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.verify.VerifyTest" : [ "testVerifyGraphContainment", "testVerifyGraphsContainment", "testVerifyWithApplySubgraph", "testVerifyWithSubgraph" ],
        "gradoop-flink§org.gradoop.flink.model.impl.pojo.PojoSerializationTest" : [ "testEdgeSerialization", "testGraphHeadSerialization", "testVertexSerialization" ],
        "gradoop-flink§org.gradoop.flink.model.impl.properties.PropertiesSerializationTest" : [ "testPropertyListSerialization" ],
        "gradoop-flink§org.gradoop.flink.representation.RepresentationConverterTest" : [ "testGraphTransactionAdjacencyList" ],
        "gradoop-flink§org.gradoop.flink.util.FlinkAsciiGraphLoaderTest" : [ "testGetGraphCollection", "testGetGraphCollectionByVariables", "testGetLogicalGraph", "testGetLogicalGraphByVariable" ],
        "gradoop-temporal§org.gradoop.temporal.io.impl.csv.TemporalCSVSourceAndSinkTest" : [ "testWriteTo", "testWriteToOverwrite" ],
        "gradoop-temporal§org.gradoop.temporal.model.impl.TemporalGraphCollectionTest" : [ "testFromGraphCollection", "testGetConfig", "testGetEdges", "testGetEdgesByLabel", "testGetGraphHeads", "testGetGraphHeadsByLabel", "testGetVertices", "testGetVerticesByLabel", "testIsEmpty", "testToGraphCollection", "testWriteTo", "testWriteToOverwrite" ],
        "gradoop-temporal§org.gradoop.temporal.model.impl.operators.aggregation.functions.MinMaxDurationTest" : [ "testDurationWithDefaultValues", "testGetIncrementForValidTimeMaxDuration", "testGetIncrementForValidTimeMinDuration", "testWithMaxAggregation", "testWithMinAggregation" ]
      },
      "predecessor" : "99a7bf68e7fbd3f86741b97dd40dbc30413d1a91"
    },
    "b9368446494ce0a00c625553a31a2a581e0bc6a1" : {
      "predecessor" : "a409b11852fd50139d66828318c18f0056975321"
    },
    "a32d88c846cf205813c099138c2fe22651abe753" : {
      "testcases" : {
        "gradoop-data-integration§org.gradoop.dataintegration.importer.impl.csv.MinimalCSVImporterTest" : [ "testEmptyLines", "testImportLogicalGraphWithHeader", "testImportLogicalGraphWithoutHeader" ],
        "gradoop-data-integration§org.gradoop.dataintegration.importer.impl.json.MinimalJSONImporterTest" : [ "testReadDir", "testReadFile" ],
        "gradoop-data-integration§org.gradoop.dataintegration.transformation.ConnectNeighborsTest" : [ "testIncoming", "testOutgoing", "testUndirected" ],
        "gradoop-data-integration§org.gradoop.dataintegration.transformation.EdgeToVertexTest" : [ "testWithVertexCreation", "testWithoutVertexCreation" ],
        "gradoop-data-integration§org.gradoop.dataintegration.transformation.PropagatePropertyToNeighborTest" : [ "testPropagateAlongCertainEdges", "testPropagateDirected", "testPropagateInLoops", "testPropagateToCertainVertices", "testPropagateToCertainVerticesAlongCertainEdges" ],
        "gradoop-data-integration§org.gradoop.dataintegration.transformation.VertexDeduplicationTest" : [ "testWithGraph", "testWithUnknownLabel", "testWithUnknownProperty" ],
        "gradoop-data-integration§org.gradoop.dataintegration.transformation.VertexToEdgeTest" : [ "testWithEdgeCreation" ],
        "gradoop-data-integration§org.gradoop.dataintegration.transformation.functions.NeighborhoodTest" : [ "testNeighborhood(JUNIT_PARAMETERIZED-neighborhood of center (INCOMING))", "testNeighborhood(JUNIT_PARAMETERIZED-neighborhood of center (OUTGOING))", "testNeighborhood(JUNIT_PARAMETERIZED-neighborhood of center (UNDIRECTED))", "testNeighborhood(JUNIT_PARAMETERIZED-neighborhood of center2 (INCOMING))", "testNeighborhood(JUNIT_PARAMETERIZED-neighborhood of center2 (OUTGOING))", "testNeighborhood(JUNIT_PARAMETERIZED-neighborhood of center2 (UNDIRECTED))", "testNeighborhood(JUNIT_PARAMETERIZED-neighborhood of nocenter (INCOMING))", "testNeighborhood(JUNIT_PARAMETERIZED-neighborhood of nocenter (OUTGOING))", "testNeighborhood(JUNIT_PARAMETERIZED-neighborhood of nocenter (UNDIRECTED))" ],
        "gradoop-data-integration§org.gradoop.dataintegration.transformation.impl.ExtractPropertyFromVertexTest" : [ "cityDeduplicationTest", "containGraphHeadIdTest", "edgeCreationBidirectionalTest", "edgeCreationNewToOriginTest", "edgeCreationOriginToNewTest", "nonDeduplicationTest" ],
        "gradoop-data-integration§org.gradoop.dataintegration.transformation.impl.InvertEdgesTest" : [ "testInvert" ],
        "gradoop-data-integration§org.gradoop.dataintegration.transformation.impl.PropertyTransformationTest" : [ "testAllTransformationFunctions", "testEdgeTransformation", "testEdgeTransformationLabelSpecific", "testEdgeTransformationNewPropKey", "testEdgeTransformationWithoutHistory", "testGHTransformation", "testGHTransformationNewPropKey", "testGHTransformationWithoutHistory", "testVertexTransformation", "testVertexTransformationLabelSpecific", "testVertexTransformationNewPropKey", "testVertexTransformationWithoutHistory" ],
        "gradoop-flink§org.gradoop.flink.algorithms.btgs.BusinessTransactionGraphsTest" : [ "testExecute" ],
        "gradoop-flink§org.gradoop.flink.algorithms.gelly.connectedcomponents.WeaklyConnectedComponentsAsCollectionTest" : [ "testByElementIds" ],
        "gradoop-flink§org.gradoop.flink.algorithms.gelly.hits.HITSTest" : [ "minimalHITSTest" ],
        "gradoop-flink§org.gradoop.flink.algorithms.gelly.labelpropagation.GradoopLabelPropagationTest" : [ "testByElementData", "testByElementIds" ],
        "gradoop-flink§org.gradoop.flink.algorithms.gelly.pagerank.PageRankTest" : [ "testPageRankWithZeroDegrees", "testPageRankWithoutZeroDegrees" ],
        "gradoop-flink§org.gradoop.flink.algorithms.gelly.randomjump.KRandomJumpGellyVCITest" : [ "base3StartVerticesTest", "baseTest", "visitAll3StartVerticesTest", "visitAllJumpsOnlyTest", "visitAllTest" ],
        "gradoop-flink§org.gradoop.flink.algorithms.gelly.shortestpaths.SingleSourceShortestPathsTest" : [ "testByData" ],
        "gradoop-flink§org.gradoop.flink.algorithms.gelly.trianglecounting.GellyTriangleCountingTest" : [ "testTriangleCounting" ],
        "gradoop-flink§org.gradoop.flink.algorithms.gelly.vertexdegrees.DistinctVertexDegreesTest" : [ "testByElementData" ],
        "gradoop-flink§org.gradoop.flink.io.impl.csv.CSVDataSinkTest" : [ "testWrite", "testWriteWithDifferentPropertyTypes", "testWriteWithExistingMetaData", "testWriteWithSameLabel" ],
        "gradoop-flink§org.gradoop.flink.io.impl.csv.CSVDataSourceTest" : [ "testRead" ],
        "gradoop-flink§org.gradoop.flink.io.impl.csv.indexed.IndexedCSVDataSinkTest" : [ "testWrite", "testWriteLogicalGraph", "testWriteWithDifferentPropertyTypes", "testWriteWithEmptyLabel", "testWriteWithExistingMetaData", "testWriteWithSameLabel" ],
        "gradoop-flink§org.gradoop.flink.io.impl.csv.indexed.IndexedCSVDataSourceTest" : [ "testEmptyEdgeRead", "testRead", "testReadSingleGraph" ],
        "gradoop-flink§org.gradoop.flink.io.impl.edgelist.EdgeListDataSourceTest" : [ "testRead" ],
        "gradoop-flink§org.gradoop.flink.io.impl.edgelist.VertexLabeledEdgeListDataSourceTest" : [ "testRead" ],
        "gradoop-flink§org.gradoop.flink.io.impl.gdl.GDLDataSinkTest" : [ "testWrite" ],
        "gradoop-flink§org.gradoop.flink.io.impl.graph.GraphDataSourceTest" : [ "testReadStructureOnly", "testReadWithLabel", "testReadWithLabelAndProperties", "testReadWithLineage" ],
        "gradoop-flink§org.gradoop.flink.io.impl.image.ImageDataSinkTest" : [ "testImageSink" ],
        "gradoop-flink§org.gradoop.flink.io.impl.statistics.GraphStatisticsDataSinkTest" : [ "testWriteDistinctEdgePropertyValuesByPropertyName", "testWriteDistinctPropertyValuesByEdgeLabelAndPropertyName", "testWriteDistinctPropertyValuesByVertexLabelAndPropertyName", "testWriteDistinctSourceVertexCount", "testWriteDistinctSourceVertexCountByEdgeLabel", "testWriteDistinctTargetVertexCount", "testWriteDistinctTargetVertexCountByEdgeLabel", "testWriteDistinctVertexPropertyValuesByPropertyName", "testWriteEdgeCount", "testWriteEdgeCountByLabel", "testWriteEdgeCountBySourceVertexAndEdgeLabel", "testWriteEdgeCountByTargetVertexAndEdgeLabel", "testWriteVertexCount", "testWriteVertexCountByLabel" ],
        "gradoop-flink§org.gradoop.flink.io.impl.tlf.TLFDataSourceTest" : [ "testRead", "testReadWithDictionary", "testReadWithoutEdges" ],
        "gradoop-flink§org.gradoop.flink.model.impl.GraphTransactionTest" : [ "testTransformation", "testTransformationWithCustomReducer", "testWithSubsetGraphContainment" ],
        "gradoop-flink§org.gradoop.flink.model.impl.LogicalGraphTest" : [ "testGetEdges", "testGetGraphHead", "testGetVertices" ],
        "gradoop-flink§org.gradoop.flink.model.impl.epgm.GraphCollectionFactoryTest" : [ "testEmptyFromGraphsMethod", "testFromGraphMethod", "testFromGraphsMethod", "testSingleFromGraphsMethod" ],
        "gradoop-flink§org.gradoop.flink.model.impl.functions.filters.CombinableFilterTest" : [ "testWithGraph" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.aggregation.AggregationTest" : [ "testAggregationWithPostAggregateForGraph", "testAggregationWithPostAggregateForGraphCollection", "testEdgelessGraphHasEdgeLabel", "testEmptyGraphHasElementLabel", "testEmptySingleGraphWithMultipleAggregationFunctions", "testGraphUnsupportedPropertyValueType", "testSingleGraphCount", "testSingleGraphHasEdgeLabelFalse", "testSingleGraphHasEdgeLabelTrue", "testSingleGraphHasElementLabelEmptyString", "testSingleGraphHasElementLabelFalse", "testSingleGraphHasElementLabelTrue", "testSingleGraphHasVertexLabelEmptyString", "testSingleGraphHasVertexLabelFalse", "testSingleGraphHasVertexLabelTrue", "testSingleGraphMax", "testSingleGraphMin", "testSingleGraphSum", "testSingleGraphWithMultipleDifferentAggregationFunctions", "testSingleGraphWithMultipleEdgeAggregationFunctions", "testSingleGraphWithMultipleElementAggregationFunctions", "testSingleGraphWithMultipleVertexAggregationFunctions", "testSumWithEmptyProperties" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.aggregation.functions.average.AveragePropertyTest" : [ "testWithGraphGrouping", "testWithLogicalGraph" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.cloning.CloningTest" : [ "testCloning" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.combination.CombinationTest" : [ "testDerivedNonOverlappingGraphs", "testDerivedOverlappingGraphs", "testGraphContainment", "testNonOverlappingGraphs", "testOverlappingGraphs", "testReduceCollection", "testSameGraph" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.difference.DifferenceTest" : [ "testNonOverlappingCollections", "testOverlappingCollections", "testTotalOverlappingCollections" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.distinction.DistinctByIdTest" : [ "testDistinctCollection", "testNonDistinctCollection" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.distinction.DistinctByIsomorphismTest" : [ "execute" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.distinction.GroupByIsomorphismTest" : [ "execute" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.equality.EqualityTest" : [ "testCollectionEqualityByGraphData", "testCollectionEqualityByGraphElementData", "testCollectionEqualityByGraphElementIds", "testCollectionEqualityByGraphIds", "testGraphEqualityByData", "testGraphEqualityByElementData", "testGraphEqualityByElementIds", "testUndirectedCollectionEquality", "testUndirectedGraphEquality" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.exclusion.ExclusionTest" : [ "testDerivedNonOverlappingGraphs", "testDerivedOverlappingGraphs", "testGraphContainment", "testNonOverlappingGraphs", "testOverlappingGraphs", "testReduceCollection", "testSameGraph" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.fusion.VertexFusionTest" : [ "abEdgeWithAlphaAndAbEdgeWithAlphaToFusededgeWithAlpha", "abEdgeWithAlphaAndAbedgeWithBetaToAbedgeWithBetaLoop", "abEdgeWithAlphaAndEmptyVerteToAbedgeWithAlpha", "abEdgeWithBetaAndAbedgeWithBetaToFusedEdgeWithBeta", "abEdgeWithBetaAndEmptyToAbedgeWithBeta", "abcdGraphAndAbcdGraphToAbdGraph", "abedgeWithBetaAndEmptyVertexToAbedgeWithBeta", "abedgewithalphaAndEmptyToAbedgeWithAlpha", "abedgewithalphaAndGraphwithaToAggregatedasource", "emptyAndEmptyToEmpty", "emptyAndEmptyvertexToEmpty", "emptyvertexAndEmptyToEmptyvertex", "emptyvertexAndEmptyvertexToSingleInside", "emptyvertexAndGraphwithaToEmptyvertex", "filterMultipleOverlappingPatterns", "filterMultiplePatterns", "fuseSubgraph", "graphwithaAndEmptyToGraphwitha", "graphwithaAndEmptyvertexToGraphwitha", "graphwithaAndGraphwithaToAgraphlabels", "patternAndSourceToPatternfusewithsource", "semicomplexAndLooplessPatternToFirstmatch", "sourceAndPatternToSourceFusewithPattern", "trickyLooplessAndPatternToThirdmatch" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.grouping.TupleBasedGroupingTest" : [ "testGroupVerticesWithEmptyKeyFunction" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.intersection.ReduceIntersectionTest" : [ "testNonOverlappingCollections", "testOverlappingCollections", "testTotalOverlappingCollections" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.limit.LimitTest" : [ "testDistinctGraphs", "testInBound", "testOutOfBound", "testSameCollection" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.common.functions.ElementsFromEmbeddingTest" : [ "variableMappingTest" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.common.query.DFSTraverserTest" : [ "testTraverse", "testTraverseFromRootVertex", "testTraverseLoop" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.common.query.GraphMetricsTest" : [ "testGetComponentsForMultipleComponent", "testGetComponentsForSingleComponent", "testGetDiameter", "testGetEccentricity", "testGetRadius" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.common.query.QueryHandlerTest" : [ "testGetCenterVertices", "testGetDiameter", "testGetEdgeById", "testGetEdgeByVariable", "testGetEdgeCount", "testGetEdgesByLabel", "testGetEdgesBySourceVertexId", "testGetEdgesByTargetVertexId", "testGetEdgesByVertexId", "testGetNeighbors", "testGetPredecessors", "testGetPredecessorsWithLoop", "testGetRadius", "testGetSuccessors", "testGetSuccessorsWithLoop", "testGetTriples", "testGetVertexById", "testGetVertexByVariable", "testGetVertexCount", "testGetVerticesByLabel", "testIsEdge", "testIsSingleVertexGraph", "testIsVertex" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.common.query.predicates.CNFElementTest" : [ "extractVariablesTest", "testEvaluation" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.common.query.predicates.CNFTest" : [ "createExistingSubCnfTest", "extractVariablesTest", "orConjunctionTest", "testCopyConstructor", "testEvaluationForProperties", "testEvaluationWithMissingProperty", "testGraphElementEvaluationForProperties", "testGraphElementEvaluationWithMissingProperty", "testRemoveCovered" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.CypherGraphConstructionTest" : [ "testConstructionPatternWithNoVariables", "testEdgeConstruction", "testEdgeConstructionExtendedPattern", "testEdgeConstructionReducedPattern" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.QueryEngineITTests" : [ "testMatchEdge", "testMatchOneHop", "testMatchTwoHops", "testMatchVariableLengthPath", "testMatchVertex", "testMatchWithValueJoin" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.operators.filter.FilterAndProjectEdgesTest" : [ "testFilterEdgesByLabel", "testFilterEdgesByProperties", "testFilterWithNoPredicates", "testProjectLoop", "testProjectionOfAvailableValues", "testProjectionOfMissingValues", "testResultingEntryList" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.operators.filter.FilterAndProjectTriplesTest" : [ "testFilterByHomomorphism", "testFilterByIsomorphism", "testFilterByLabel", "testFilterByProperties", "testFilterBySelfLoop", "testFilterWithNoPredicates", "testProjectionOfAvailableValues", "testProjectionOfMissingValues", "testResultingEntryForSelfLoops", "testResultingEntryList" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.operators.filter.FilterAndProjectVerticesTest" : [ "testFilterVerticesByLabel", "testFilterVerticesByProperties", "testFilterWithNoPredicates", "testProjectionOfAvailableValues", "testProjectionOfMissingValues" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.operators.filter.FilterEmbeddingsTest" : [ "testDontAlterEmbedding", "testFilterEmbeddings", "testKeepEmbeddings" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.planning.estimation.FilterEstimatorTest" : [ "testEdge", "testEdgeWithLabel", "testVertex", "testVertexWithLabel" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.planning.estimation.JoinEstimatorTest" : [ "testEmbeddedPathFixedLength", "testLabelFree", "testPathFixedLength", "testPathVariableLength", "testWithEdgeLabels", "testWithLabels", "testWithLabelsUnbound", "testWithVertexLabels" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.planning.estimation.QueryPlanEstimatorTest" : [ "testCartesianProductVertices", "testComplexCartesianProduct", "testEdge", "testFixedPattern", "testVariablePattern", "testVertex" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.planning.queryplan.leaf.FilterAndProjectEdgesNodeTest" : [ "testExecute" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.planning.queryplan.leaf.FilterAndProjectVerticesNodeTest" : [ "testExecute" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.single.cypher.planning.queryplan.unary.FilterEmbeddingsNodeTest" : [ "testExecute" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.matching.transactional.TransactionalPatternMatchingTest" : [ "test" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.neighborhood.NeighborhoodTest" : [ "testReduceOnEdgesSumAggBothEdges", "testReduceOnEdgesSumAggIncEdge", "testReduceOnEdgesSumAggOutEdge", "testReduceOnNeighborsSumAggBothEdges", "testReduceOnNeighborsSumAggIncEdge", "testReduceOnNeighborsSumAggOutEdge" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.overlap.OverlapTest" : [ "testDerivedNonOverlappingGraphs", "testDerivedOverlappingGraphs", "testGraphContainment", "testNonOverlappingGraphs", "testOverlappingGraphs", "testReduceCollection", "testSameGraph", "testVertexOnlyOverlappingGraphs" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.rollup.RollUpTest" : [ "testEdgeRollUp", "testEdgeRollUpWithSingleGroupingKey", "testVertexRollUp", "testVertexRollUpWithSingleGroupingKey" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.sampling.PageRankSamplingTest" : [ "testGraphWithSameScore(JUNIT_PARAMETERIZED-0: PageRankSamplingTest with seed, sample vertices with PageRankScore greater than threshold, keep all vertices if they got same score)", "testGraphWithSameScore(JUNIT_PARAMETERIZED-1: PageRankSamplingTest without seed, sample vertices with PageRankScore greater than threshold, keep all vertices if they got same score)" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.sampling.statistics.AverageClusteringCoefficientTest" : [ "testFullyConnectedGraph", "testHalfConnectedGraph", "testNonConnectedGraph" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.sampling.statistics.AverageDegreeTest" : [ "testAverageDegree" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.sampling.statistics.AverageIncomingDegreeTest" : [ "testAverageIncomingDegree" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.sampling.statistics.AverageOutgoingDegreeTest" : [ "testAverageOutgoingDegree" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.sampling.statistics.ConnectedComponentsDistributionTest" : [ "testComponentDistribution(JUNIT_PARAMETERIZED-0: wcc with annotated edges and int.max iterations)", "testComponentDistribution(JUNIT_PARAMETERIZED-1: wcc without annotated edges and 10 iterations)" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.sampling.statistics.DegreeCentralityTest" : [ "testCommunity", "testConnectedStars", "testPath", "testStar" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.sampling.statistics.GraphDensityTest" : [ "testGraphDensity" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.sampling.statistics.ValueConnectedComponentsTest" : [ "testValueConnectedComponents" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.selection.SelectionTest" : [ "testSelectionWithEmptyResult", "testSelectionWithResult" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.split.SplitTest" : [ "testSplit", "testSplit2", "testSplitWithMultipleKeys", "testSplitWithSingleResultGraph" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.statistics.StatisticsTest" : [ "testDistinctEdgePropertyValuesByLabelAndPropertyName", "testDistinctEdgePropertyValuesByPropertyName", "testDistinctSourceIds", "testDistinctSourceIdsByEdgeLabel", "testDistinctTargetIds", "testDistinctTargetIdsByEdgeLabel", "testDistinctVertexPropertyValuesByLabelAndPropertyName", "testDistinctVertexPropertyValuesByPropertyName", "testEdgeCount", "testEdgeLabelDistribution", "testIncomingVertexDegreeDistribution", "testIncomingVertexDegrees", "testOutgoingVertexDegreeDistribution", "testOutgoingVertexDegrees", "testSourceLabelAndEdgeLabelDistribution", "testTargetLabelAndEdgeLabelDistribution", "testVertexCount", "testVertexDegreeDistribution", "testVertexDegrees", "testVertexLabelDistribution" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.subgraph.SubgraphTest" : [ "testCollectionEdgeInducedSubgraph", "testCollectionEdgeInducedSubgraphProjectFirst", "testCollectionSubgraph", "testCollectionVertexInducedSubgraph", "testEdgeInducedSubgraph", "testEdgeInducedSubgraphProjectFirst", "testEmptySubgraph", "testExistingSubgraph", "testExistingSubgraphWithVerification", "testKeepOnlyRelevantVertices", "testPartialSubgraph", "testVertexInducedSubgraph" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.tostring.CanonicalAdjacencyMatrixBuilderTest" : [ "testDirected", "testUndirected" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.transformation.TransformationTest" : [ "testDataEquality", "testEdgeOnlyTransformation", "testGraphHeadOnlyTransformation", "testIdEquality", "testVertexOnlyTransformation" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.union.UnionTest" : [ "testNonOverlappingCollections", "testOverlappingCollections", "testTotalOverlappingCollections" ],
        "gradoop-flink§org.gradoop.flink.model.impl.operators.verify.VerifyTest" : [ "testVerifyGraphContainment", "testVerifyGraphsContainment", "testVerifyWithApplySubgraph", "testVerifyWithSubgraph" ],
        "gradoop-flink§org.gradoop.flink.util.FlinkAsciiGraphLoaderTest" : [ "testGetGraphCollection", "testGetGraphCollectionByVariables", "testGetLogicalGraph", "testGetLogicalGraphByVariable" ],
        "gradoop-temporal§org.gradoop.temporal.io.impl.csv.TemporalCSVSourceAndSinkTest" : [ "testWriteTo", "testWriteToOverwrite" ],
        "gradoop-temporal§org.gradoop.temporal.model.impl.TemporalGraphCollectionTest" : [ "testFromGraphCollection", "testGetConfig", "testGetEdges", "testGetEdgesByLabel", "testGetGraphHeads", "testGetGraphHeadsByLabel", "testGetVertices", "testGetVerticesByLabel", "testIsEmpty", "testToGraphCollection", "testWriteTo", "testWriteToOverwrite" ],
        "gradoop-temporal§org.gradoop.temporal.model.impl.operators.aggregation.functions.MinMaxDurationTest" : [ "testDurationWithDefaultValues" ]
      },
      "predecessor" : "b9368446494ce0a00c625553a31a2a581e0bc6a1"
    },
    "27b12fa5c6e36c466335af69d5b4f0e2a95b0cab" : {
      "testcases" : {
        "gradoop-temporal§org.gradoop.temporal.io.impl.csv.TemporalCSVSourceAndSinkTest" : [ "testWriteTo", "testWriteToOverwrite" ],
        "gradoop-temporal§org.gradoop.temporal.model.impl.TemporalGraphCollectionTest" : [ "testFromGraphCollection", "testGetConfig", "testGetEdges", "testGetEdgesByLabel", "testGetGraphHeads", "testGetGraphHeadsByLabel", "testGetVertices", "testGetVerticesByLabel", "testIsEmpty", "testToGraphCollection", "testWriteTo", "testWriteToOverwrite" ],
        "gradoop-temporal§org.gradoop.temporal.model.impl.operators.aggregation.functions.MinMaxDurationTest" : [ "testDurationWithDefaultValues", "testWithMaxAggregation", "testWithMinAggregation" ]
      },
      "predecessor" : "a32d88c846cf205813c099138c2fe22651abe753"
    },
    "fc4cc872a73b90c87f8fd4d5011a96ba6ddf1e19" : {
      "predecessor" : "27b12fa5c6e36c466335af69d5b4f0e2a95b0cab"
    },
    "e2e628071d33cf1d335baac00537226cd34753e6" : { },
    "574c807622001f5e7db6555a7dab3b9686005425" : {
      "testcases" : {
        "gradoop-flink§org.gradoop.flink.io.impl.csv.indexed.IndexedCSVDataSinkTest" : [ "testDifferentLabelsInSameFile", "testWrite", "testWriteLogicalGraph", "testWriteWithDelimiterCharacters", "testWriteWithDifferentPropertyTypes", "testWriteWithEmptyLabel", "testWriteWithExistingMetaData", "testWriteWithSameLabel" ],
        "gradoop-flink§org.gradoop.flink.io.impl.csv.indexed.IndexedCSVDataSourceTest" : [ "testEmptyEdgeRead", "testRead", "testReadSingleGraph" ]
      },
      "predecessor" : "e2e628071d33cf1d335baac00537226cd34753e6"
    },
    "5a47cff2b567d1d0b04753900d133e73c57e8158" : { },
    "0758a4a8056cb7f05898c802f63ed15c29ae131b" : { },
    "8374f2f5d5026294fe8e1cf3ce92040205a6721b" : { },
    "12f5487b48332e90bb79047f8614a4c495a5d0b4" : { },
    "61be496a3a1ebeedcea3820d8f83c29f68bc124b" : { },
    "f425f693b6a348e388aad6e911ed2870162ed65c" : {
      "predecessor" : "61be496a3a1ebeedcea3820d8f83c29f68bc124b"
    }
  },
  "android" : false
}