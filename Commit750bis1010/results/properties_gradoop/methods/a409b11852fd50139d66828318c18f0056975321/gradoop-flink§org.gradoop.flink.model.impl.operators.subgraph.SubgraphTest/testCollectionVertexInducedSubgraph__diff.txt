@Test
public void testCollectionVertexInducedSubgraph() throws Exception {
    FlinkAsciiGraphLoader loader = getSocialNetworkLoader();
    loader.appendToDatabaseFromString("(jay:Person {" + "name : \"Jay\", age : 45, gender : \"f\", city : \"Leipzig\"})" + "g4:Community [" + "(jay)-[jkb:knows]->(bob)" + "(bob)-[blj:likes]->(jay)" + "]");
    loader.appendToDatabaseFromString("expected0:Community {interest : \"Databases\", vertexCount : 3} [" + "(alice)-[akb]->(bob)-[bka]->(alice)" + "]");
    loader.appendToDatabaseFromString("expected1:Community {interest : \"Hadoop\", vertexCount : 3} []");
    loader.appendToDatabaseFromString("expected4:Community [" + "(jay)-[jkb]->(bob)-[blj]->(jay)" + "]");
    GraphCollection expected = loader.getGraphCollectionByVariables("expected0", "expected1", "expected4");
    GraphCollection input = loader.getGraphCollectionByVariables("g0", "g1", "g4");
    FilterFunction<EPGMVertex> vertexFilterFunction = v -> {
        PropertyValue city = v.getPropertyValue("city");
        return city != null && city.toString().equals("Leipzig");
    };
    GraphCollection result = input.apply(new ApplySubgraph<>(vertexFilterFunction, null, Subgraph.Strategy.VERTEX_INDUCED));
    collectAndAssertTrue(result.equalsByGraphElementIds(expected));
    collectAndAssertTrue(result.equalsByGraphData(expected));
}