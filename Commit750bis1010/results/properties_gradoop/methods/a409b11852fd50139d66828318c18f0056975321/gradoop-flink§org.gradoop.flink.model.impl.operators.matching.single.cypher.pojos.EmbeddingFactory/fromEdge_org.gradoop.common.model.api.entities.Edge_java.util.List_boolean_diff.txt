/**
 * Converts an {@link Edge} into an {@link Embedding}.
 *
 * The resulting embedding has three entries containing the source vertex id, the edge id and the
 * target vertex id. Furthermore, the embedding has one entry for each property value associated
 * with the specified property keys (ordered by list order). Note that missing property values are
 * represented by a {@link PropertyValue#NULL_VALUE}.
 *
 * @param edge edge to create embedding from
 * @param propertyKeys properties that will be stored in the embedding
 * @param isLoop indicates if the edges is a loop
 * @return Embedding
 */
public static Embedding fromEdge(Edge edge, List<String> propertyKeys, boolean isLoop) {
    Embedding embedding = new Embedding();
    if (isLoop) {
        embedding.addAll(edge.getSourceId(), edge.getId());
    } else {
        embedding.addAll(edge.getSourceId(), edge.getId(), edge.getTargetId());
    }
    embedding.addPropertyValues(project(edge, propertyKeys));
    return embedding;
}