/**
 * Create a new instance of this key function.
 *
 * @param keyFunctions The key functions to be combined.
 */
public CompositeKeyFunction(List<? extends KeyFunction<T, ?>> keyFunctions) {
    this.componentFunctions = Objects.requireNonNull(keyFunctions);
    if (keyFunctions.size() > Tuple.MAX_ARITY) {
        throw new IllegalArgumentException("Too many keys. Maximum tuple arity exceeded: " + keyFunctions.size() + " (max.: " + Tuple.MAX_ARITY + ")");
    }
    reuseTuple = Tuple.newInstance(componentFunctions.size());
}