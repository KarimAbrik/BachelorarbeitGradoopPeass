/**
 * New value equi join operator
 *
 * @param left left hand side data set
 * @param right right hand side data set
 * @param leftJoinProperties join criteria
 * @param rightJoinProperties join criteria
 * @param rightColumns size of the right embedding
 * @param distinctVertexColumnsLeft distinct vertex columns of the left embedding
 * @param distinctVertexColumnsRight distinct vertex columns of the right embedding
 * @param distinctEdgeColumnsLeft distinct edge columns of the left embedding
 * @param distinctEdgeColumnsRight distinct edge columns of the right embedding
 * @param joinHint join hint
 */
public ValueJoin(DataSet<Embedding> left, DataSet<Embedding> right, List<Integer> leftJoinProperties, List<Integer> rightJoinProperties, int rightColumns, List<Integer> distinctVertexColumnsLeft, List<Integer> distinctVertexColumnsRight, List<Integer> distinctEdgeColumnsLeft, List<Integer> distinctEdgeColumnsRight, JoinOperatorBase.JoinHint joinHint) {
    this.left = left;
    this.right = right;
    this.leftJoinProperties = leftJoinProperties;
    this.rightJoinProperties = rightJoinProperties;
    this.rightColumns = rightColumns;
    this.distinctVertexColumnsLeft = distinctVertexColumnsLeft;
    this.distinctVertexColumnsRight = distinctVertexColumnsRight;
    this.distinctEdgeColumnsLeft = distinctEdgeColumnsLeft;
    this.distinctEdgeColumnsRight = distinctEdgeColumnsRight;
    this.joinHint = joinHint;
    this.setName("ValueJoin");
}