/**
 * Test the function by applying it to some tuples.
 *
 * @throws Exception when the execution in Flink fails.
 */
@Test
public void testFunction() throws Exception {
    CreateEdgesFromTriple<EPGMVertex, EPGMEdge> function = new CreateEdgesFromTriple<>(getConfig().getLogicalGraphFactory().getEdgeFactory(), "source", "target");
    VertexFactory<EPGMVertex> vertexFactory = getConfig().getLogicalGraphFactory().getVertexFactory();
    EPGMVertex testVertex1 = vertexFactory.createVertex();
    EPGMVertex testVertex2 = vertexFactory.createVertex();
    GradoopId source1 = GradoopId.get();
    GradoopId source2 = GradoopId.get();
    GradoopId target1 = GradoopId.get();
    GradoopId target2 = GradoopId.get();
    Tuple3<EPGMVertex, GradoopId, GradoopId> tuple1 = new Tuple3<>(testVertex1, source1, target1);
    Tuple3<EPGMVertex, GradoopId, GradoopId> tuple2 = new Tuple3<>(testVertex2, source2, target2);
    List<EPGMEdge> result = getExecutionEnvironment().fromElements(tuple1, tuple2).flatMap(function).collect();
    // Check if the correct number of edges were created and if they are distinct.
    assertEquals(4, result.size());
    // By id.
    assertEquals(4, result.stream().map(EPGMElement::getId).count());
    // By source and target id.
    assertEquals(4, result.stream().map(e -> Tuple2.of(e.getSourceId(), e.getTargetId())).distinct().count());
    // Finally check the data of the edges.
    for (EPGMEdge resultEdge : result) {
        if (resultEdge.getLabel().equals("source")) {
            if (resultEdge.getSourceId().equals(source1)) {
                assertEquals(testVertex1.getId(), resultEdge.getTargetId());
            } else if (resultEdge.getSourceId().equals(source2)) {
                assertEquals(testVertex2.getId(), resultEdge.getTargetId());
            } else {
                fail("EPGMEdge with invalid source ID created.");
            }
        } else if (resultEdge.getLabel().equals("target")) {
            if (resultEdge.getSourceId().equals(testVertex1.getId())) {
                assertEquals(target1, resultEdge.getTargetId());
            } else if (resultEdge.getSourceId().equals(testVertex2.getId())) {
                assertEquals(target2, resultEdge.getTargetId());
            } else {
                fail("EPGMEdge with invalid source ID created.");
            }
        } else {
            fail("EPGMEdge with invalid label created.");
        }
    }
}