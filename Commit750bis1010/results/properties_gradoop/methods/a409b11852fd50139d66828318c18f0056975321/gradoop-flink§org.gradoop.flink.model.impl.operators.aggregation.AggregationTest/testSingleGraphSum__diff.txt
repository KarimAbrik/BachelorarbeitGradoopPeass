/**
 * Test SumProperty, VertexSumProperty and EdgeSumProperty with a single graph.
 *
 * @throws Exception if the execution fails.
 */
@Test
public void testSingleGraphSum() throws Exception {
    LogicalGraph graph = getLoaderFromString("org:Ga[" + "(:Va{p : 0.5f})-[:ea{p : 2}]->(:Vb{p : 3.1f})" + "(:Vc{p : 0.33f})-[:eb]->(:Vd{p : 0.0f})" + "]").getLogicalGraphByVariable("org");
    SumVertexProperty sumVertexProperty = new SumVertexProperty(PROPERTY, VERTEX_AGGREGATE_PROPERTY);
    SumEdgeProperty sumEdgeProperty = new SumEdgeProperty(PROPERTY, EDGE_AGGREGATE_PROPERTY);
    SumProperty sumProperty = new SumProperty(PROPERTY, ELEMENT_AGGREGATE_PROPERTY);
    graph = graph.aggregate(sumVertexProperty).aggregate(sumEdgeProperty).aggregate(sumProperty);
    GraphHead graphHead = graph.getGraphHead().collect().get(0);
    assertTrue("edge sum not set", graphHead.hasProperty(sumEdgeProperty.getAggregatePropertyKey()));
    assertTrue("vertex sum not set", graphHead.hasProperty(sumVertexProperty.getAggregatePropertyKey()));
    assertTrue("element sum not set", graphHead.hasProperty(sumProperty.getAggregatePropertyKey()));
    assertEquals(2, graphHead.getPropertyValue(sumEdgeProperty.getAggregatePropertyKey()).getInt());
    assertEquals(3.93f, graphHead.getPropertyValue(sumVertexProperty.getAggregatePropertyKey()).getFloat(), 0.00001f);
    assertEquals(5.93f, graphHead.getPropertyValue(sumProperty.getAggregatePropertyKey()).getFloat(), 0.00001f);
}