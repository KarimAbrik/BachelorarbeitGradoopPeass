/**
 * Returns one subgraph for each of the given supergraphs.
 * The subgraphs are defined by the edges that fulfil the vertex filter function.
 *
 * @param collection collection of supergraphs
 * @return collection of edge-induced subgraphs
 */
private GC edgeInducedSubgraph(GC collection) {
    DataSet<E> filteredEdges = collection.getEdges().filter(edgeFilterFunction);
    DataSet<V> inducedVertices = filteredEdges.join(collection.getVertices()).where(new SourceId<>()).equalTo(new Id<>()).with(new RightSideWithLeftGraphs<>()).union(filteredEdges.join(collection.getVertices()).where(new TargetId<>()).equalTo(new Id<>()).with(new RightSideWithLeftGraphs<>())).distinct(new Id<>());
    return collection.getFactory().fromDataSets(collection.getGraphHeads(), inducedVertices, filteredEdges);
}