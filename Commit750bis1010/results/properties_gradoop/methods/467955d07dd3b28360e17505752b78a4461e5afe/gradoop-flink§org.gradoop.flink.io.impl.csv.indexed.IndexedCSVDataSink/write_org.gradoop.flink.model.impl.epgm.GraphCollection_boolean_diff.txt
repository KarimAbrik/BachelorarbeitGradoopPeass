@Override
public void write(GraphCollection graphCollection, boolean overwrite) throws IOException {
    WriteMode writeMode = overwrite ? WriteMode.OVERWRITE : WriteMode.NO_OVERWRITE;
    DataSet<Tuple3<String, String, String>> metaData;
    CSVMetaDataSource source = new CSVMetaDataSource();
    if (!reuseMetadata()) {
        metaData = source.tuplesFromCollection(graphCollection);
    } else {
        metaData = source.readDistributed(metaDataPath, getConfig());
    }
    DataSet<CSVGraphHead> csvGraphHeads = graphCollection.getGraphHeads().map(new GraphHeadToCSVGraphHead()).withBroadcastSet(metaData, BC_METADATA);
    DataSet<CSVVertex> csvVertices = graphCollection.getVertices().map(new VertexToCSVVertex()).withBroadcastSet(metaData, BC_METADATA);
    DataSet<CSVEdge> csvEdges = graphCollection.getEdges().map(new EdgeToCSVEdge()).withBroadcastSet(metaData, BC_METADATA);
    if (!getMetaDataPath().equals(metaDataPath) || !reuseMetadata()) {
        new CSVMetaDataSink().writeDistributed(getMetaDataPath(), metaData, writeMode);
    }
    IndexedCSVFileFormat<CSVGraphHead> graphHeadFormat = new IndexedCSVFileFormat<>(new Path(getGraphHeadPath()), CSVConstants.ROW_DELIMITER, CSVConstants.TOKEN_DELIMITER);
    graphHeadFormat.setWriteMode(writeMode);
    csvGraphHeads.output(graphHeadFormat);
    IndexedCSVFileFormat<CSVVertex> vertexFormat = new IndexedCSVFileFormat<>(new Path(getVertexPath()), CSVConstants.ROW_DELIMITER, CSVConstants.TOKEN_DELIMITER);
    vertexFormat.setWriteMode(writeMode);
    csvVertices.output(vertexFormat);
    IndexedCSVFileFormat<CSVEdge> edgeFormat = new IndexedCSVFileFormat<>(new Path(getEdgePath()), CSVConstants.ROW_DELIMITER, CSVConstants.TOKEN_DELIMITER);
    edgeFormat.setWriteMode(writeMode);
    csvEdges.output(edgeFormat);
}