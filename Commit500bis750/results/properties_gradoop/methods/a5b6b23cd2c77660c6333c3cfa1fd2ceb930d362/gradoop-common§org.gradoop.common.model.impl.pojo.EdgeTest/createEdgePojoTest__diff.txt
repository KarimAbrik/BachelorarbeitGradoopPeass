@Test                                                                                                  @Test                                                                                               
public void createEdgePojoTest() {                                                                     public void createEdgePojoTest() {                                                                  
GradoopId edgeId = GradoopId.get();                                                                    GradoopId edgeId = GradoopId.get();                                                                 
GradoopId sourceId = GradoopId.get();                                                                  GradoopId sourceId = GradoopId.get();                                                               
GradoopId targetId = GradoopId.get();                                                                  GradoopId targetId = GradoopId.get();                                                               
GradoopIds graphIds = GradoopIds.fromExisting(GradoopId.get(), GradoopId.get());                     | GradoopIdSet graphIds = GradoopIdSet.fromExisting(GradoopId.get(), GradoopId.get());                
String label = "A";                                                                                    String label = "A";                                                                                 
Properties props = Properties.create();                                                                Properties props = Properties.create();                                                             
props.set("k1", "v1");                                                                                 props.set("k1", "v1");                                                                              
props.set("k2", "v2");                                                                                 props.set("k2", "v2");                                                                              
EPGMEdge edge = new EdgeFactory().initEdge(edgeId, label, sourceId, targetId, props, graphIds);        EPGMEdge edge = new EdgeFactory().initEdge(edgeId, label, sourceId, targetId, props, graphIds);     
assertThat(edge.getId(), is(edgeId));                                                                  assertThat(edge.getId(), is(edgeId));                                                               
assertEquals(label, edge.getLabel());                                                                  assertEquals(label, edge.getLabel());                                                               
assertThat(edge.getSourceId(), is(sourceId));                                                          assertThat(edge.getSourceId(), is(sourceId));                                                       
assertThat(edge.getTargetId(), is(targetId));                                                          assertThat(edge.getTargetId(), is(targetId));                                                       
assertThat(edge.getPropertyCount(), is(2));                                                            assertThat(edge.getPropertyCount(), is(2));                                                         
assertThat(edge.getPropertyValue("k1").getString(), Is.&lt;Object&gt;is("v1"));                        assertThat(edge.getPropertyValue("k1").getString(), Is.&lt;Object&gt;is("v1"));                     
assertThat(edge.getPropertyValue("k2").getString(), Is.&lt;Object&gt;is("v2"));                        assertThat(edge.getPropertyValue("k2").getString(), Is.&lt;Object&gt;is("v2"));                     
assertThat(edge.getGraphCount(), is(2));                                                               assertThat(edge.getGraphCount(), is(2));                                                            
for (GradoopId graphId : graphIds) {                                                                   for (GradoopId graphId : graphIds) {                                                                
assertTrue(edge.getGraphIds().contains(graphId));                                                      assertTrue(edge.getGraphIds().contains(graphId));                                                   
}                                                                                                      }                                                                                                   
}                                                                                                      }                                                                                                   
