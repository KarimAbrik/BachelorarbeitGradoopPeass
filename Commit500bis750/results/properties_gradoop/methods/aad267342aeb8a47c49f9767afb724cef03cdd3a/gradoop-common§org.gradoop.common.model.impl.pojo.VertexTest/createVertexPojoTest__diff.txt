@Test                                                                                                  @Test                                                                                               
public void createVertexPojoTest() {                                                                   public void createVertexPojoTest() {                                                                
GradoopId vertexID = GradoopId.get();                                                                  GradoopId vertexID = GradoopId.get();                                                               
String label = "A";                                                                                    String label = "A";                                                                                 
Properties props = Properties.create();                                                                Properties props = Properties.create();                                                             
props.set("k1", "v1");                                                                                 props.set("k1", "v1");                                                                              
props.set("k2", "v2");                                                                                 props.set("k2", "v2");                                                                              
GradoopId graphId1 = GradoopId.get();                                                                  GradoopId graphId1 = GradoopId.get();                                                               
GradoopId graphId2 = GradoopId.get();                                                                  GradoopId graphId2 = GradoopId.get();                                                               
GradoopIdList graphIds = new GradoopIdList();                                                        | GradoopIds graphIds = new GradoopIds();                                                             
graphIds.add(graphId1);                                                                                graphIds.add(graphId1);                                                                             
graphIds.add(graphId2);                                                                                graphIds.add(graphId2);                                                                             
EPGMVertex vertex = new VertexFactory().initVertex(vertexID, label, props, graphIds);                  EPGMVertex vertex = new VertexFactory().initVertex(vertexID, label, props, graphIds);               
assertThat(vertex.getId(), is(vertexID));                                                              assertThat(vertex.getId(), is(vertexID));                                                           
assertEquals(label, vertex.getLabel());                                                                assertEquals(label, vertex.getLabel());                                                             
assertThat(vertex.getPropertyCount(), is(2));                                                          assertThat(vertex.getPropertyCount(), is(2));                                                       
assertThat(vertex.getPropertyValue("k1").getString(), Is.&lt;Object&gt;is("v1"));                      assertThat(vertex.getPropertyValue("k1").getString(), Is.&lt;Object&gt;is("v1"));                   
assertThat(vertex.getPropertyValue("k2").getString(), Is.&lt;Object&gt;is("v2"));                      assertThat(vertex.getPropertyValue("k2").getString(), Is.&lt;Object&gt;is("v2"));                   
assertThat(vertex.getGraphCount(), is(2));                                                             assertThat(vertex.getGraphCount(), is(2));                                                          
assertTrue(vertex.getGraphIds().contains(graphId1));                                                   assertTrue(vertex.getGraphIds().contains(graphId1));                                                
assertTrue(vertex.getGraphIds().contains(graphId2));                                                   assertTrue(vertex.getGraphIds().contains(graphId2));                                                
}                                                                                                      }                                                                                                   
