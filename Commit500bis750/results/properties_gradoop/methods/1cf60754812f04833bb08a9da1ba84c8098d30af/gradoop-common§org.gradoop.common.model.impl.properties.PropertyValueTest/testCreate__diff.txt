@Test                                                                                                  @Test                                                                                               
public void testCreate() throws Exception {                                                            public void testCreate() throws Exception {                                                         
// null                                                                                                // null                                                                                             
PropertyValue p = create(null);                                                                        PropertyValue p = create(null);                                                                     
assertTrue(p.isNull());                                                                                assertTrue(p.isNull());                                                                             
assertNull(p.getObject());                                                                             assertNull(p.getObject());                                                                          
// boolean                                                                                             // boolean                                                                                          
p = create(BOOL_VAL_1);                                                                                p = create(BOOL_VAL_1);                                                                             
assertTrue(p.isBoolean());                                                                             assertTrue(p.isBoolean());                                                                          
assertEquals(BOOL_VAL_1, p.getBoolean());                                                              assertEquals(BOOL_VAL_1, p.getBoolean());                                                           
                                                                                                     | // short                                                                                            
                                                                                                     | p = create(SHORT_VAL_e);                                                                            
                                                                                                     | assertTrue(p.isShort());                                                                            
                                                                                                     | assertEquals(SHORT_VAL_e, p.getShort());                                                            
// int                                                                                                 // int                                                                                              
p = create(INT_VAL_2);                                                                                 p = create(INT_VAL_2);                                                                              
assertTrue(p.isInt());                                                                                 assertTrue(p.isInt());                                                                              
assertEquals(INT_VAL_2, p.getInt());                                                                   assertEquals(INT_VAL_2, p.getInt());                                                                
// long                                                                                                // long                                                                                             
p = create(LONG_VAL_3);                                                                                p = create(LONG_VAL_3);                                                                             
assertTrue(p.isLong());                                                                                assertTrue(p.isLong());                                                                             
assertEquals(LONG_VAL_3, p.getLong());                                                                 assertEquals(LONG_VAL_3, p.getLong());                                                              
// float                                                                                               // float                                                                                            
p = create(FLOAT_VAL_4);                                                                               p = create(FLOAT_VAL_4);                                                                            
assertTrue(p.isFloat());                                                                               assertTrue(p.isFloat());                                                                            
assertEquals(FLOAT_VAL_4, p.getFloat(), 0);                                                            assertEquals(FLOAT_VAL_4, p.getFloat(), 0);                                                         
// double                                                                                              // double                                                                                           
p = create(DOUBLE_VAL_5);                                                                              p = create(DOUBLE_VAL_5);                                                                           
assertTrue(p.isDouble());                                                                              assertTrue(p.isDouble());                                                                           
assertEquals(DOUBLE_VAL_5, p.getDouble(), 0);                                                          assertEquals(DOUBLE_VAL_5, p.getDouble(), 0);                                                       
// String                                                                                              // String                                                                                           
p = create(STRING_VAL_6);                                                                              p = create(STRING_VAL_6);                                                                           
assertTrue(p.isString());                                                                              assertTrue(p.isString());                                                                           
assertEquals(STRING_VAL_6, p.getString());                                                             assertEquals(STRING_VAL_6, p.getString());                                                          
// BigDecimal                                                                                          // BigDecimal                                                                                       
p = create(BIG_DECIMAL_VAL_7);                                                                         p = create(BIG_DECIMAL_VAL_7);                                                                      
assertTrue(p.isBigDecimal());                                                                          assertTrue(p.isBigDecimal());                                                                       
assertEquals(BIG_DECIMAL_VAL_7, p.getBigDecimal());                                                    assertEquals(BIG_DECIMAL_VAL_7, p.getBigDecimal());                                                 
//GradoopId                                                                                            //GradoopId                                                                                         
p = create(GRADOOP_ID_VAL_8);                                                                          p = create(GRADOOP_ID_VAL_8);                                                                       
assertTrue(p.isGradoopId());                                                                           assertTrue(p.isGradoopId());                                                                        
assertEquals(GRADOOP_ID_VAL_8, p.getGradoopId());                                                      assertEquals(GRADOOP_ID_VAL_8, p.getGradoopId());                                                   
//Map                                                                                                  //Map                                                                                               
p = create(MAP_VAL_9);                                                                                 p = create(MAP_VAL_9);                                                                              
assertTrue(p.isMap());                                                                                 assertTrue(p.isMap());                                                                              
assertEquals(MAP_VAL_9, p.getMap());                                                                   assertEquals(MAP_VAL_9, p.getMap());                                                                
//List                                                                                                 //List                                                                                              
p = create(LIST_VAL_a);                                                                                p = create(LIST_VAL_a);                                                                             
assertTrue(p.isList());                                                                                assertTrue(p.isList());                                                                             
assertEquals(LIST_VAL_a, p.getList());                                                                 assertEquals(LIST_VAL_a, p.getList());                                                              
//Date                                                                                                 //Date                                                                                              
p = create(DATE_VAL_b);                                                                                p = create(DATE_VAL_b);                                                                             
assertTrue(p.isDate());                                                                                assertTrue(p.isDate());                                                                             
assertEquals(DATE_VAL_b, p.getDate());                                                                 assertEquals(DATE_VAL_b, p.getDate());                                                              
//Time                                                                                                 //Time                                                                                              
p = create(TIME_VAL_c);                                                                                p = create(TIME_VAL_c);                                                                             
assertTrue(p.isTime());                                                                                assertTrue(p.isTime());                                                                             
assertEquals(TIME_VAL_c, p.getTime());                                                                 assertEquals(TIME_VAL_c, p.getTime());                                                              
//DateTime                                                                                             //DateTime                                                                                          
p = create(DATETIME_VAL_d);                                                                            p = create(DATETIME_VAL_d);                                                                         
assertTrue(p.isDateTime());                                                                            assertTrue(p.isDateTime());                                                                         
assertEquals(DATETIME_VAL_d, p.getDateTime());                                                         assertEquals(DATETIME_VAL_d, p.getDateTime());                                                      
}                                                                                                      }                                                                                                   
