@Test
public void testIterator() throws Exception {
    PropertyValueList p = PropertyValueList.fromPropertyValues(Lists.newArrayList(PropertyValue.create(GradoopTestUtils.NULL_VAL_0), PropertyValue.create(GradoopTestUtils.BOOL_VAL_1), PropertyValue.create(GradoopTestUtils.INT_VAL_2), PropertyValue.create(GradoopTestUtils.LONG_VAL_3), PropertyValue.create(GradoopTestUtils.FLOAT_VAL_4), PropertyValue.create(GradoopTestUtils.DOUBLE_VAL_5), PropertyValue.create(GradoopTestUtils.STRING_VAL_6), PropertyValue.create(GradoopTestUtils.BIG_DECIMAL_VAL_7)));
    List<PropertyValue> expected = Lists.newArrayList(p);
    assertEquals(8, expected.size());
    assertTrue(expected.contains(PropertyValue.create(GradoopTestUtils.NULL_VAL_0)));
    assertTrue(expected.contains(PropertyValue.create(GradoopTestUtils.BOOL_VAL_1)));
    assertTrue(expected.contains(PropertyValue.create(GradoopTestUtils.INT_VAL_2)));
    assertTrue(expected.contains(PropertyValue.create(GradoopTestUtils.LONG_VAL_3)));
    assertTrue(expected.contains(PropertyValue.create(GradoopTestUtils.FLOAT_VAL_4)));
    assertTrue(expected.contains(PropertyValue.create(GradoopTestUtils.DOUBLE_VAL_5)));
    assertTrue(expected.contains(PropertyValue.create(GradoopTestUtils.STRING_VAL_6)));
    assertTrue(expected.contains(PropertyValue.create(GradoopTestUtils.BIG_DECIMAL_VAL_7)));
}