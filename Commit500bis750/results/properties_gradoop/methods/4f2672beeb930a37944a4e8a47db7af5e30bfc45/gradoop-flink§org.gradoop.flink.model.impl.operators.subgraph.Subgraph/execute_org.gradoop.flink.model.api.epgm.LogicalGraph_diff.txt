@Override
public LogicalGraph execute(LogicalGraph superGraph) {
    LogicalGraph result;
    switch(strategy) {
        case BOTH:
            result = subgraph(superGraph);
            break;
        case BOTH_VERIFIED:
            result = verify(subgraph(superGraph));
            break;
        case VERTEX_INDUCED:
            result = vertexInducedSubgraph(superGraph);
            break;
        case EDGE_INDUCED:
            result = edgeInducedSubgraph(superGraph);
            break;
        case EDGE_INDUCED_PROJECT_FIRST:
            result = edgeInducedSubgraphProjectFirst(superGraph);
            break;
        default:
            throw new IllegalArgumentException("Strategy " + strategy + " is not supported");
    }
    return result;
}