@Override                                                                                              @Override                                                                                           
public int compareTo(PropertyValue o) {                                                                public int compareTo(PropertyValue o) {                                                             
int result;                                                                                            int result;                                                                                         
if (this.isNull() && o.isNull()) {                                                                     if (this.isNull() && o.isNull()) {                                                                  
result = 0;                                                                                            result = 0;                                                                                         
                                                                                                     | } else if (this.isNumber() && o.isNumber()) {                                                       
                                                                                                     | result = PropertyValueUtils.Numeric.compare(this, o);                                               
} else if (this.isBoolean() && o.isBoolean()) {                                                        } else if (this.isBoolean() && o.isBoolean()) {                                                     
result = Boolean.compare(this.getBoolean(), o.getBoolean());                                           result = Boolean.compare(this.getBoolean(), o.getBoolean());                                        
} else if (this.isShort() && o.isShort()) {                                                          |                                                                                                     
result = Short.compare(this.getShort(), o.getShort());                                               |                                                                                                     
} else if (this.isInt() && o.isInt()) {                                                              |                                                                                                     
result = Integer.compare(this.getInt(), o.getInt());                                                 |                                                                                                     
} else if (this.isLong() && o.isLong()) {                                                            |                                                                                                     
result = Long.compare(this.getLong(), o.getLong());                                                  |                                                                                                     
} else if (this.isFloat() && o.isFloat()) {                                                          |                                                                                                     
result = Float.compare(this.getFloat(), o.getFloat());                                               |                                                                                                     
} else if (this.isDouble() && o.isDouble()) {                                                        |                                                                                                     
result = Double.compare(this.getDouble(), o.getDouble());                                            |                                                                                                     
} else if (this.isString() && o.isString()) {                                                          } else if (this.isString() && o.isString()) {                                                       
result = this.getString().compareTo(o.getString());                                                    result = this.getString().compareTo(o.getString());                                                 
} else if (this.isBigDecimal() && o.isBigDecimal()) {                                                |                                                                                                     
result = this.getBigDecimal().compareTo(o.getBigDecimal());                                          |                                                                                                     
} else if (this.isGradoopId() && o.isGradoopId()) {                                                    } else if (this.isGradoopId() && o.isGradoopId()) {                                                 
result = this.getGradoopId().compareTo(o.getGradoopId());                                              result = this.getGradoopId().compareTo(o.getGradoopId());                                           
} else if (this.isDate() && o.isDate()) {                                                              } else if (this.isDate() && o.isDate()) {                                                           
result = this.getDate().compareTo(o.getDate());                                                        result = this.getDate().compareTo(o.getDate());                                                     
} else if (this.isTime() && o.isTime()) {                                                              } else if (this.isTime() && o.isTime()) {                                                           
result = this.getTime().compareTo(o.getTime());                                                        result = this.getTime().compareTo(o.getTime());                                                     
} else if (this.isDateTime() && o.isDateTime()) {                                                      } else if (this.isDateTime() && o.isDateTime()) {                                                   
result = this.getDateTime().compareTo(o.getDateTime());                                                result = this.getDateTime().compareTo(o.getDateTime());                                             
} else if (this.isMap() || o.isMap() || this.isList() || o.isList()) {                                 } else if (this.isMap() || o.isMap() || this.isList() || o.isList()) {                              
throw new UnsupportedOperationException(String.format("Method compareTo() is not supported for %s, %   throw new UnsupportedOperationException(String.format("Method compareTo() is not supported for %s, %
} else {                                                                                               } else {                                                                                            
throw new IllegalArgumentException(String.format("Incompatible types: %s, %s", this.getClass(), o.ge   throw new IllegalArgumentException(String.format("Incompatible types: %s, %s", this.getClass(), o.ge
}                                                                                                      }                                                                                                   
return result;                                                                                         return result;                                                                                      
}                                                                                                      }                                                                                                   
