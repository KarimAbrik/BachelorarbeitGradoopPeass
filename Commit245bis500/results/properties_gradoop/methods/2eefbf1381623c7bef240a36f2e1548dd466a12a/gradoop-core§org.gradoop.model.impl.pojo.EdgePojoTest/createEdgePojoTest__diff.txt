@Test
public void createEdgePojoTest() {
    GradoopIdGenerator idGen = new SequenceIdGenerator();
    GradoopId edgeId = idGen.createId();
    GradoopId sourceId = idGen.createId();
    GradoopId targetId = idGen.createId();
    String label = "A";
    Map<String, Object> props = Maps.newHashMapWithExpectedSize(2);
    props.put("k1", "v1");
    props.put("k2", "v2");
    GradoopIds graphs = GradoopIds.fromLongs(0L, 1L);
    EPGMEdge edge = new EdgePojoFactory().createEdge(edgeId, label, sourceId, targetId, props, graphs);
    assertThat(edge.getId(), is(edgeId));
    assertEquals(label, edge.getLabel());
    assertThat(edge.getSourceVertexId(), is(sourceId));
    assertThat(edge.getTargetVertexId(), is(targetId));
    assertThat(edge.getPropertyCount(), is(2));
    assertThat(edge.getProperty("k1"), Is.<Object>is("v1"));
    assertThat(edge.getProperty("k2"), Is.<Object>is("v2"));
    assertThat(edge.getGraphCount(), is(2));
    assertTrue(edge.getGraphIds().contains(GradoopId.fromLong(0L)));
    assertTrue(edge.getGraphIds().contains(GradoopId.fromLong(1L)));
}