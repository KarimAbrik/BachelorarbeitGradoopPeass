@Test
public void testPropertyEquality() {
    String asciiGraphs = "ref[({x=1})-[{x=2}]->({x=3})];" + "dup[({x=1})-[{x=2}]->({x=3})];" + "eDir[({x=1})<-[{x=2}]-({x=3})];" + "vLabel[({y=1})-[{x=2}]->({x=3})];" + "eLabel[({x=1})-{y=2}->({x=3})];" + "vValue[({x=0})-[{x=2}]->({x=3})];" + "eValue[({x=1})-[{x=0}]->({x=3})];";
    FlinkAsciiGraphLoader loader = new FlinkAsciiGraphLoader();
    loader.readDatabaseFromString(asciiGraphs);
    LogicalGraph<VertexPojo, EdgePojo, GraphHeadPojo> ref = loader.getLogicalGraphByVariable("ref");
    LogicalGraph<VertexPojo, EdgePojo, GraphHeadPojo> dup = loader.getLogicalGraphByVariable("dup");
    LogicalGraph<VertexPojo, EdgePojo, GraphHeadPojo> eDir = loader.getLogicalGraphByVariable("eDir");
    LogicalGraph<VertexPojo, EdgePojo, GraphHeadPojo> vLabel = loader.getLogicalGraphByVariable("vLabel");
    LogicalGraph<VertexPojo, EdgePojo, GraphHeadPojo> eLabel = loader.getLogicalGraphByVariable("eLabel");
    LogicalGraph<VertexPojo, EdgePojo, GraphHeadPojo> vValue = loader.getLogicalGraphByVariable("vValue");
    LogicalGraph<VertexPojo, EdgePojo, GraphHeadPojo> eValue = loader.getLogicalGraphByVariable("eValue");
    collectAndAssertEquals(new EqualByElementData().execute(ref, dup));
    collectAndAssertNotEquals(new EqualByElementData().execute(ref, eDir));
    collectAndAssertNotEquals(new EqualByElementData().execute(ref, vLabel));
    collectAndAssertNotEquals(new EqualByElementData().execute(ref, eLabel));
    collectAndAssertNotEquals(new EqualByElementData().execute(ref, vValue));
    collectAndAssertNotEquals(new EqualByElementData().execute(ref, eValue));
}