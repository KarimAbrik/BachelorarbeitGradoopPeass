/**
 * Constructs new edges by joining the edges of the first graph with the new
 * vertices.
 *
 * @param newVertices vertex set of the resulting graph collection
 * @return edges set only connect vertices in {@code newVertices}
 * @see Difference
 * @see Intersect
 */
@Override
protected DataSet<Edge<Long, ED>> computeNewEdges(DataSet<Vertex<Long, VD>> newVertices) {
    return firstGraph.getEdges().join(newVertices).where(new KeySelectors.EdgeSourceVertexKeySelector<ED>()).equalTo(new KeySelectors.VertexKeySelector<VD>()).with(new EdgeJoinFunction<VD, ED>()).join(newVertices).where(new KeySelectors.EdgeTargetVertexKeySelector<ED>()).equalTo(new KeySelectors.VertexKeySelector<VD>()).with(new EdgeJoinFunction<VD, ED>()).distinct(new KeySelectors.EdgeKeySelector<ED>());
}