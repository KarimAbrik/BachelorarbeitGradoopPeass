@Override
protected EPGraph executeInternal(EPGraph firstGraph, EPGraph secondGraph) {
    final Long newGraphID = FlinkConstants.COMBINE_GRAPH_ID;
    Graph<Long, VertexData, EdgeData> graph1 = firstGraph.getGellyGraph();
    Graph<Long, VertexData, EdgeData> graph2 = secondGraph.getGellyGraph();
    // build distinct union of vertex sets and update graph ids at vertices
    // cannot use Gelly union here because of missing argument for KeySelector
    DataSet<Vertex<Long, VertexData>> newVertexSet = graph1.getVertices().union(graph2.getVertices()).distinct(VERTEX_ID).map(new VertexToGraphUpdater(newGraphID));
    DataSet<Edge<Long, EdgeData>> newEdgeSet = graph1.getEdges().union(graph2.getEdges()).distinct(EDGE_ID).map(new EdgeToGraphUpdater(newGraphID));
    return EPGraph.fromGraph(Graph.fromDataSet(newVertexSet, newEdgeSet, graph1.getContext()), GraphDataFactory.createDefaultGraphWithID(newGraphID));
}